

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Jul 06 19:56:09 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43  0000                     
    44                           ; Version 2.10
    45                           ; Generated 31/07/2019 GMT
    46                           ; 
    47                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F4520 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79                           	psect	idataCOMRAM
    80  001560                     __pidataCOMRAM:
    81                           	opt callstack 0
    82                           
    83                           ;initializer for _cont
    84  001560  0320               	dw	800
    85  001562  028A               	dw	650
    86  001564  0190               	dw	400
    87  001566  00C8               	dw	200
    88  001568  0096               	dw	150
    89                           
    90                           ;initializer for _numeros
    91  00156A  30                 	db	48
    92  00156B  31                 	db	49
    93  00156C  32                 	db	50
    94  00156D  33                 	db	51
    95  00156E  34                 	db	52
    96  00156F  35                 	db	53
    97  001570  36                 	db	54
    98  001571  37                 	db	55
    99  001572  38                 	db	56
   100  001573  39                 	db	57
   101                           
   102                           ;initializer for _pontuacaoLed
   103  001574  00                 	db	0
   104  001575  01                 	db	1
   105  001576  03                 	db	3
   106  001577  07                 	db	7
   107  001578  0F                 	db	15
   108  001579  1F                 	db	31
   109                           
   110                           ;initializer for _atraso
   111  00157A  000F               	dw	15
   112                           
   113                           ;initializer for _atraso_min
   114  00157C  0005               	dw	5
   115                           
   116                           ;initializer for _delay
   117  00157E  1388               	dw	5000
   118                           
   119                           ;initializer for _contD
   120  001580  03E8               	dw	1000
   121                           
   122                           	psect	idataBANK0
   123  0015BA                     __pidataBANK0:
   124                           	opt callstack 0
   125                           
   126                           ;initializer for _valores7seg
   127  0015BA  003F               	dw	63
   128  0015BC  0006               	dw	6
   129  0015BE  005B               	dw	91
   130  0015C0  004F               	dw	79
   131  0015C2  0066               	dw	102
   132  0015C4  006D               	dw	109
   133  0015C6  007D               	dw	125
   134  0015C8  0007               	dw	7
   135  0015CA  007F               	dw	127
   136  0015CC  006F               	dw	111
   137                           
   138                           	psect	smallconst
   139  000600                     __psmallconst:
   140                           	opt callstack 0
   141  000600  00                 	db	0
   142  000601                     _linha:
   143                           	opt callstack 0
   144  000601  01                 	db	1
   145  000602  02                 	db	2
   146  000603  04                 	db	4
   147  000604  00                 	db	0
   148  000605                     __end_of_linha:
   149                           	opt callstack 0
   150  000605                     STR_2:
   151  000605  20                 	db	32
   152  000606  20                 	db	32
   153  000607  20                 	db	32
   154  000608  42                 	db	66	;'B'
   155  000609  45                 	db	69	;'E'
   156  00060A  4D                 	db	77	;'M'
   157  00060B  20                 	db	32
   158  00060C  56                 	db	86	;'V'
   159  00060D  49                 	db	73	;'I'
   160  00060E  4E                 	db	78	;'N'
   161  00060F  44                 	db	68	;'D'
   162  000610  4F                 	db	79	;'O'
   163  000611  21                 	db	33
   164  000612  20                 	db	32
   165  000613  00                 	db	0
   166  000614                     STR_9:
   167  000614  20                 	db	32
   168  000615  20                 	db	32
   169  000616  43                 	db	67	;'C'
   170  000617  4F                 	db	79	;'O'
   171  000618  52                 	db	82	;'R'
   172  000619  52                 	db	82	;'R'
   173  00061A  45                 	db	69	;'E'
   174  00061B  54                 	db	84	;'T'
   175  00061C  4F                 	db	79	;'O'
   176  00061D  21                 	db	33
   177  00061E  20                 	db	32
   178  00061F  3A                 	db	58	;':'
   179  000620  29                 	db	41
   180  000621  20                 	db	32
   181  000622  00                 	db	0
   182  000623                     STR_1:
   183  000623  20                 	db	32
   184  000624  20                 	db	32
   185  000625  20                 	db	32
   186  000626  43                 	db	67	;'C'
   187  000627  41                 	db	65	;'A'
   188  000628  52                 	db	82	;'R'
   189  000629  52                 	db	82	;'R'
   190  00062A  45                 	db	69	;'E'
   191  00062B  47                 	db	71	;'G'
   192  00062C  41                 	db	65	;'A'
   193  00062D  4E                 	db	78	;'N'
   194  00062E  44                 	db	68	;'D'
   195  00062F  4F                 	db	79	;'O'
   196  000630  20                 	db	32
   197  000631  00                 	db	0
   198  000632                     STR_11:
   199  000632  20                 	db	32
   200  000633  49                 	db	73	;'I'
   201  000634  4E                 	db	78	;'N'
   202  000635  43                 	db	67	;'C'
   203  000636  4F                 	db	79	;'O'
   204  000637  52                 	db	82	;'R'
   205  000638  52                 	db	82	;'R'
   206  000639  45                 	db	69	;'E'
   207  00063A  54                 	db	84	;'T'
   208  00063B  4F                 	db	79	;'O'
   209  00063C  21                 	db	33
   210  00063D  20                 	db	32
   211  00063E  3A                 	db	58	;':'
   212  00063F  28                 	db	40
   213  000640  00                 	db	0
   214  000641                     STR_4:
   215  000641  20                 	db	32
   216  000642  20                 	db	32
   217  000643  20                 	db	32
   218  000644  4D                 	db	77	;'M'
   219  000645  45                 	db	69	;'E'
   220  000646  4D                 	db	77	;'M'
   221  000647  4F                 	db	79	;'O'
   222  000648  52                 	db	82	;'R'
   223  000649  49                 	db	73	;'I'
   224  00064A  5A                 	db	90	;'Z'
   225  00064B  45                 	db	69	;'E'
   226  00064C  21                 	db	33
   227  00064D  20                 	db	32
   228  00064E  00                 	db	0
   229  00064F                     STR_14:
   230  00064F  20                 	db	32
   231  000650  20                 	db	32
   232  000651  20                 	db	32
   233  000652  50                 	db	80	;'P'
   234  000653  4F                 	db	79	;'O'
   235  000654  52                 	db	82	;'R'
   236  000655  20                 	db	32
   237  000656  4A                 	db	74	;'J'
   238  000657  4F                 	db	79	;'O'
   239  000658  47                 	db	71	;'G'
   240  000659  41                 	db	65	;'A'
   241  00065A  52                 	db	82	;'R'
   242  00065B  21                 	db	33
   243  00065C  00                 	db	0
   244  00065D                     STR_3:
   245  00065D  50                 	db	80	;'P'
   246  00065E  52                 	db	82	;'R'
   247  00065F  45                 	db	69	;'E'
   248  000660  53                 	db	83	;'S'
   249  000661  53                 	db	83	;'S'
   250  000662  49                 	db	73	;'I'
   251  000663  4F                 	db	79	;'O'
   252  000664  4E                 	db	78	;'N'
   253  000665  45                 	db	69	;'E'
   254  000666  20                 	db	32
   255  000667  52                 	db	82	;'R'
   256  000668  42                 	db	66	;'B'
   257  000669  33                 	db	51	;'3'
   258  00066A  00                 	db	0
   259  00066B                     STR_13:
   260  00066B  20                 	db	32
   261  00066C  20                 	db	32
   262  00066D  20                 	db	32
   263  00066E  20                 	db	32
   264  00066F  4F                 	db	79	;'O'
   265  000670  42                 	db	66	;'B'
   266  000671  52                 	db	82	;'R'
   267  000672  49                 	db	73	;'I'
   268  000673  47                 	db	71	;'G'
   269  000674  41                 	db	65	;'A'
   270  000675  44                 	db	68	;'D'
   271  000676  4F                 	db	79	;'O'
   272  000677  00                 	db	0
   273  000678                     STR_6:
   274  000678  49                 	db	73	;'I'
   275  000679  4E                 	db	78	;'N'
   276  00067A  53                 	db	83	;'S'
   277  00067B  49                 	db	73	;'I'
   278  00067C  52                 	db	82	;'R'
   279  00067D  41                 	db	65	;'A'
   280  00067E  20                 	db	32
   281  00067F  4F                 	db	79	;'O'
   282  000680  53                 	db	83	;'S'
   283  000681  00                 	db	0
   284  000682                     STR_7:
   285  000682  4E                 	db	78	;'N'
   286  000683  55                 	db	85	;'U'
   287  000684  4D                 	db	77	;'M'
   288  000685  45                 	db	69	;'E'
   289  000686  52                 	db	82	;'R'
   290  000687  4F                 	db	79	;'O'
   291  000688  53                 	db	83	;'S'
   292  000689  00                 	db	0
   293  0000                     
   294                           ; #config settings
   295  00068A  00                 	db	0	; dummy byte at the end
   296  0000                     
   297                           	psect	cinit
   298  0013CE                     __pcinit:
   299                           	opt callstack 0
   300  0013CE                     start_initialization:
   301                           	opt callstack 0
   302  0013CE                     __initialization:
   303                           	opt callstack 0
   304                           
   305                           ; Initialize objects allocated to BANK0 (20 bytes)
   306                           ; load TBLPTR registers with __pidataBANK0
   307  0013CE  0EBA               	movlw	low __pidataBANK0
   308  0013D0  6EF6               	movwf	tblptrl,c
   309  0013D2  0E15               	movlw	high __pidataBANK0
   310  0013D4  6EF7               	movwf	tblptrh,c
   311  0013D6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   312  0013D8  6EF8               	movwf	tblptru,c
   313  0013DA  EE00  F080         	lfsr	0,__pdataBANK0
   314  0013DE  EE10 F014          	lfsr	1,20
   315  0013E2                     copy_data0:
   316  0013E2  0009               	tblrd		*+
   317  0013E4  CFF5 FFEE          	movff	tablat,postinc0
   318  0013E8  50E5               	movf	postdec1,w,c
   319  0013EA  50E1               	movf	fsr1l,w,c
   320  0013EC  E1FA               	bnz	copy_data0
   321                           
   322                           ; Initialize objects allocated to COMRAM (34 bytes)
   323                           ; load TBLPTR registers with __pidataCOMRAM
   324  0013EE  0E60               	movlw	low __pidataCOMRAM
   325  0013F0  6EF6               	movwf	tblptrl,c
   326  0013F2  0E15               	movlw	high __pidataCOMRAM
   327  0013F4  6EF7               	movwf	tblptrh,c
   328  0013F6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   329  0013F8  6EF8               	movwf	tblptru,c
   330  0013FA  EE00  F040         	lfsr	0,__pdataCOMRAM
   331  0013FE  EE10 F022          	lfsr	1,34
   332  001402                     copy_data1:
   333  001402  0009               	tblrd		*+
   334  001404  CFF5 FFEE          	movff	tablat,postinc0
   335  001408  50E5               	movf	postdec1,w,c
   336  00140A  50E1               	movf	fsr1l,w,c
   337  00140C  E1FA               	bnz	copy_data1
   338                           
   339                           ; Clear objects allocated to COMRAM (29 bytes)
   340  00140E  EE00  F062         	lfsr	0,__pbssCOMRAM
   341  001412  0E1D               	movlw	29
   342  001414                     clear_0:
   343  001414  6AEE               	clrf	postinc0,c
   344  001416  06E8               	decf	wreg,f,c
   345  001418  E1FD               	bnz	clear_0
   346  00141A                     end_of_initialization:
   347                           	opt callstack 0
   348  00141A                     __end_of__initialization:
   349                           	opt callstack 0
   350  00141A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   351  00141C  6EF8               	movwf	tblptru,c
   352  00141E  0E06               	movlw	high __Lsmallconst
   353  001420  6EF7               	movwf	tblptrh,c
   354  001422  0100               	movlb	0
   355  001424  EF46  F003         	goto	_main	;jump to C main() function
   356                           
   357                           	psect	bssCOMRAM
   358  000062                     __pbssCOMRAM:
   359                           	opt callstack 0
   360  000062                     _seqTeclada:
   361                           	opt callstack 0
   362  000062                     	ds	7
   363  000069                     _seqCorreta:
   364                           	opt callstack 0
   365  000069                     	ds	7
   366  000070                     _k:
   367                           	opt callstack 0
   368  000070                     	ds	2
   369  000072                     _i:
   370                           	opt callstack 0
   371  000072                     	ds	2
   372  000074                     _pontuacao:
   373                           	opt callstack 0
   374  000074                     	ds	2
   375  000076                     _de:
   376                           	opt callstack 0
   377  000076                     	ds	1
   378  000077                     _seed:
   379                           	opt callstack 0
   380  000077                     	ds	8
   381                           
   382                           	psect	dataCOMRAM
   383  000040                     __pdataCOMRAM:
   384                           	opt callstack 0
   385  000040                     _cont:
   386                           	opt callstack 0
   387  000040                     	ds	10
   388  00004A                     _numeros:
   389                           	opt callstack 0
   390  00004A                     	ds	10
   391  000054                     _pontuacaoLed:
   392                           	opt callstack 0
   393  000054                     	ds	6
   394  00005A                     _atraso:
   395                           	opt callstack 0
   396  00005A                     	ds	2
   397  00005C                     _atraso_min:
   398                           	opt callstack 0
   399  00005C                     	ds	2
   400  00005E                     _delay:
   401                           	opt callstack 0
   402  00005E                     	ds	2
   403  000060                     _contD:
   404                           	opt callstack 0
   405  000060                     	ds	2
   406                           
   407                           	psect	dataBANK0
   408  000080                     __pdataBANK0:
   409                           	opt callstack 0
   410  000080                     _valores7seg:
   411                           	opt callstack 0
   412  000080                     	ds	20
   413                           
   414                           	psect	cstackCOMRAM
   415  000001                     __pcstackCOMRAM:
   416                           	opt callstack 0
   417  000001                     ?___awdiv:
   418                           	opt callstack 0
   419  000001                     ?___lwdiv:
   420                           	opt callstack 0
   421  000001                     ?___omul:
   422                           	opt callstack 0
   423  000001                     lcd_wr@val:
   424                           	opt callstack 0
   425  000001                     ligarLedVet@num:
   426                           	opt callstack 0
   427  000001                     desligarLedVet@num:
   428                           	opt callstack 0
   429  000001                     writeByte@dados:
   430                           	opt callstack 0
   431  000001                     readByte@dados:
   432                           	opt callstack 0
   433  000001                     atraso_ms@t:
   434                           	opt callstack 0
   435  000001                     ___awdiv@dividend:
   436                           	opt callstack 0
   437  000001                     ___lwdiv@dividend:
   438                           	opt callstack 0
   439  000001                     ___omul@multiplier:
   440                           	opt callstack 0
   441                           
   442                           ; 8 bytes @ 0x0
   443  000001                     	ds	1
   444  000002                     writeByte@i:
   445                           	opt callstack 0
   446  000002                     readByte@i:
   447                           	opt callstack 0
   448                           
   449                           ; 1 bytes @ 0x1
   450  000002                     	ds	1
   451  000003                     ht1380read@dados:
   452                           	opt callstack 0
   453  000003                     atraso_ms@i:
   454                           	opt callstack 0
   455  000003                     ___awdiv@divisor:
   456                           	opt callstack 0
   457  000003                     ___lwdiv@divisor:
   458                           	opt callstack 0
   459                           
   460                           ; 2 bytes @ 0x2
   461  000003                     	ds	1
   462  000004                     ht1380read@addr:
   463                           	opt callstack 0
   464                           
   465                           ; 1 bytes @ 0x3
   466  000004                     	ds	1
   467  000005                     ??_rtcGetSeconds:
   468  000005                     atraso_ms@j:
   469                           	opt callstack 0
   470  000005                     ___awdiv@counter:
   471                           	opt callstack 0
   472  000005                     ___lwdiv@quotient:
   473                           	opt callstack 0
   474                           
   475                           ; 2 bytes @ 0x4
   476  000005                     	ds	1
   477  000006                     atraso_ms@k:
   478                           	opt callstack 0
   479  000006                     rtcGetSeconds@value:
   480                           	opt callstack 0
   481  000006                     ___awdiv@sign:
   482                           	opt callstack 0
   483                           
   484                           ; 1 bytes @ 0x5
   485  000006                     	ds	1
   486  000007                     lcd_cmd@val:
   487                           	opt callstack 0
   488  000007                     lcd_dat@val:
   489                           	opt callstack 0
   490  000007                     ___lwdiv@counter:
   491                           	opt callstack 0
   492  000007                     mostraPontuacao@i:
   493                           	opt callstack 0
   494  000007                     tc_tecla@timeout:
   495                           	opt callstack 0
   496  000007                     ___awdiv@quotient:
   497                           	opt callstack 0
   498  000007                     srand@s:
   499                           	opt callstack 0
   500                           
   501                           ; 2 bytes @ 0x6
   502  000007                     	ds	1
   503  000008                     ?___lwmod:
   504                           	opt callstack 0
   505  000008                     lcd_str@str:
   506                           	opt callstack 0
   507  000008                     ___lwmod@dividend:
   508                           	opt callstack 0
   509                           
   510                           ; 2 bytes @ 0x7
   511  000008                     	ds	1
   512  000009                     ??_srand:
   513  000009                     tc_tecla@to:
   514                           	opt callstack 0
   515  000009                     ___omul@multiplicand:
   516                           	opt callstack 0
   517                           
   518                           ; 8 bytes @ 0x8
   519  000009                     	ds	1
   520  00000A                     ??_lcd_str:
   521  00000A                     ___lwmod@divisor:
   522                           	opt callstack 0
   523                           
   524                           ; 2 bytes @ 0x9
   525  00000A                     	ds	1
   526  00000B                     tc_tecla@tmp:
   527                           	opt callstack 0
   528                           
   529                           ; 1 bytes @ 0xA
   530  00000B                     	ds	1
   531  00000C                     lcd_str@i:
   532                           	opt callstack 0
   533  00000C                     tc_tecla@ret:
   534                           	opt callstack 0
   535  00000C                     ___lwmod@counter:
   536                           	opt callstack 0
   537                           
   538                           ; 1 bytes @ 0xB
   539  00000C                     	ds	1
   540  00000D                     tc_tecla@i:
   541                           	opt callstack 0
   542  00000D                     loading@i:
   543                           	opt callstack 0
   544                           
   545                           ; 2 bytes @ 0xC
   546  00000D                     	ds	4
   547  000011                     ___omul@product:
   548                           	opt callstack 0
   549                           
   550                           ; 8 bytes @ 0x10
   551  000011                     	ds	8
   552  000019                     ?_rand:
   553                           	opt callstack 0
   554                           
   555                           ; 2 bytes @ 0x18
   556  000019                     	ds	2
   557  00001B                     ??_rand:
   558                           
   559                           ; 1 bytes @ 0x1A
   560  00001B                     	ds	8
   561  000023                     ?___awmod:
   562                           	opt callstack 0
   563  000023                     ___awmod@dividend:
   564                           	opt callstack 0
   565                           
   566                           ; 2 bytes @ 0x22
   567  000023                     	ds	2
   568  000025                     ___awmod@divisor:
   569                           	opt callstack 0
   570                           
   571                           ; 2 bytes @ 0x24
   572  000025                     	ds	2
   573  000027                     ___awmod@counter:
   574                           	opt callstack 0
   575                           
   576                           ; 1 bytes @ 0x26
   577  000027                     	ds	1
   578  000028                     ___awmod@sign:
   579                           	opt callstack 0
   580                           
   581                           ; 1 bytes @ 0x27
   582  000028                     	ds	1
   583  000029                     ht1380write@dados:
   584                           	opt callstack 0
   585                           
   586                           ; 1 bytes @ 0x28
   587  000029                     	ds	1
   588  00002A                     ht1380write@addr:
   589                           	opt callstack 0
   590                           
   591                           ; 1 bytes @ 0x29
   592  00002A                     	ds	1
   593  00002B                     ??_rtcPutSeconds:
   594                           
   595                           ; 1 bytes @ 0x2A
   596  00002B                     	ds	2
   597  00002D                     rtcPutSeconds@seconds:
   598                           	opt callstack 0
   599                           
   600                           ; 1 bytes @ 0x2C
   601  00002D                     	ds	1
   602  00002E                     ??_main:
   603                           
   604                           ; 1 bytes @ 0x2D
   605  00002E                     	ds	2
   606  000030                     main@contaCerto:
   607                           	opt callstack 0
   608                           
   609                           ; 2 bytes @ 0x2F
   610  000030                     	ds	2
   611  000032                     main@aux:
   612                           	opt callstack 0
   613                           
   614                           ; 2 bytes @ 0x31
   615  000032                     	ds	2
   616  000034                     main@i_124:
   617                           	opt callstack 0
   618                           
   619                           ; 2 bytes @ 0x33
   620  000034                     	ds	2
   621  000036                     main@tmp:
   622                           	opt callstack 0
   623                           
   624                           ; 1 bytes @ 0x35
   625  000036                     	ds	1
   626  000037                     main@i_117:
   627                           	opt callstack 0
   628                           
   629                           ; 1 bytes @ 0x36
   630  000037                     	ds	1
   631  000038                     main@nivel:
   632                           	opt callstack 0
   633                           
   634                           ; 2 bytes @ 0x37
   635  000038                     	ds	2
   636  00003A                     main@k:
   637                           	opt callstack 0
   638                           
   639                           ; 2 bytes @ 0x39
   640  00003A                     	ds	2
   641  00003C                     main@j:
   642                           	opt callstack 0
   643                           
   644                           ; 2 bytes @ 0x3B
   645  00003C                     	ds	2
   646  00003E                     main@numNivel:
   647                           	opt callstack 0
   648                           
   649                           ; 2 bytes @ 0x3D
   650  00003E                     	ds	2
   651                           
   652 ;;
   653 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   654 ;;
   655 ;; *************** function _main *****************
   656 ;; Defined at:
   657 ;;		line 69 in file "main.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;		None
   660 ;; Auto vars:     Size  Location     Type
   661 ;;  aux             2   49[COMRAM] int 
   662 ;;  j               2   59[COMRAM] int 
   663 ;;  i               2   51[COMRAM] int 
   664 ;;  i               1   54[COMRAM] unsigned char 
   665 ;;  k               2   57[COMRAM] int 
   666 ;;  numNivel        2   61[COMRAM] unsigned int 
   667 ;;  nivel           2   55[COMRAM] unsigned int 
   668 ;;  contaCerto      2   47[COMRAM] int 
   669 ;;  tmp             1   53[COMRAM] unsigned char 
   670 ;;  i               1    0        unsigned char 
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      void 
   673 ;; Registers used:
   674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   680 ;;      Params:         0       0       0       0       0       0       0
   681 ;;      Locals:        16       0       0       0       0       0       0
   682 ;;      Temps:          2       0       0       0       0       0       0
   683 ;;      Totals:        18       0       0       0       0       0       0
   684 ;;Total ram usage:       18 bytes
   685 ;; Hardware stack levels required when called:    4
   686 ;; This function calls:
   687 ;;		___awmod
   688 ;;		_atraso_ms
   689 ;;		_conta
   690 ;;		_lcd_cmd
   691 ;;		_lcd_dat
   692 ;;		_lcd_init
   693 ;;		_lcd_str
   694 ;;		_loading
   695 ;;		_mostraPontuacao
   696 ;;		_rand
   697 ;;		_rtcGetSeconds
   698 ;;		_rtcInit
   699 ;;		_srand
   700 ;;		_tc_tecla
   701 ;; This function is called by:
   702 ;;		Startup code after reset
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706                           	psect	text0
   707  00068C                     __ptext0:
   708                           	opt callstack 0
   709  00068C                     _main:
   710                           	opt callstack 27
   711  00068C                     
   712                           ;main.c: 70:     rtcInit();
   713  00068C  ECD0  F00A         	call	_rtcInit	;wreg free
   714  000690                     l2085:
   715                           
   716                           ;main.c: 73:     unsigned int nivel = 1;
   717  000690  0E00               	movlw	0
   718  000692  6E39               	movwf	(main@nivel+1)^0,c
   719  000694  0E01               	movlw	1
   720  000696  6E38               	movwf	main@nivel^0,c
   721  000698                     
   722                           ;main.c: 74:     unsigned int numNivel = 5;
   723  000698  0E00               	movlw	0
   724  00069A  6E3F               	movwf	(main@numNivel+1)^0,c
   725  00069C  0E05               	movlw	5
   726  00069E  6E3E               	movwf	main@numNivel^0,c
   727  0006A0                     
   728                           ;main.c: 75:     int contaCerto = 0;
   729  0006A0  0E00               	movlw	0
   730  0006A2  6E31               	movwf	(main@contaCerto+1)^0,c
   731  0006A4  0E00               	movlw	0
   732  0006A6  6E30               	movwf	main@contaCerto^0,c
   733  0006A8                     
   734                           ;main.c: 76:     unsigned char i;;main.c: 77:     unsigned char tmp;;main.c: 79:     (*(
      +                          volatile __near unsigned char*)0xFC1) = 0x06;
   735  0006A8  0E06               	movlw	6
   736  0006AA  6EC1               	movwf	193,c	;volatile
   737  0006AC                     
   738                           ;main.c: 80:     (*(volatile __near unsigned char*)0xF95) = 0x00;
   739  0006AC  0E00               	movlw	0
   740  0006AE  6E95               	movwf	149,c	;volatile
   741  0006B0                     
   742                           ;main.c: 81:     (*(volatile __near unsigned char*)0xF96) = 0x00;
   743  0006B0  0E00               	movlw	0
   744  0006B2  6E96               	movwf	150,c	;volatile
   745  0006B4                     
   746                           ;main.c: 82:     (*(volatile __near unsigned char*)0xF93) = 0xF8;
   747  0006B4  0EF8               	movlw	248
   748  0006B6  6E93               	movwf	147,c	;volatile
   749  0006B8                     
   750                           ;main.c: 84:     lcd_init();
   751  0006B8  ECB9  F009         	call	_lcd_init	;wreg free
   752  0006BC                     
   753                           ;main.c: 85:     srand((int)rtcGetSeconds());
   754  0006BC  ECC1  F00A         	call	_rtcGetSeconds	;wreg free
   755  0006C0  6E2E               	movwf	??_main^0,c
   756  0006C2  502E               	movf	??_main^0,w,c
   757  0006C4  6E07               	movwf	srand@s^0,c
   758  0006C6  6A08               	clrf	(srand@s+1)^0,c
   759  0006C8  EC5D  F00A         	call	_srand	;wreg free
   760  0006CC                     
   761                           ;main.c: 86:     loading();
   762  0006CC  EC5A  F009         	call	_loading	;wreg free
   763  0006D0                     
   764                           ;main.c: 88:     lcd_cmd(0x80);
   765  0006D0  0E80               	movlw	128
   766  0006D2  EC89  F00A         	call	_lcd_cmd
   767  0006D6                     
   768                           ;main.c: 89:     lcd_str("   BEM VINDO! ");
   769  0006D6  0E05               	movlw	low STR_2
   770  0006D8  6E08               	movwf	lcd_str@str^0,c
   771  0006DA  0E06               	movlw	high STR_2
   772  0006DC  6E09               	movwf	(lcd_str@str+1)^0,c
   773  0006DE  EC14  F00A         	call	_lcd_str	;wreg free
   774  0006E2                     
   775                           ;main.c: 90:     lcd_dat(194);
   776  0006E2  0EC2               	movlw	194
   777  0006E4  EC74  F00A         	call	_lcd_dat
   778  0006E8                     
   779                           ;main.c: 91:     lcd_cmd(0xC0);
   780  0006E8  0EC0               	movlw	192
   781  0006EA  EC89  F00A         	call	_lcd_cmd
   782  0006EE                     
   783                           ;main.c: 92:     lcd_dat(126);
   784  0006EE  0E7E               	movlw	126
   785  0006F0  EC74  F00A         	call	_lcd_dat
   786  0006F4                     
   787                           ;main.c: 93:     lcd_str("PRESSIONE RB3");
   788  0006F4  0E5D               	movlw	low STR_3
   789  0006F6  6E08               	movwf	lcd_str@str^0,c
   790  0006F8  0E06               	movlw	high STR_3
   791  0006FA  6E09               	movwf	(lcd_str@str+1)^0,c
   792  0006FC  EC14  F00A         	call	_lcd_str	;wreg free
   793  000700                     l76:
   794  000700  B681               	btfsc	129,3,c	;volatile
   795  000702  EF85  F003         	goto	u1251
   796  000706  EF87  F003         	goto	u1250
   797  00070A                     u1251:
   798  00070A  EF80  F003         	goto	l76
   799  00070E                     u1250:
   800  00070E                     
   801                           ;main.c: 95:     lcd_cmd(0x01);
   802  00070E  0E01               	movlw	1
   803  000710  EC89  F00A         	call	_lcd_cmd
   804  000714                     
   805                           ;main.c: 97:     for(int k = 0; k < 5; k++){
   806  000714  0E00               	movlw	0
   807  000716  6E3B               	movwf	(main@k+1)^0,c
   808  000718  0E00               	movlw	0
   809  00071A  6E3A               	movwf	main@k^0,c
   810  00071C                     l2125:
   811                           
   812                           ;main.c: 99:     lcd_cmd(0x80);
   813  00071C  0E80               	movlw	128
   814  00071E  EC89  F00A         	call	_lcd_cmd
   815                           
   816                           ;main.c: 100:     lcd_dat(126);
   817  000722  0E7E               	movlw	126
   818  000724  EC74  F00A         	call	_lcd_dat
   819  000728                     
   820                           ;main.c: 101:     lcd_str("   MEMORIZE! ");
   821  000728  0E41               	movlw	low STR_4
   822  00072A  6E08               	movwf	lcd_str@str^0,c
   823  00072C  0E06               	movlw	high STR_4
   824  00072E  6E09               	movwf	(lcd_str@str+1)^0,c
   825  000730  EC14  F00A         	call	_lcd_str	;wreg free
   826  000734                     
   827                           ;main.c: 102:     lcd_cmd(0xC0);
   828  000734  0EC0               	movlw	192
   829  000736  EC89  F00A         	call	_lcd_cmd
   830  00073A                     
   831                           ;main.c: 104:     for(char i = 0; i < numNivel; i++){
   832  00073A  0E00               	movlw	0
   833  00073C  6E37               	movwf	main@i_117^0,c
   834  00073E  EFCF  F003         	goto	l2141
   835  000742                     l2133:
   836                           
   837                           ;main.c: 105:         int aux = rand()%9;
   838  000742  EC80  F006         	call	_rand	;wreg free
   839  000746  C019  F023         	movff	?_rand,___awmod@dividend
   840  00074A  C01A  F024         	movff	?_rand+1,___awmod@dividend+1
   841  00074E  0E00               	movlw	0
   842  000750  6E26               	movwf	(___awmod@divisor+1)^0,c
   843  000752  0E09               	movlw	9
   844  000754  6E25               	movwf	___awmod@divisor^0,c
   845  000756  EC50  F007         	call	___awmod	;wreg free
   846  00075A  C023  F032         	movff	?___awmod,main@aux
   847  00075E  C024  F033         	movff	?___awmod+1,main@aux+1
   848                           
   849                           ;main.c: 106:         lcd_dat(numeros[aux]);
   850  000762  0E4A               	movlw	low _numeros
   851  000764  2432               	addwf	main@aux^0,w,c
   852  000766  6ED9               	movwf	fsr2l,c
   853  000768  0E00               	movlw	high _numeros
   854  00076A  2033               	addwfc	(main@aux+1)^0,w,c
   855  00076C  6EDA               	movwf	fsr2h,c
   856  00076E  50DF               	movf	indf2,w,c
   857  000770  EC74  F00A         	call	_lcd_dat
   858  000774                     
   859                           ;main.c: 107:         seqCorreta[i] = numeros[aux];
   860  000774  0E4A               	movlw	low _numeros
   861  000776  2432               	addwf	main@aux^0,w,c
   862  000778  6ED9               	movwf	fsr2l,c
   863  00077A  0E00               	movlw	high _numeros
   864  00077C  2033               	addwfc	(main@aux+1)^0,w,c
   865  00077E  6EDA               	movwf	fsr2h,c
   866  000780  0E69               	movlw	low _seqCorreta
   867  000782  2437               	addwf	main@i_117^0,w,c
   868  000784  6EE1               	movwf	fsr1l,c
   869  000786  6AE2               	clrf	fsr1h,c
   870  000788  0E00               	movlw	high _seqCorreta
   871  00078A  22E2               	addwfc	fsr1h,f,c
   872  00078C  CFDF FFE7          	movff	indf2,indf1
   873  000790                     
   874                           ;main.c: 108:         lcd_str(" ");
   875  000790  0E4D               	movlw	low (STR_4+12)
   876  000792  6E08               	movwf	lcd_str@str^0,c
   877  000794  0E06               	movlw	high (STR_4+12)
   878  000796  6E09               	movwf	(lcd_str@str+1)^0,c
   879  000798  EC14  F00A         	call	_lcd_str	;wreg free
   880  00079C                     
   881                           ;main.c: 109:     }
   882  00079C  2A37               	incf	main@i_117^0,f,c
   883  00079E                     l2141:
   884  00079E  5037               	movf	main@i_117^0,w,c
   885  0007A0  6E2E               	movwf	??_main^0,c
   886  0007A2  6A2F               	clrf	(??_main+1)^0,c
   887  0007A4  503E               	movf	main@numNivel^0,w,c
   888  0007A6  5C2E               	subwf	??_main^0,w,c
   889  0007A8  503F               	movf	(main@numNivel+1)^0,w,c
   890  0007AA  582F               	subwfb	(??_main+1)^0,w,c
   891  0007AC  A0D8               	btfss	status,0,c
   892  0007AE  EFDB  F003         	goto	u1261
   893  0007B2  EFDD  F003         	goto	u1260
   894  0007B6                     u1261:
   895  0007B6  EFA1  F003         	goto	l2133
   896  0007BA                     u1260:
   897  0007BA                     
   898                           ;main.c: 111:     conta();
   899  0007BA  EC03  F006         	call	_conta	;wreg free
   900  0007BE                     
   901                           ;main.c: 112:     lcd_cmd(0x01);
   902  0007BE  0E01               	movlw	1
   903  0007C0  EC89  F00A         	call	_lcd_cmd
   904  0007C4                     
   905                           ;main.c: 113:     lcd_cmd(0x80);
   906  0007C4  0E80               	movlw	128
   907  0007C6  EC89  F00A         	call	_lcd_cmd
   908  0007CA                     
   909                           ;main.c: 114:     lcd_str("INSIRA OS");
   910  0007CA  0E78               	movlw	low STR_6
   911  0007CC  6E08               	movwf	lcd_str@str^0,c
   912  0007CE  0E06               	movlw	high STR_6
   913  0007D0  6E09               	movwf	(lcd_str@str+1)^0,c
   914  0007D2  EC14  F00A         	call	_lcd_str	;wreg free
   915  0007D6                     
   916                           ;main.c: 115:     lcd_cmd(0xC0);
   917  0007D6  0EC0               	movlw	192
   918  0007D8  EC89  F00A         	call	_lcd_cmd
   919  0007DC                     
   920                           ;main.c: 116:     lcd_str("NUMEROS");
   921  0007DC  0E82               	movlw	low STR_7
   922  0007DE  6E08               	movwf	lcd_str@str^0,c
   923  0007E0  0E06               	movlw	high STR_7
   924  0007E2  6E09               	movwf	(lcd_str@str+1)^0,c
   925  0007E4  EC14  F00A         	call	_lcd_str	;wreg free
   926  0007E8                     
   927                           ;main.c: 117:     lcd_dat(126);
   928  0007E8  0E7E               	movlw	126
   929  0007EA  EC74  F00A         	call	_lcd_dat
   930  0007EE                     
   931                           ;main.c: 118:     lcd_str(" ");
   932  0007EE  0E4D               	movlw	low (STR_4+12)
   933  0007F0  6E08               	movwf	lcd_str@str^0,c
   934  0007F2  0E06               	movlw	high (STR_4+12)
   935  0007F4  6E09               	movwf	(lcd_str@str+1)^0,c
   936  0007F6  EC14  F00A         	call	_lcd_str	;wreg free
   937  0007FA                     
   938                           ;main.c: 119:     for(int i = 0; i < numNivel; i++){
   939  0007FA  0E00               	movlw	0
   940  0007FC  6E35               	movwf	(main@i_124+1)^0,c
   941  0007FE  0E00               	movlw	0
   942  000800  6E34               	movwf	main@i_124^0,c
   943  000802  EF1C  F004         	goto	l2173
   944  000806                     l2161:
   945                           
   946                           ;main.c: 120:         (*(volatile __near unsigned char*)0xF95) = 0x0F;
   947  000806  0E0F               	movlw	15
   948  000808  6E95               	movwf	149,c	;volatile
   949  00080A                     
   950                           ;main.c: 121:         tmp = tc_tecla(0) + 0x30;
   951  00080A  0E00               	movlw	0
   952  00080C  6E08               	movwf	(tc_tecla@timeout+1)^0,c
   953  00080E  0E00               	movlw	0
   954  000810  6E07               	movwf	tc_tecla@timeout^0,c
   955  000812  EC1E  F005         	call	_tc_tecla	;wreg free
   956  000816  0F30               	addlw	48
   957  000818  6E36               	movwf	main@tmp^0,c
   958  00081A                     
   959                           ;main.c: 122:         (*(volatile __near unsigned char*)0xF95) = 0x00;
   960  00081A  0E00               	movlw	0
   961  00081C  6E95               	movwf	149,c	;volatile
   962  00081E                     
   963                           ;main.c: 123:         lcd_dat(tmp);
   964  00081E  5036               	movf	main@tmp^0,w,c
   965  000820  EC74  F00A         	call	_lcd_dat
   966  000824                     
   967                           ;main.c: 124:         seqTeclada[i] = tmp;
   968  000824  0E62               	movlw	low _seqTeclada
   969  000826  2434               	addwf	main@i_124^0,w,c
   970  000828  6ED9               	movwf	fsr2l,c
   971  00082A  0E00               	movlw	high _seqTeclada
   972  00082C  2035               	addwfc	(main@i_124+1)^0,w,c
   973  00082E  6EDA               	movwf	fsr2h,c
   974  000830  C036  FFDF         	movff	main@tmp,indf2
   975  000834                     
   976                           ;main.c: 125:     }
   977  000834  4A34               	infsnz	main@i_124^0,f,c
   978  000836  2A35               	incf	(main@i_124+1)^0,f,c
   979  000838                     l2173:
   980  000838  503E               	movf	main@numNivel^0,w,c
   981  00083A  5C34               	subwf	main@i_124^0,w,c
   982  00083C  503F               	movf	(main@numNivel+1)^0,w,c
   983  00083E  5835               	subwfb	(main@i_124+1)^0,w,c
   984  000840  A0D8               	btfss	status,0,c
   985  000842  EF25  F004         	goto	u1271
   986  000846  EF27  F004         	goto	u1270
   987  00084A                     u1271:
   988  00084A  EF03  F004         	goto	l2161
   989  00084E                     u1270:
   990  00084E                     
   991                           ;main.c: 126:     atraso_ms(2000);
   992  00084E  0E07               	movlw	7
   993  000850  6E02               	movwf	(atraso_ms@t+1)^0,c
   994  000852  0ED0               	movlw	208
   995  000854  6E01               	movwf	atraso_ms@t^0,c
   996  000856  ECF6  F008         	call	_atraso_ms	;wreg free
   997  00085A                     
   998                           ;main.c: 128:     for(int j = 0; j < numNivel; j++){
   999  00085A  0E00               	movlw	0
  1000  00085C  6E3D               	movwf	(main@j+1)^0,c
  1001  00085E  0E00               	movlw	0
  1002  000860  6E3C               	movwf	main@j^0,c
  1003  000862  EF4C  F004         	goto	l2183
  1004  000866                     l2179:
  1005                           
  1006                           ;main.c: 129:         if(seqTeclada[j] == seqCorreta[j]){
  1007  000866  0E69               	movlw	low _seqCorreta
  1008  000868  243C               	addwf	main@j^0,w,c
  1009  00086A  6ED9               	movwf	fsr2l,c
  1010  00086C  0E00               	movlw	high _seqCorreta
  1011  00086E  203D               	addwfc	(main@j+1)^0,w,c
  1012  000870  6EDA               	movwf	fsr2h,c
  1013  000872  0E62               	movlw	low _seqTeclada
  1014  000874  243C               	addwf	main@j^0,w,c
  1015  000876  6EE1               	movwf	fsr1l,c
  1016  000878  0E00               	movlw	high _seqTeclada
  1017  00087A  203D               	addwfc	(main@j+1)^0,w,c
  1018  00087C  6EE2               	movwf	fsr1h,c
  1019  00087E  50DE               	movf	postinc2,w,c
  1020  000880  18E6               	xorwf	postinc1,w,c
  1021  000882  A4D8               	btfss	status,2,c
  1022  000884  EF46  F004         	goto	u1281
  1023  000888  EF48  F004         	goto	u1280
  1024  00088C                     u1281:
  1025  00088C  EF4A  F004         	goto	l89
  1026  000890                     u1280:
  1027  000890                     
  1028                           ;main.c: 130:             contaCerto++;
  1029  000890  4A30               	infsnz	main@contaCerto^0,f,c
  1030  000892  2A31               	incf	(main@contaCerto+1)^0,f,c
  1031  000894                     l89:
  1032                           
  1033                           ;main.c: 132:     }
  1034  000894  4A3C               	infsnz	main@j^0,f,c
  1035  000896  2A3D               	incf	(main@j+1)^0,f,c
  1036  000898                     l2183:
  1037  000898  503E               	movf	main@numNivel^0,w,c
  1038  00089A  5C3C               	subwf	main@j^0,w,c
  1039  00089C  503F               	movf	(main@numNivel+1)^0,w,c
  1040  00089E  583D               	subwfb	(main@j+1)^0,w,c
  1041  0008A0  A0D8               	btfss	status,0,c
  1042  0008A2  EF55  F004         	goto	u1291
  1043  0008A6  EF57  F004         	goto	u1290
  1044  0008AA                     u1291:
  1045  0008AA  EF33  F004         	goto	l2179
  1046  0008AE                     u1290:
  1047  0008AE                     
  1048                           ;main.c: 133:     if(contaCerto == numNivel){
  1049  0008AE  503E               	movf	main@numNivel^0,w,c
  1050  0008B0  1830               	xorwf	main@contaCerto^0,w,c
  1051  0008B2  E107               	bnz	u1301
  1052  0008B4  503F               	movf	(main@numNivel+1)^0,w,c
  1053  0008B6  1831               	xorwf	(main@contaCerto+1)^0,w,c
  1054  0008B8  A4D8               	btfss	status,2,c
  1055  0008BA  EF61  F004         	goto	u1301
  1056  0008BE  EF63  F004         	goto	u1300
  1057  0008C2                     u1301:
  1058  0008C2  EF8D  F004         	goto	l2207
  1059  0008C6                     u1300:
  1060  0008C6                     
  1061                           ;main.c: 134:         pontuacao++;
  1062  0008C6  4A74               	infsnz	_pontuacao^0,f,c
  1063  0008C8  2A75               	incf	(_pontuacao+1)^0,f,c
  1064  0008CA                     
  1065                           ;main.c: 135:         lcd_init();
  1066  0008CA  ECB9  F009         	call	_lcd_init	;wreg free
  1067  0008CE                     
  1068                           ;main.c: 136:         lcd_cmd(0x01);
  1069  0008CE  0E01               	movlw	1
  1070  0008D0  EC89  F00A         	call	_lcd_cmd
  1071  0008D4                     
  1072                           ;main.c: 137:         lcd_cmd(0x80);
  1073  0008D4  0E80               	movlw	128
  1074  0008D6  EC89  F00A         	call	_lcd_cmd
  1075  0008DA                     
  1076                           ;main.c: 138:         lcd_str("  CORRETO! :) ");
  1077  0008DA  0E14               	movlw	low STR_9
  1078  0008DC  6E08               	movwf	lcd_str@str^0,c
  1079  0008DE  0E06               	movlw	high STR_9
  1080  0008E0  6E09               	movwf	(lcd_str@str+1)^0,c
  1081  0008E2  EC14  F00A         	call	_lcd_str	;wreg free
  1082  0008E6                     
  1083                           ;main.c: 139:         lcd_cmd(0xC0);
  1084  0008E6  0EC0               	movlw	192
  1085  0008E8  EC89  F00A         	call	_lcd_cmd
  1086  0008EC                     
  1087                           ;main.c: 140:         lcd_dat(126);
  1088  0008EC  0E7E               	movlw	126
  1089  0008EE  EC74  F00A         	call	_lcd_dat
  1090  0008F2                     
  1091                           ;main.c: 141:         lcd_str("PRESSIONE RB3");
  1092  0008F2  0E5D               	movlw	low STR_3
  1093  0008F4  6E08               	movwf	lcd_str@str^0,c
  1094  0008F6  0E06               	movlw	high STR_3
  1095  0008F8  6E09               	movwf	(lcd_str@str+1)^0,c
  1096  0008FA  EC14  F00A         	call	_lcd_str	;wreg free
  1097  0008FE                     
  1098                           ;main.c: 142:         mostraPontuacao();
  1099  0008FE  EC8A  F009         	call	_mostraPontuacao	;wreg free
  1100  000902                     l92:
  1101  000902  B681               	btfsc	129,3,c	;volatile
  1102  000904  EF86  F004         	goto	u1311
  1103  000908  EF88  F004         	goto	u1310
  1104  00090C                     u1311:
  1105  00090C  EF81  F004         	goto	l92
  1106  000910                     u1310:
  1107  000910                     
  1108                           ;main.c: 144:         lcd_cmd(0x01);
  1109  000910  0E01               	movlw	1
  1110  000912  EC89  F00A         	call	_lcd_cmd
  1111                           
  1112                           ;main.c: 145:     }
  1113  000916  EFB1  F004         	goto	l2219
  1114  00091A                     l2207:
  1115                           
  1116                           ;main.c: 147:         lcd_init();
  1117  00091A  ECB9  F009         	call	_lcd_init	;wreg free
  1118                           
  1119                           ;main.c: 148:         lcd_cmd(0x01);
  1120  00091E  0E01               	movlw	1
  1121  000920  EC89  F00A         	call	_lcd_cmd
  1122                           
  1123                           ;main.c: 149:         lcd_cmd(0x80);
  1124  000924  0E80               	movlw	128
  1125  000926  EC89  F00A         	call	_lcd_cmd
  1126  00092A                     
  1127                           ;main.c: 150:         lcd_str(" INCORRETO! :(");
  1128  00092A  0E32               	movlw	low STR_11
  1129  00092C  6E08               	movwf	lcd_str@str^0,c
  1130  00092E  0E06               	movlw	high STR_11
  1131  000930  6E09               	movwf	(lcd_str@str+1)^0,c
  1132  000932  EC14  F00A         	call	_lcd_str	;wreg free
  1133  000936                     
  1134                           ;main.c: 151:         lcd_cmd(0xC0);
  1135  000936  0EC0               	movlw	192
  1136  000938  EC89  F00A         	call	_lcd_cmd
  1137  00093C                     
  1138                           ;main.c: 152:         lcd_dat(126);
  1139  00093C  0E7E               	movlw	126
  1140  00093E  EC74  F00A         	call	_lcd_dat
  1141  000942                     
  1142                           ;main.c: 153:         lcd_str("PRESSIONE RB3");
  1143  000942  0E5D               	movlw	low STR_3
  1144  000944  6E08               	movwf	lcd_str@str^0,c
  1145  000946  0E06               	movlw	high STR_3
  1146  000948  6E09               	movwf	(lcd_str@str+1)^0,c
  1147  00094A  EC14  F00A         	call	_lcd_str	;wreg free
  1148  00094E                     l96:
  1149  00094E  B681               	btfsc	129,3,c	;volatile
  1150  000950  EFAC  F004         	goto	u1321
  1151  000954  EFAE  F004         	goto	u1320
  1152  000958                     u1321:
  1153  000958  EFA7  F004         	goto	l96
  1154  00095C                     u1320:
  1155  00095C                     
  1156                           ;main.c: 155:         lcd_cmd(0x01);
  1157  00095C  0E01               	movlw	1
  1158  00095E  EC89  F00A         	call	_lcd_cmd
  1159  000962                     l2219:
  1160                           
  1161                           ;main.c: 158:     contD = cont[k];
  1162  000962  90D8               	bcf	status,0,c
  1163  000964  343A               	rlcf	main@k^0,w,c
  1164  000966  6ED9               	movwf	fsr2l,c
  1165  000968  343B               	rlcf	(main@k+1)^0,w,c
  1166  00096A  6EDA               	movwf	fsr2h,c
  1167  00096C  0E40               	movlw	low _cont
  1168  00096E  26D9               	addwf	fsr2l,f,c
  1169  000970  0E00               	movlw	high _cont
  1170  000972  22DA               	addwfc	fsr2h,f,c
  1171  000974  CFDE F060          	movff	postinc2,_contD
  1172  000978  CFDD F061          	movff	postdec2,_contD+1
  1173  00097C                     
  1174                           ;main.c: 159:     contaCerto = 0;
  1175  00097C  0E00               	movlw	0
  1176  00097E  6E31               	movwf	(main@contaCerto+1)^0,c
  1177  000980  0E00               	movlw	0
  1178  000982  6E30               	movwf	main@contaCerto^0,c
  1179  000984                     
  1180                           ;main.c: 161:     nivel++;
  1181  000984  4A38               	infsnz	main@nivel^0,f,c
  1182  000986  2A39               	incf	(main@nivel+1)^0,f,c
  1183  000988                     
  1184                           ;main.c: 162:         if(nivel == 3 || nivel == 5){
  1185  000988  0E03               	movlw	3
  1186  00098A  1838               	xorwf	main@nivel^0,w,c
  1187  00098C  1039               	iorwf	(main@nivel+1)^0,w,c
  1188  00098E  B4D8               	btfsc	status,2,c
  1189  000990  EFCC  F004         	goto	u1331
  1190  000994  EFCE  F004         	goto	u1330
  1191  000998                     u1331:
  1192  000998  EFD8  F004         	goto	l2229
  1193  00099C                     u1330:
  1194  00099C  0E05               	movlw	5
  1195  00099E  1838               	xorwf	main@nivel^0,w,c
  1196  0009A0  1039               	iorwf	(main@nivel+1)^0,w,c
  1197  0009A2  A4D8               	btfss	status,2,c
  1198  0009A4  EFD6  F004         	goto	u1341
  1199  0009A8  EFD8  F004         	goto	u1340
  1200  0009AC                     u1341:
  1201  0009AC  EFDA  F004         	goto	l2231
  1202  0009B0                     u1340:
  1203  0009B0                     l2229:
  1204                           
  1205                           ;main.c: 163:             numNivel++;
  1206  0009B0  4A3E               	infsnz	main@numNivel^0,f,c
  1207  0009B2  2A3F               	incf	(main@numNivel+1)^0,f,c
  1208  0009B4                     l2231:
  1209                           
  1210                           ;main.c: 165:         if(nivel == 6){
  1211  0009B4  0E06               	movlw	6
  1212  0009B6  1838               	xorwf	main@nivel^0,w,c
  1213  0009B8  1039               	iorwf	(main@nivel+1)^0,w,c
  1214  0009BA  A4D8               	btfss	status,2,c
  1215  0009BC  EFE2  F004         	goto	u1351
  1216  0009C0  EFE4  F004         	goto	u1350
  1217  0009C4                     u1351:
  1218  0009C4  EFF9  F004         	goto	l2239
  1219  0009C8                     u1350:
  1220  0009C8                     
  1221                           ;main.c: 166:             lcd_cmd(0x01);
  1222  0009C8  0E01               	movlw	1
  1223  0009CA  EC89  F00A         	call	_lcd_cmd
  1224                           
  1225                           ;main.c: 167:             lcd_cmd(0x80);
  1226  0009CE  0E80               	movlw	128
  1227  0009D0  EC89  F00A         	call	_lcd_cmd
  1228  0009D4                     
  1229                           ;main.c: 168:             lcd_str("    OBRIGADO");
  1230  0009D4  0E6B               	movlw	low STR_13
  1231  0009D6  6E08               	movwf	lcd_str@str^0,c
  1232  0009D8  0E06               	movlw	high STR_13
  1233  0009DA  6E09               	movwf	(lcd_str@str+1)^0,c
  1234  0009DC  EC14  F00A         	call	_lcd_str	;wreg free
  1235  0009E0                     
  1236                           ;main.c: 169:             lcd_cmd(0xC0);
  1237  0009E0  0EC0               	movlw	192
  1238  0009E2  EC89  F00A         	call	_lcd_cmd
  1239                           
  1240                           ;main.c: 170:             lcd_str("   POR JOGAR!");
  1241  0009E6  0E4F               	movlw	low STR_14
  1242  0009E8  6E08               	movwf	lcd_str@str^0,c
  1243  0009EA  0E06               	movlw	high STR_14
  1244  0009EC  6E09               	movwf	(lcd_str@str+1)^0,c
  1245  0009EE  EC14  F00A         	call	_lcd_str	;wreg free
  1246  0009F2                     l2239:
  1247                           
  1248                           ;main.c: 172:     }
  1249  0009F2  4A3A               	infsnz	main@k^0,f,c
  1250  0009F4  2A3B               	incf	(main@k+1)^0,f,c
  1251  0009F6  BE3B               	btfsc	(main@k+1)^0,7,c
  1252  0009F8  EF07  F005         	goto	u1361
  1253  0009FC  503B               	movf	(main@k+1)^0,w,c
  1254  0009FE  E109               	bnz	u1360
  1255  000A00  0E05               	movlw	5
  1256  000A02  5C3A               	subwf	main@k^0,w,c
  1257  000A04  A0D8               	btfss	status,0,c
  1258  000A06  EF07  F005         	goto	u1361
  1259  000A0A  EF09  F005         	goto	u1360
  1260  000A0E                     u1361:
  1261  000A0E  EF8E  F003         	goto	l2125
  1262  000A12                     u1360:
  1263  000A12                     
  1264                           ;main.c: 173:         mostraPontuacao();
  1265  000A12  EC8A  F009         	call	_mostraPontuacao	;wreg free
  1266  000A16                     
  1267                           ;main.c: 174:         contD = 1000;
  1268  000A16  0E03               	movlw	3
  1269  000A18  6E61               	movwf	(_contD+1)^0,c
  1270  000A1A  0EE8               	movlw	232
  1271  000A1C  6E60               	movwf	_contD^0,c
  1272  000A1E                     
  1273                           ;main.c: 175:         pontuacao = 0;
  1274  000A1E  0E00               	movlw	0
  1275  000A20  6E75               	movwf	(_pontuacao+1)^0,c
  1276  000A22  0E00               	movlw	0
  1277  000A24  6E74               	movwf	_pontuacao^0,c
  1278  000A26                     l103:
  1279  000A26  B681               	btfsc	129,3,c	;volatile
  1280  000A28  EF18  F005         	goto	u1371
  1281  000A2C  EF1A  F005         	goto	u1370
  1282  000A30                     u1371:
  1283  000A30  EF13  F005         	goto	l103
  1284  000A34                     u1370:
  1285  000A34  EF48  F003         	goto	l2085
  1286  000A38  EF00  F000         	goto	start
  1287  000A3C                     __end_of_main:
  1288                           	opt callstack 0
  1289                           
  1290 ;; *************** function _tc_tecla *****************
  1291 ;; Defined at:
  1292 ;;		line 14 in file "teclado.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;  timeout         2    6[COMRAM] unsigned int 
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;  to              2    8[COMRAM] unsigned int 
  1297 ;;  i               1   12[COMRAM] unsigned char 
  1298 ;;  ret             1   11[COMRAM] unsigned char 
  1299 ;;  tmp             1   10[COMRAM] unsigned char 
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  1    wreg      unsigned char 
  1302 ;; Registers used:
  1303 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1309 ;;      Params:         2       0       0       0       0       0       0
  1310 ;;      Locals:         5       0       0       0       0       0       0
  1311 ;;      Temps:          0       0       0       0       0       0       0
  1312 ;;      Totals:         7       0       0       0       0       0       0
  1313 ;;Total ram usage:        7 bytes
  1314 ;; Hardware stack levels used:    1
  1315 ;; Hardware stack levels required when called:    1
  1316 ;; This function calls:
  1317 ;;		_atraso_ms
  1318 ;; This function is called by:
  1319 ;;		_main
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323                           	psect	text1
  1324  000A3C                     __ptext1:
  1325                           	opt callstack 0
  1326  000A3C                     _tc_tecla:
  1327                           	opt callstack 29
  1328  000A3C                     
  1329                           ;teclado.c: 15:     unsigned int to = 0;
  1330  000A3C  0E00               	movlw	0
  1331  000A3E  6E0A               	movwf	(tc_tecla@to+1)^0,c
  1332  000A40  0E00               	movlw	0
  1333  000A42  6E09               	movwf	tc_tecla@to^0,c
  1334                           
  1335                           ;teclado.c: 16:     unsigned char i;;teclado.c: 17:     unsigned char ret = 0;
  1336  000A44  0E00               	movlw	0
  1337  000A46  6E0C               	movwf	tc_tecla@ret^0,c
  1338  000A48                     
  1339                           ;teclado.c: 18:     unsigned char tmp = (*(volatile __near unsigned char*)0xF81);
  1340  000A48  CF81 F00B          	movff	3969,tc_tecla@tmp	;volatile
  1341                           
  1342                           ;teclado.c: 21:     while (((to < timeout) || (!timeout))&&(!ret)) {
  1343  000A4C  EFCF  F005         	goto	l2065
  1344  000A50                     l2013:
  1345                           
  1346                           ;teclado.c: 22:         for (i = 0; i < 3; i++) {
  1347  000A50  0E00               	movlw	0
  1348  000A52  6E0D               	movwf	tc_tecla@i^0,c
  1349  000A54                     l2019:
  1350                           
  1351                           ;teclado.c: 23:             (*(volatile __near unsigned char*)0xF81) |= ~linha[i];
  1352  000A54  0E01               	movlw	low _linha
  1353  000A56  240D               	addwf	tc_tecla@i^0,w,c
  1354  000A58  6EF6               	movwf	tblptrl,c
  1355  000A5A  6AF7               	clrf	tblptrh,c
  1356  000A5C  0E06               	movlw	high _linha
  1357  000A5E  22F7               	addwfc	tblptrh,f,c
  1358  000A60                     	if	0	;There are less than 3 active tblptr bytes
  1359  000A60                     	endif
  1360  000A60  0008               	tblrd		*
  1361  000A62  50F5               	movf	tablat,w,c
  1362  000A64  0AFF               	xorlw	255
  1363  000A66  1281               	iorwf	129,f,c	;volatile
  1364  000A68                     
  1365                           ;teclado.c: 24:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<3))) 
      +                          {
  1366  000A68  B683               	btfsc	131,3,c	;volatile
  1367  000A6A  EF39  F005         	goto	u1071
  1368  000A6E  EF3B  F005         	goto	u1070
  1369  000A72                     u1071:
  1370  000A72  EF53  F005         	goto	l164
  1371  000A76                     u1070:
  1372  000A76                     
  1373                           ;teclado.c: 25:                 atraso_ms(atraso);
  1374  000A76  0E00               	movlw	0
  1375  000A78  6E02               	movwf	(atraso_ms@t+1)^0,c
  1376  000A7A  0E0F               	movlw	15
  1377  000A7C  6E01               	movwf	atraso_ms@t^0,c
  1378  000A7E  ECF6  F008         	call	_atraso_ms	;wreg free
  1379  000A82                     
  1380                           ;teclado.c: 26:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<3
      +                          ))) {
  1381  000A82  B683               	btfsc	131,3,c	;volatile
  1382  000A84  EF46  F005         	goto	u1081
  1383  000A88  EF48  F005         	goto	u1080
  1384  000A8C                     u1081:
  1385  000A8C  EF53  F005         	goto	l164
  1386  000A90                     u1080:
  1387  000A90                     l166:
  1388  000A90  A683               	btfss	131,3,c	;volatile
  1389  000A92  EF4D  F005         	goto	u1091
  1390  000A96  EF4F  F005         	goto	u1090
  1391  000A9A                     u1091:
  1392  000A9A  EF48  F005         	goto	l166
  1393  000A9E                     u1090:
  1394  000A9E                     
  1395                           ;teclado.c: 28:                     ret = 1 + i;
  1396  000A9E  280D               	incf	tc_tecla@i^0,w,c
  1397  000AA0  6E0C               	movwf	tc_tecla@ret^0,c
  1398                           
  1399                           ;teclado.c: 29:                     break;
  1400  000AA2  EFC5  F005         	goto	l2061
  1401  000AA6                     l164:
  1402                           
  1403                           ;teclado.c: 32:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<2))) 
      +                          {
  1404  000AA6  B483               	btfsc	131,2,c	;volatile
  1405  000AA8  EF58  F005         	goto	u1101
  1406  000AAC  EF5A  F005         	goto	u1100
  1407  000AB0                     u1101:
  1408  000AB0  EF73  F005         	goto	l169
  1409  000AB4                     u1100:
  1410  000AB4                     
  1411                           ;teclado.c: 33:                 atraso_ms(atraso);
  1412  000AB4  0E00               	movlw	0
  1413  000AB6  6E02               	movwf	(atraso_ms@t+1)^0,c
  1414  000AB8  0E0F               	movlw	15
  1415  000ABA  6E01               	movwf	atraso_ms@t^0,c
  1416  000ABC  ECF6  F008         	call	_atraso_ms	;wreg free
  1417  000AC0                     
  1418                           ;teclado.c: 34:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<2
      +                          ))) {
  1419  000AC0  B483               	btfsc	131,2,c	;volatile
  1420  000AC2  EF65  F005         	goto	u1111
  1421  000AC6  EF67  F005         	goto	u1110
  1422  000ACA                     u1111:
  1423  000ACA  EF73  F005         	goto	l169
  1424  000ACE                     u1110:
  1425  000ACE                     l171:
  1426  000ACE  A483               	btfss	131,2,c	;volatile
  1427  000AD0  EF6C  F005         	goto	u1121
  1428  000AD4  EF6E  F005         	goto	u1120
  1429  000AD8                     u1121:
  1430  000AD8  EF67  F005         	goto	l171
  1431  000ADC                     u1120:
  1432  000ADC                     
  1433                           ;teclado.c: 36:                     ret = 4 + i;
  1434  000ADC  500D               	movf	tc_tecla@i^0,w,c
  1435  000ADE  0F04               	addlw	4
  1436  000AE0  6E0C               	movwf	tc_tecla@ret^0,c
  1437                           
  1438                           ;teclado.c: 37:                     break;
  1439  000AE2  EFC5  F005         	goto	l2061
  1440  000AE6                     l169:
  1441                           
  1442                           ;teclado.c: 40:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<1))) 
      +                          {
  1443  000AE6  B283               	btfsc	131,1,c	;volatile
  1444  000AE8  EF78  F005         	goto	u1131
  1445  000AEC  EF7A  F005         	goto	u1130
  1446  000AF0                     u1131:
  1447  000AF0  EF93  F005         	goto	l174
  1448  000AF4                     u1130:
  1449  000AF4                     
  1450                           ;teclado.c: 41:                 atraso_ms(atraso);
  1451  000AF4  0E00               	movlw	0
  1452  000AF6  6E02               	movwf	(atraso_ms@t+1)^0,c
  1453  000AF8  0E0F               	movlw	15
  1454  000AFA  6E01               	movwf	atraso_ms@t^0,c
  1455  000AFC  ECF6  F008         	call	_atraso_ms	;wreg free
  1456  000B00                     
  1457                           ;teclado.c: 42:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<1
      +                          ))) {
  1458  000B00  B283               	btfsc	131,1,c	;volatile
  1459  000B02  EF85  F005         	goto	u1141
  1460  000B06  EF87  F005         	goto	u1140
  1461  000B0A                     u1141:
  1462  000B0A  EF93  F005         	goto	l174
  1463  000B0E                     u1140:
  1464  000B0E                     l176:
  1465  000B0E  A283               	btfss	131,1,c	;volatile
  1466  000B10  EF8C  F005         	goto	u1151
  1467  000B14  EF8E  F005         	goto	u1150
  1468  000B18                     u1151:
  1469  000B18  EF87  F005         	goto	l176
  1470  000B1C                     u1150:
  1471  000B1C                     
  1472                           ;teclado.c: 44:                     ret = 7 + i;
  1473  000B1C  500D               	movf	tc_tecla@i^0,w,c
  1474  000B1E  0F07               	addlw	7
  1475  000B20  6E0C               	movwf	tc_tecla@ret^0,c
  1476                           
  1477                           ;teclado.c: 45:                     break;
  1478  000B22  EFC5  F005         	goto	l2061
  1479  000B26                     l174:
  1480                           
  1481                           ;teclado.c: 48:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<0))) 
      +                          {
  1482  000B26  B083               	btfsc	131,0,c	;volatile
  1483  000B28  EF98  F005         	goto	u1161
  1484  000B2C  EF9A  F005         	goto	u1160
  1485  000B30                     u1161:
  1486  000B30  EFB3  F005         	goto	l2055
  1487  000B34                     u1160:
  1488  000B34                     
  1489                           ;teclado.c: 49:                 atraso_ms(atraso);
  1490  000B34  0E00               	movlw	0
  1491  000B36  6E02               	movwf	(atraso_ms@t+1)^0,c
  1492  000B38  0E0F               	movlw	15
  1493  000B3A  6E01               	movwf	atraso_ms@t^0,c
  1494  000B3C  ECF6  F008         	call	_atraso_ms	;wreg free
  1495  000B40                     
  1496                           ;teclado.c: 50:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<0
      +                          ))) {
  1497  000B40  B083               	btfsc	131,0,c	;volatile
  1498  000B42  EFA5  F005         	goto	u1171
  1499  000B46  EFA7  F005         	goto	u1170
  1500  000B4A                     u1171:
  1501  000B4A  EFB3  F005         	goto	l2055
  1502  000B4E                     u1170:
  1503  000B4E                     l181:
  1504  000B4E  A083               	btfss	131,0,c	;volatile
  1505  000B50  EFAC  F005         	goto	u1181
  1506  000B54  EFAE  F005         	goto	u1180
  1507  000B58                     u1181:
  1508  000B58  EFA7  F005         	goto	l181
  1509  000B5C                     u1180:
  1510  000B5C                     
  1511                           ;teclado.c: 52:                     ret = 10 + i;
  1512  000B5C  500D               	movf	tc_tecla@i^0,w,c
  1513  000B5E  0F0A               	addlw	10
  1514  000B60  6E0C               	movwf	tc_tecla@ret^0,c
  1515                           
  1516                           ;teclado.c: 53:                     break;
  1517  000B62  EFC5  F005         	goto	l2061
  1518  000B66                     l2055:
  1519                           
  1520                           ;teclado.c: 56:             (*(volatile __near unsigned char*)0xF81) &= linha[i];
  1521  000B66  0E01               	movlw	low _linha
  1522  000B68  240D               	addwf	tc_tecla@i^0,w,c
  1523  000B6A  6EF6               	movwf	tblptrl,c
  1524  000B6C  6AF7               	clrf	tblptrh,c
  1525  000B6E  0E06               	movlw	high _linha
  1526  000B70  22F7               	addwfc	tblptrh,f,c
  1527  000B72                     	if	0	;There are less than 3 active tblptr bytes
  1528  000B72                     	endif
  1529  000B72  0008               	tblrd		*
  1530  000B74  50F5               	movf	tablat,w,c
  1531  000B76  1681               	andwf	129,f,c	;volatile
  1532  000B78                     
  1533                           ;teclado.c: 57:         };
  1534  000B78  2A0D               	incf	tc_tecla@i^0,f,c
  1535  000B7A  0E02               	movlw	2
  1536  000B7C  640D               	cpfsgt	tc_tecla@i^0,c
  1537  000B7E  EFC3  F005         	goto	u1191
  1538  000B82  EFC5  F005         	goto	u1190
  1539  000B86                     u1191:
  1540  000B86  EF2A  F005         	goto	l2019
  1541  000B8A                     u1190:
  1542  000B8A                     l2061:
  1543                           
  1544                           ;teclado.c: 58:         atraso_ms(atraso_min);
  1545  000B8A  0E00               	movlw	0
  1546  000B8C  6E02               	movwf	(atraso_ms@t+1)^0,c
  1547  000B8E  0E05               	movlw	5
  1548  000B90  6E01               	movwf	atraso_ms@t^0,c
  1549  000B92  ECF6  F008         	call	_atraso_ms	;wreg free
  1550  000B96                     
  1551                           ;teclado.c: 59:         to += 5;
  1552  000B96  0E05               	movlw	5
  1553  000B98  2609               	addwf	tc_tecla@to^0,f,c
  1554  000B9A  0E00               	movlw	0
  1555  000B9C  220A               	addwfc	(tc_tecla@to+1)^0,f,c
  1556  000B9E                     l2065:
  1557                           
  1558                           ;teclado.c: 21:     while (((to < timeout) || (!timeout))&&(!ret)) {
  1559  000B9E  5007               	movf	tc_tecla@timeout^0,w,c
  1560  000BA0  5C09               	subwf	tc_tecla@to^0,w,c
  1561  000BA2  5008               	movf	(tc_tecla@timeout+1)^0,w,c
  1562  000BA4  580A               	subwfb	(tc_tecla@to+1)^0,w,c
  1563  000BA6  A0D8               	btfss	status,0,c
  1564  000BA8  EFD8  F005         	goto	u1201
  1565  000BAC  EFDA  F005         	goto	u1200
  1566  000BB0                     u1201:
  1567  000BB0  EFE3  F005         	goto	l2069
  1568  000BB4                     u1200:
  1569  000BB4  5007               	movf	tc_tecla@timeout^0,w,c
  1570  000BB6  1008               	iorwf	(tc_tecla@timeout+1)^0,w,c
  1571  000BB8  A4D8               	btfss	status,2,c
  1572  000BBA  EFE1  F005         	goto	u1211
  1573  000BBE  EFE3  F005         	goto	u1210
  1574  000BC2                     u1211:
  1575  000BC2  EFEB  F005         	goto	l2071
  1576  000BC6                     u1210:
  1577  000BC6                     l2069:
  1578  000BC6  500C               	movf	tc_tecla@ret^0,w,c
  1579  000BC8  B4D8               	btfsc	status,2,c
  1580  000BCA  EFE9  F005         	goto	u1221
  1581  000BCE  EFEB  F005         	goto	u1220
  1582  000BD2                     u1221:
  1583  000BD2  EF28  F005         	goto	l2013
  1584  000BD6                     u1220:
  1585  000BD6                     l2071:
  1586                           
  1587                           ;teclado.c: 62:     if (!ret)ret = 255;
  1588  000BD6  500C               	movf	tc_tecla@ret^0,w,c
  1589  000BD8  A4D8               	btfss	status,2,c
  1590  000BDA  EFF1  F005         	goto	u1231
  1591  000BDE  EFF3  F005         	goto	u1230
  1592  000BE2                     u1231:
  1593  000BE2  EFF4  F005         	goto	l2075
  1594  000BE6                     u1230:
  1595  000BE6  680C               	setf	tc_tecla@ret^0,c
  1596  000BE8                     l2075:
  1597                           
  1598                           ;teclado.c: 63:     if (ret == 11)ret = 0;
  1599  000BE8  0E0B               	movlw	11
  1600  000BEA  180C               	xorwf	tc_tecla@ret^0,w,c
  1601  000BEC  A4D8               	btfss	status,2,c
  1602  000BEE  EFFB  F005         	goto	u1241
  1603  000BF2  EFFD  F005         	goto	u1240
  1604  000BF6                     u1241:
  1605  000BF6  EFFF  F005         	goto	l2079
  1606  000BFA                     u1240:
  1607  000BFA  0E00               	movlw	0
  1608  000BFC  6E0C               	movwf	tc_tecla@ret^0,c
  1609  000BFE                     l2079:
  1610                           
  1611                           ;teclado.c: 64:     (*(volatile __near unsigned char*)0xF81) = tmp;
  1612  000BFE  C00B  FF81         	movff	tc_tecla@tmp,3969	;volatile
  1613                           
  1614                           ;teclado.c: 65:     return ret;
  1615  000C02  500C               	movf	tc_tecla@ret^0,w,c
  1616  000C04  0012               	return		;funcret
  1617  000C06                     __end_of_tc_tecla:
  1618                           	opt callstack 0
  1619                           
  1620 ;; *************** function _srand *****************
  1621 ;; Defined at:
  1622 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;  s               2    6[COMRAM] unsigned int 
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;		None
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  1    wreg      void 
  1629 ;; Registers used:
  1630 ;;		wreg, status,2, status,0
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1636 ;;      Params:         2       0       0       0       0       0       0
  1637 ;;      Locals:         0       0       0       0       0       0       0
  1638 ;;      Temps:          4       0       0       0       0       0       0
  1639 ;;      Totals:         6       0       0       0       0       0       0
  1640 ;;Total ram usage:        6 bytes
  1641 ;; Hardware stack levels used:    1
  1642 ;; This function calls:
  1643 ;;		Nothing
  1644 ;; This function is called by:
  1645 ;;		_main
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           	psect	text2
  1650  0014BA                     __ptext2:
  1651                           	opt callstack 0
  1652  0014BA                     _srand:
  1653                           	opt callstack 30
  1654  0014BA  0EFF               	movlw	255
  1655  0014BC  6E09               	movwf	??_srand^0,c
  1656  0014BE  0EFF               	movlw	255
  1657  0014C0  6E0A               	movwf	(??_srand+1)^0,c
  1658  0014C2  C007  F00B         	movff	srand@s,??_srand+2
  1659  0014C6  C008  F00C         	movff	srand@s+1,??_srand+3
  1660  0014CA  5009               	movf	??_srand^0,w,c
  1661  0014CC  260B               	addwf	(??_srand+2)^0,f,c
  1662  0014CE  500A               	movf	(??_srand+1)^0,w,c
  1663  0014D0  220C               	addwfc	(??_srand+3)^0,f,c
  1664  0014D2  C00B  F077         	movff	??_srand+2,_seed
  1665  0014D6  C00C  F078         	movff	??_srand+3,_seed+1
  1666  0014DA  6A79               	clrf	(_seed+2)^0,c
  1667  0014DC  6A7A               	clrf	(_seed+3)^0,c
  1668  0014DE  6A7B               	clrf	(_seed+4)^0,c
  1669  0014E0  6A7C               	clrf	(_seed+5)^0,c
  1670  0014E2  6A7D               	clrf	(_seed+6)^0,c
  1671  0014E4  6A7E               	clrf	(_seed+7)^0,c
  1672  0014E6  0012               	return		;funcret
  1673  0014E8                     __end_of_srand:
  1674                           	opt callstack 0
  1675                           
  1676 ;; *************** function _rtcInit *****************
  1677 ;; Defined at:
  1678 ;;		line 46 in file "rtc.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;		None
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;		None
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      void 
  1685 ;; Registers used:
  1686 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1692 ;;      Params:         0       0       0       0       0       0       0
  1693 ;;      Locals:         0       0       0       0       0       0       0
  1694 ;;      Temps:          0       0       0       0       0       0       0
  1695 ;;      Totals:         0       0       0       0       0       0       0
  1696 ;;Total ram usage:        0 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    3
  1699 ;; This function calls:
  1700 ;;		_ht1380write
  1701 ;;		_rtcGetSeconds
  1702 ;;		_rtcPutSeconds
  1703 ;; This function is called by:
  1704 ;;		_main
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           	psect	text3
  1709  0015A0                     __ptext3:
  1710                           	opt callstack 0
  1711  0015A0                     _rtcInit:
  1712                           	opt callstack 27
  1713  0015A0                     
  1714                           ;rtc.c: 48:     ((((*(volatile __near unsigned char*)0xF94)) &= ~(1<<5)));
  1715  0015A0  9A94               	bcf	148,5,c	;volatile
  1716                           
  1717                           ;rtc.c: 49:     ((((*(volatile __near unsigned char*)0xF94)) &= ~(1<<4)));
  1718  0015A2  9894               	bcf	148,4,c	;volatile
  1719                           
  1720                           ;rtc.c: 50:     ((((*(volatile __near unsigned char*)0xF94)) &= ~(1<<3)));
  1721  0015A4  9694               	bcf	148,3,c	;volatile
  1722  0015A6                     
  1723                           ;rtc.c: 51:  ht1380write(7, 0);
  1724  0015A6  0E00               	movlw	0
  1725  0015A8  6E29               	movwf	ht1380write@dados^0,c
  1726  0015AA  0E07               	movlw	7
  1727  0015AC  EC9E  F00A         	call	_ht1380write
  1728  0015B0                     
  1729                           ;rtc.c: 52:  rtcPutSeconds(rtcGetSeconds());
  1730  0015B0  ECC1  F00A         	call	_rtcGetSeconds	;wreg free
  1731  0015B4  EC3C  F00A         	call	_rtcPutSeconds
  1732  0015B8  0012               	return		;funcret
  1733  0015BA                     __end_of_rtcInit:
  1734                           	opt callstack 0
  1735                           
  1736 ;; *************** function _rtcPutSeconds *****************
  1737 ;; Defined at:
  1738 ;;		line 206 in file "rtc.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;  seconds         1    wreg     unsigned char 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  seconds         1   44[COMRAM] unsigned char 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      void 
  1745 ;; Registers used:
  1746 ;;		wreg, status,2, status,0, cstack
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1752 ;;      Params:         0       0       0       0       0       0       0
  1753 ;;      Locals:         1       0       0       0       0       0       0
  1754 ;;      Temps:          2       0       0       0       0       0       0
  1755 ;;      Totals:         3       0       0       0       0       0       0
  1756 ;;Total ram usage:        3 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; Hardware stack levels required when called:    2
  1759 ;; This function calls:
  1760 ;;		___awdiv
  1761 ;;		___awmod
  1762 ;;		_ht1380write
  1763 ;; This function is called by:
  1764 ;;		_rtcInit
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           
  1768                           	psect	text4
  1769  001478                     __ptext4:
  1770                           	opt callstack 0
  1771  001478                     _rtcPutSeconds:
  1772                           	opt callstack 27
  1773                           
  1774                           ;incstack = 0
  1775                           ;rtcPutSeconds@seconds stored from wreg
  1776  001478  6E2D               	movwf	rtcPutSeconds@seconds^0,c
  1777  00147A                     
  1778                           ;rtc.c: 207:    ht1380write(0, (seconds % 10) | ((seconds / 10) << 4));
  1779  00147A  C02D  F001         	movff	rtcPutSeconds@seconds,___awdiv@dividend
  1780  00147E  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1781  001480  0E00               	movlw	0
  1782  001482  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1783  001484  0E0A               	movlw	10
  1784  001486  6E03               	movwf	___awdiv@divisor^0,c
  1785  001488  ECEE  F006         	call	___awdiv	;wreg free
  1786  00148C  C001  F02B         	movff	?___awdiv,??_rtcPutSeconds
  1787  001490  C002  F02C         	movff	?___awdiv+1,??_rtcPutSeconds+1
  1788  001494  3A2B               	swapf	??_rtcPutSeconds^0,f,c
  1789  001496  0EF0               	movlw	240
  1790  001498  162B               	andwf	??_rtcPutSeconds^0,f,c
  1791  00149A  C02D  F023         	movff	rtcPutSeconds@seconds,___awmod@dividend
  1792  00149E  6A24               	clrf	(___awmod@dividend+1)^0,c
  1793  0014A0  0E00               	movlw	0
  1794  0014A2  6E26               	movwf	(___awmod@divisor+1)^0,c
  1795  0014A4  0E0A               	movlw	10
  1796  0014A6  6E25               	movwf	___awmod@divisor^0,c
  1797  0014A8  EC50  F007         	call	___awmod	;wreg free
  1798  0014AC  5023               	movf	?___awmod^0,w,c
  1799  0014AE  102B               	iorwf	??_rtcPutSeconds^0,w,c
  1800  0014B0  6E29               	movwf	ht1380write@dados^0,c
  1801  0014B2  0E00               	movlw	0
  1802  0014B4  EC9E  F00A         	call	_ht1380write
  1803  0014B8  0012               	return		;funcret
  1804  0014BA                     __end_of_rtcPutSeconds:
  1805                           	opt callstack 0
  1806                           
  1807 ;; *************** function _ht1380write *****************
  1808 ;; Defined at:
  1809 ;;		line 104 in file "rtc.c"
  1810 ;; Parameters:    Size  Location     Type
  1811 ;;  addr            1    wreg     unsigned char 
  1812 ;;  dados           1   40[COMRAM] unsigned char 
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;  addr            1   41[COMRAM] unsigned char 
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  1    wreg      void 
  1817 ;; Registers used:
  1818 ;;		wreg, status,2, status,0, cstack
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1824 ;;      Params:         1       0       0       0       0       0       0
  1825 ;;      Locals:         1       0       0       0       0       0       0
  1826 ;;      Temps:          0       0       0       0       0       0       0
  1827 ;;      Totals:         2       0       0       0       0       0       0
  1828 ;;Total ram usage:        2 bytes
  1829 ;; Hardware stack levels used:    1
  1830 ;; Hardware stack levels required when called:    1
  1831 ;; This function calls:
  1832 ;;		_writeByte
  1833 ;; This function is called by:
  1834 ;;		_rtcInit
  1835 ;;		_rtcPutSeconds
  1836 ;;		_rtcSetDateTime
  1837 ;;		_rtcPutMinutes
  1838 ;;		_rtcPutHours
  1839 ;;		_rtcPutDate
  1840 ;;		_rtcPutMonth
  1841 ;;		_rtcPutDay
  1842 ;;		_rtcPutYear
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           	psect	text5
  1847  00153C                     __ptext5:
  1848                           	opt callstack 0
  1849  00153C                     _ht1380write:
  1850                           	opt callstack 27
  1851                           
  1852                           ;incstack = 0
  1853                           ;ht1380write@addr stored from wreg
  1854  00153C  6E2A               	movwf	ht1380write@addr^0,c
  1855  00153E                     
  1856                           ;rtc.c: 105:    ((((*(volatile __near unsigned char*)0xF82)) &= ~(1<<5)));
  1857  00153E  9A82               	bcf	130,5,c	;volatile
  1858                           
  1859                           ;rtc.c: 106:    ((((*(volatile __near unsigned char*)0xF82)) &= ~(1<<3)));
  1860  001540  9682               	bcf	130,3,c	;volatile
  1861                           
  1862                           ;rtc.c: 107:    ((((*(volatile __near unsigned char*)0xF82)) &= ~(1<<4)));
  1863  001542  9882               	bcf	130,4,c	;volatile
  1864                           
  1865                           ;rtc.c: 110:    ((((*(volatile __near unsigned char*)0xF82)) |= (1<<5)));
  1866  001544  8A82               	bsf	130,5,c	;volatile
  1867  001546                     
  1868                           ;rtc.c: 112:    addr <<= 1;
  1869  001546  90D8               	bcf	status,0,c
  1870  001548  362A               	rlcf	ht1380write@addr^0,f,c
  1871  00154A                     
  1872                           ;rtc.c: 113:    addr |= 0x80;
  1873  00154A  8E2A               	bsf	ht1380write@addr^0,7,c
  1874  00154C                     
  1875                           ;rtc.c: 114:    writeByte(addr);
  1876  00154C  502A               	movf	ht1380write@addr^0,w,c
  1877  00154E  EC49  F008         	call	_writeByte
  1878  001552                     
  1879                           ;rtc.c: 115:    writeByte(dados);
  1880  001552  5029               	movf	ht1380write@dados^0,w,c
  1881  001554  EC49  F008         	call	_writeByte
  1882  001558                     
  1883                           ;rtc.c: 116:    ((((*(volatile __near unsigned char*)0xF82)) &= ~(1<<5)));
  1884  001558  9A82               	bcf	130,5,c	;volatile
  1885  00155A                     
  1886                           ;rtc.c: 117:    ((((*(volatile __near unsigned char*)0xF82)) &= ~(1<<3)));
  1887  00155A  9682               	bcf	130,3,c	;volatile
  1888  00155C                     
  1889                           ;rtc.c: 118:    ((((*(volatile __near unsigned char*)0xF82)) &= ~(1<<4)));
  1890  00155C  9882               	bcf	130,4,c	;volatile
  1891  00155E  0012               	return		;funcret
  1892  001560                     __end_of_ht1380write:
  1893                           	opt callstack 0
  1894                           
  1895 ;; *************** function ___awmod *****************
  1896 ;; Defined at:
  1897 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  dividend        2   34[COMRAM] int 
  1900 ;;  divisor         2   36[COMRAM] int 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  sign            1   39[COMRAM] unsigned char 
  1903 ;;  counter         1   38[COMRAM] unsigned char 
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  2   34[COMRAM] int 
  1906 ;; Registers used:
  1907 ;;		wreg, status,2, status,0
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1913 ;;      Params:         4       0       0       0       0       0       0
  1914 ;;      Locals:         2       0       0       0       0       0       0
  1915 ;;      Temps:          0       0       0       0       0       0       0
  1916 ;;      Totals:         6       0       0       0       0       0       0
  1917 ;;Total ram usage:        6 bytes
  1918 ;; Hardware stack levels used:    1
  1919 ;; This function calls:
  1920 ;;		Nothing
  1921 ;; This function is called by:
  1922 ;;		_main
  1923 ;;		_rtcPutSeconds
  1924 ;;		_rtcPutMinutes
  1925 ;;		_rtcPutHours
  1926 ;;		_rtcPutDate
  1927 ;;		_rtcPutMonth
  1928 ;;		_rtcPutYear
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           	psect	text6
  1933  000EA0                     __ptext6:
  1934                           	opt callstack 0
  1935  000EA0                     ___awmod:
  1936                           	opt callstack 28
  1937  000EA0  0E00               	movlw	0
  1938  000EA2  6E28               	movwf	___awmod@sign^0,c
  1939  000EA4  BE24               	btfsc	(___awmod@dividend+1)^0,7,c
  1940  000EA6  EF59  F007         	goto	u850
  1941  000EAA  EF57  F007         	goto	u851
  1942  000EAE                     u851:
  1943  000EAE  EF5F  F007         	goto	l1819
  1944  000EB2                     u850:
  1945  000EB2  6C23               	negf	___awmod@dividend^0,c
  1946  000EB4  1E24               	comf	(___awmod@dividend+1)^0,f,c
  1947  000EB6  B0D8               	btfsc	status,0,c
  1948  000EB8  2A24               	incf	(___awmod@dividend+1)^0,f,c
  1949  000EBA  0E01               	movlw	1
  1950  000EBC  6E28               	movwf	___awmod@sign^0,c
  1951  000EBE                     l1819:
  1952  000EBE  BE26               	btfsc	(___awmod@divisor+1)^0,7,c
  1953  000EC0  EF66  F007         	goto	u860
  1954  000EC4  EF64  F007         	goto	u861
  1955  000EC8                     u861:
  1956  000EC8  EF6A  F007         	goto	l1823
  1957  000ECC                     u860:
  1958  000ECC  6C25               	negf	___awmod@divisor^0,c
  1959  000ECE  1E26               	comf	(___awmod@divisor+1)^0,f,c
  1960  000ED0  B0D8               	btfsc	status,0,c
  1961  000ED2  2A26               	incf	(___awmod@divisor+1)^0,f,c
  1962  000ED4                     l1823:
  1963  000ED4  5025               	movf	___awmod@divisor^0,w,c
  1964  000ED6  1026               	iorwf	(___awmod@divisor+1)^0,w,c
  1965  000ED8  B4D8               	btfsc	status,2,c
  1966  000EDA  EF71  F007         	goto	u871
  1967  000EDE  EF73  F007         	goto	u870
  1968  000EE2                     u871:
  1969  000EE2  EF97  F007         	goto	l1839
  1970  000EE6                     u870:
  1971  000EE6  0E01               	movlw	1
  1972  000EE8  6E27               	movwf	___awmod@counter^0,c
  1973  000EEA  EF7B  F007         	goto	l1829
  1974  000EEE                     l1827:
  1975  000EEE  90D8               	bcf	status,0,c
  1976  000EF0  3625               	rlcf	___awmod@divisor^0,f,c
  1977  000EF2  3626               	rlcf	(___awmod@divisor+1)^0,f,c
  1978  000EF4  2A27               	incf	___awmod@counter^0,f,c
  1979  000EF6                     l1829:
  1980  000EF6  AE26               	btfss	(___awmod@divisor+1)^0,7,c
  1981  000EF8  EF80  F007         	goto	u881
  1982  000EFC  EF82  F007         	goto	u880
  1983  000F00                     u881:
  1984  000F00  EF77  F007         	goto	l1827
  1985  000F04                     u880:
  1986  000F04                     l1831:
  1987  000F04  5025               	movf	___awmod@divisor^0,w,c
  1988  000F06  5C23               	subwf	___awmod@dividend^0,w,c
  1989  000F08  5026               	movf	(___awmod@divisor+1)^0,w,c
  1990  000F0A  5824               	subwfb	(___awmod@dividend+1)^0,w,c
  1991  000F0C  A0D8               	btfss	status,0,c
  1992  000F0E  EF8B  F007         	goto	u891
  1993  000F12  EF8D  F007         	goto	u890
  1994  000F16                     u891:
  1995  000F16  EF91  F007         	goto	l1835
  1996  000F1A                     u890:
  1997  000F1A  5025               	movf	___awmod@divisor^0,w,c
  1998  000F1C  5E23               	subwf	___awmod@dividend^0,f,c
  1999  000F1E  5026               	movf	(___awmod@divisor+1)^0,w,c
  2000  000F20  5A24               	subwfb	(___awmod@dividend+1)^0,f,c
  2001  000F22                     l1835:
  2002  000F22  90D8               	bcf	status,0,c
  2003  000F24  3226               	rrcf	(___awmod@divisor+1)^0,f,c
  2004  000F26  3225               	rrcf	___awmod@divisor^0,f,c
  2005  000F28  2E27               	decfsz	___awmod@counter^0,f,c
  2006  000F2A  EF82  F007         	goto	l1831
  2007  000F2E                     l1839:
  2008  000F2E  5028               	movf	___awmod@sign^0,w,c
  2009  000F30  B4D8               	btfsc	status,2,c
  2010  000F32  EF9D  F007         	goto	u901
  2011  000F36  EF9F  F007         	goto	u900
  2012  000F3A                     u901:
  2013  000F3A  EFA3  F007         	goto	l1843
  2014  000F3E                     u900:
  2015  000F3E  6C23               	negf	___awmod@dividend^0,c
  2016  000F40  1E24               	comf	(___awmod@dividend+1)^0,f,c
  2017  000F42  B0D8               	btfsc	status,0,c
  2018  000F44  2A24               	incf	(___awmod@dividend+1)^0,f,c
  2019  000F46                     l1843:
  2020  000F46  C023  F023         	movff	___awmod@dividend,?___awmod
  2021  000F4A  C024  F024         	movff	___awmod@dividend+1,?___awmod+1
  2022  000F4E  0012               	return		;funcret
  2023  000F50                     __end_of___awmod:
  2024                           	opt callstack 0
  2025                           
  2026 ;; *************** function ___awdiv *****************
  2027 ;; Defined at:
  2028 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;  dividend        2    0[COMRAM] int 
  2031 ;;  divisor         2    2[COMRAM] int 
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;  quotient        2    6[COMRAM] int 
  2034 ;;  sign            1    5[COMRAM] unsigned char 
  2035 ;;  counter         1    4[COMRAM] unsigned char 
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  2    0[COMRAM] int 
  2038 ;; Registers used:
  2039 ;;		wreg, status,2, status,0
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2045 ;;      Params:         4       0       0       0       0       0       0
  2046 ;;      Locals:         4       0       0       0       0       0       0
  2047 ;;      Temps:          0       0       0       0       0       0       0
  2048 ;;      Totals:         8       0       0       0       0       0       0
  2049 ;;Total ram usage:        8 bytes
  2050 ;; Hardware stack levels used:    1
  2051 ;; This function calls:
  2052 ;;		Nothing
  2053 ;; This function is called by:
  2054 ;;		_rtcPutSeconds
  2055 ;;		_rtcPutMinutes
  2056 ;;		_rtcPutHours
  2057 ;;		_rtcPutDate
  2058 ;;		_rtcPutMonth
  2059 ;;		_rtcPutYear
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           	psect	text7
  2064  000DDC                     __ptext7:
  2065                           	opt callstack 0
  2066  000DDC                     ___awdiv:
  2067                           	opt callstack 28
  2068  000DDC  0E00               	movlw	0
  2069  000DDE  6E06               	movwf	___awdiv@sign^0,c
  2070  000DE0  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2071  000DE2  EFF7  F006         	goto	u790
  2072  000DE6  EFF5  F006         	goto	u791
  2073  000DEA                     u791:
  2074  000DEA  EFFD  F006         	goto	l1775
  2075  000DEE                     u790:
  2076  000DEE  6C03               	negf	___awdiv@divisor^0,c
  2077  000DF0  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2078  000DF2  B0D8               	btfsc	status,0,c
  2079  000DF4  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2080  000DF6  0E01               	movlw	1
  2081  000DF8  6E06               	movwf	___awdiv@sign^0,c
  2082  000DFA                     l1775:
  2083  000DFA  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2084  000DFC  EF04  F007         	goto	u800
  2085  000E00  EF02  F007         	goto	u801
  2086  000E04                     u801:
  2087  000E04  EF0A  F007         	goto	l1781
  2088  000E08                     u800:
  2089  000E08  6C01               	negf	___awdiv@dividend^0,c
  2090  000E0A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2091  000E0C  B0D8               	btfsc	status,0,c
  2092  000E0E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2093  000E10  0E01               	movlw	1
  2094  000E12  1A06               	xorwf	___awdiv@sign^0,f,c
  2095  000E14                     l1781:
  2096  000E14  0E00               	movlw	0
  2097  000E16  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2098  000E18  0E00               	movlw	0
  2099  000E1A  6E07               	movwf	___awdiv@quotient^0,c
  2100  000E1C  5003               	movf	___awdiv@divisor^0,w,c
  2101  000E1E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2102  000E20  B4D8               	btfsc	status,2,c
  2103  000E22  EF15  F007         	goto	u811
  2104  000E26  EF17  F007         	goto	u810
  2105  000E2A                     u811:
  2106  000E2A  EF3F  F007         	goto	l1803
  2107  000E2E                     u810:
  2108  000E2E  0E01               	movlw	1
  2109  000E30  6E05               	movwf	___awdiv@counter^0,c
  2110  000E32  EF1F  F007         	goto	l1789
  2111  000E36                     l1787:
  2112  000E36  90D8               	bcf	status,0,c
  2113  000E38  3603               	rlcf	___awdiv@divisor^0,f,c
  2114  000E3A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2115  000E3C  2A05               	incf	___awdiv@counter^0,f,c
  2116  000E3E                     l1789:
  2117  000E3E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2118  000E40  EF24  F007         	goto	u821
  2119  000E44  EF26  F007         	goto	u820
  2120  000E48                     u821:
  2121  000E48  EF1B  F007         	goto	l1787
  2122  000E4C                     u820:
  2123  000E4C                     l1791:
  2124  000E4C  90D8               	bcf	status,0,c
  2125  000E4E  3607               	rlcf	___awdiv@quotient^0,f,c
  2126  000E50  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2127  000E52  5003               	movf	___awdiv@divisor^0,w,c
  2128  000E54  5C01               	subwf	___awdiv@dividend^0,w,c
  2129  000E56  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2130  000E58  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2131  000E5A  A0D8               	btfss	status,0,c
  2132  000E5C  EF32  F007         	goto	u831
  2133  000E60  EF34  F007         	goto	u830
  2134  000E64                     u831:
  2135  000E64  EF39  F007         	goto	l1799
  2136  000E68                     u830:
  2137  000E68  5003               	movf	___awdiv@divisor^0,w,c
  2138  000E6A  5E01               	subwf	___awdiv@dividend^0,f,c
  2139  000E6C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2140  000E6E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2141  000E70  8007               	bsf	___awdiv@quotient^0,0,c
  2142  000E72                     l1799:
  2143  000E72  90D8               	bcf	status,0,c
  2144  000E74  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2145  000E76  3203               	rrcf	___awdiv@divisor^0,f,c
  2146  000E78  2E05               	decfsz	___awdiv@counter^0,f,c
  2147  000E7A  EF26  F007         	goto	l1791
  2148  000E7E                     l1803:
  2149  000E7E  5006               	movf	___awdiv@sign^0,w,c
  2150  000E80  B4D8               	btfsc	status,2,c
  2151  000E82  EF45  F007         	goto	u841
  2152  000E86  EF47  F007         	goto	u840
  2153  000E8A                     u841:
  2154  000E8A  EF4B  F007         	goto	l1807
  2155  000E8E                     u840:
  2156  000E8E  6C07               	negf	___awdiv@quotient^0,c
  2157  000E90  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2158  000E92  B0D8               	btfsc	status,0,c
  2159  000E94  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2160  000E96                     l1807:
  2161  000E96  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2162  000E9A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2163  000E9E  0012               	return		;funcret
  2164  000EA0                     __end_of___awdiv:
  2165                           	opt callstack 0
  2166                           
  2167 ;; *************** function _rtcGetSeconds *****************
  2168 ;; Defined at:
  2169 ;;		line 153 in file "rtc.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;		None
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;  value           1    5[COMRAM] unsigned char 
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      unsigned char 
  2176 ;; Registers used:
  2177 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2183 ;;      Params:         0       0       0       0       0       0       0
  2184 ;;      Locals:         1       0       0       0       0       0       0
  2185 ;;      Temps:          1       0       0       0       0       0       0
  2186 ;;      Totals:         2       0       0       0       0       0       0
  2187 ;;Total ram usage:        2 bytes
  2188 ;; Hardware stack levels used:    1
  2189 ;; Hardware stack levels required when called:    2
  2190 ;; This function calls:
  2191 ;;		_ht1380read
  2192 ;; This function is called by:
  2193 ;;		_main
  2194 ;;		_rtcInit
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           	psect	text8
  2199  001582                     __ptext8:
  2200                           	opt callstack 0
  2201  001582                     _rtcGetSeconds:
  2202                           	opt callstack 27
  2203  001582                     
  2204                           ;rtc.c: 154:    unsigned char value;;rtc.c: 155:    value = ht1380read(0);
  2205  001582  0E00               	movlw	0
  2206  001584  ECA8  F007         	call	_ht1380read
  2207  001588  6E06               	movwf	rtcGetSeconds@value^0,c
  2208  00158A                     
  2209                           ;rtc.c: 156:    return (((value >> 4)&0x07)*10 + (value & 0x0f));
  2210  00158A  C006  F005         	movff	rtcGetSeconds@value,??_rtcGetSeconds
  2211  00158E  0E0F               	movlw	15
  2212  001590  1605               	andwf	??_rtcGetSeconds^0,f,c
  2213  001592  3806               	swapf	rtcGetSeconds@value^0,w,c
  2214  001594  0B0F               	andlw	15
  2215  001596  0B07               	andlw	7
  2216  001598  0D0A               	mullw	10
  2217  00159A  50F3               	movf	243,w,c
  2218  00159C  2405               	addwf	??_rtcGetSeconds^0,w,c
  2219  00159E  0012               	return		;funcret
  2220  0015A0                     __end_of_rtcGetSeconds:
  2221                           	opt callstack 0
  2222                           
  2223 ;; *************** function _ht1380read *****************
  2224 ;; Defined at:
  2225 ;;		line 121 in file "rtc.c"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;  addr            1    wreg     unsigned char 
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;  addr            1    3[COMRAM] unsigned char 
  2230 ;;  dados           1    2[COMRAM] unsigned char 
  2231 ;; Return value:  Size  Location     Type
  2232 ;;                  1    wreg      unsigned char 
  2233 ;; Registers used:
  2234 ;;		wreg, status,2, status,0, cstack
  2235 ;; Tracked objects:
  2236 ;;		On entry : 0/0
  2237 ;;		On exit  : 0/0
  2238 ;;		Unchanged: 0/0
  2239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2240 ;;      Params:         0       0       0       0       0       0       0
  2241 ;;      Locals:         2       0       0       0       0       0       0
  2242 ;;      Temps:          0       0       0       0       0       0       0
  2243 ;;      Totals:         2       0       0       0       0       0       0
  2244 ;;Total ram usage:        2 bytes
  2245 ;; Hardware stack levels used:    1
  2246 ;; Hardware stack levels required when called:    1
  2247 ;; This function calls:
  2248 ;;		_readByte
  2249 ;;		_writeByte
  2250 ;; This function is called by:
  2251 ;;		_rtcGetSeconds
  2252 ;;		_rtcGetMinutes
  2253 ;;		_rtcGetHours
  2254 ;;		_rtcGetDate
  2255 ;;		_rtcGetMonth
  2256 ;;		_rtcGetYear
  2257 ;;		_rtcGetDay
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           	psect	text9
  2262  000F50                     __ptext9:
  2263                           	opt callstack 0
  2264  000F50                     _ht1380read:
  2265                           	opt callstack 27
  2266                           
  2267                           ;incstack = 0
  2268                           ;ht1380read@addr stored from wreg
  2269  000F50  6E04               	movwf	ht1380read@addr^0,c
  2270  000F52                     
  2271                           ;rtc.c: 122:    unsigned char dados;;rtc.c: 123:    ((((*(volatile __near unsigned char*
      +                          )0xF82)) &= ~(1<<5)));
  2272  000F52  9A82               	bcf	130,5,c	;volatile
  2273                           
  2274                           ;rtc.c: 124:    ((((*(volatile __near unsigned char*)0xF82)) &= ~(1<<3)));
  2275  000F54  9682               	bcf	130,3,c	;volatile
  2276                           
  2277                           ;rtc.c: 125:    ((((*(volatile __near unsigned char*)0xF82)) &= ~(1<<4)));
  2278  000F56  9882               	bcf	130,4,c	;volatile
  2279                           
  2280                           ;rtc.c: 127:    ((((*(volatile __near unsigned char*)0xF82)) |= (1<<5)));
  2281  000F58  8A82               	bsf	130,5,c	;volatile
  2282  000F5A                     
  2283                           ;rtc.c: 128:    addr <<= 1;
  2284  000F5A  90D8               	bcf	status,0,c
  2285  000F5C  3604               	rlcf	ht1380read@addr^0,f,c
  2286  000F5E                     
  2287                           ;rtc.c: 129:    addr |= 0x81;
  2288  000F5E  0E81               	movlw	129
  2289  000F60  1204               	iorwf	ht1380read@addr^0,f,c
  2290  000F62                     
  2291                           ;rtc.c: 130:    writeByte(addr);
  2292  000F62  5004               	movf	ht1380read@addr^0,w,c
  2293  000F64  EC49  F008         	call	_writeByte
  2294  000F68                     
  2295                           ;rtc.c: 131:    ((((*(volatile __near unsigned char*)0xF94)) |= (1<<4)));
  2296  000F68  8894               	bsf	148,4,c	;volatile
  2297  000F6A                     
  2298                           ;rtc.c: 132:    for(de=0;de<100;de++);for(de=0;de<100;de++);for(de=0;de<100;de++);for(de
      +                          =0;de<100;de++);
  2299  000F6A  0E00               	movlw	0
  2300  000F6C  6E76               	movwf	_de^0,c
  2301  000F6E                     l1121:
  2302  000F6E  0E63               	movlw	99
  2303  000F70  6476               	cpfsgt	_de^0,c
  2304  000F72  EFBD  F007         	goto	u121
  2305  000F76  EFBF  F007         	goto	u120
  2306  000F7A                     u121:
  2307  000F7A  EFC1  F007         	goto	l1125
  2308  000F7E                     u120:
  2309  000F7E  EFC4  F007         	goto	l1129
  2310  000F82                     l1125:
  2311  000F82  2A76               	incf	_de^0,f,c
  2312  000F84  EFB7  F007         	goto	l1121
  2313  000F88                     l1129:
  2314  000F88  0E00               	movlw	0
  2315  000F8A  6E76               	movwf	_de^0,c
  2316  000F8C                     l1131:
  2317  000F8C  0E63               	movlw	99
  2318  000F8E  6476               	cpfsgt	_de^0,c
  2319  000F90  EFCC  F007         	goto	u131
  2320  000F94  EFCE  F007         	goto	u130
  2321  000F98                     u131:
  2322  000F98  EFD0  F007         	goto	l1135
  2323  000F9C                     u130:
  2324  000F9C  EFD3  F007         	goto	l1139
  2325  000FA0                     l1135:
  2326  000FA0  2A76               	incf	_de^0,f,c
  2327  000FA2  EFC6  F007         	goto	l1131
  2328  000FA6                     l1139:
  2329  000FA6  0E00               	movlw	0
  2330  000FA8  6E76               	movwf	_de^0,c
  2331  000FAA                     l1141:
  2332  000FAA  0E63               	movlw	99
  2333  000FAC  6476               	cpfsgt	_de^0,c
  2334  000FAE  EFDB  F007         	goto	u141
  2335  000FB2  EFDD  F007         	goto	u140
  2336  000FB6                     u141:
  2337  000FB6  EFDF  F007         	goto	l1145
  2338  000FBA                     u140:
  2339  000FBA  EFE2  F007         	goto	l1149
  2340  000FBE                     l1145:
  2341  000FBE  2A76               	incf	_de^0,f,c
  2342  000FC0  EFD5  F007         	goto	l1141
  2343  000FC4                     l1149:
  2344  000FC4  0E00               	movlw	0
  2345  000FC6  6E76               	movwf	_de^0,c
  2346  000FC8                     l1151:
  2347  000FC8  0E63               	movlw	99
  2348  000FCA  6476               	cpfsgt	_de^0,c
  2349  000FCC  EFEA  F007         	goto	u151
  2350  000FD0  EFEC  F007         	goto	u150
  2351  000FD4                     u151:
  2352  000FD4  EFEE  F007         	goto	l1155
  2353  000FD8                     u150:
  2354  000FD8  EFF1  F007         	goto	l1159
  2355  000FDC                     l1155:
  2356  000FDC  2A76               	incf	_de^0,f,c
  2357  000FDE  EFE4  F007         	goto	l1151
  2358  000FE2                     l1159:
  2359                           
  2360                           ;rtc.c: 133:    dados = readByte();
  2361  000FE2  ECBD  F008         	call	_readByte	;wreg free
  2362  000FE6  6E03               	movwf	ht1380read@dados^0,c
  2363  000FE8                     
  2364                           ;rtc.c: 134:    ((((*(volatile __near unsigned char*)0xF82)) &= ~(1<<5)));
  2365  000FE8  9A82               	bcf	130,5,c	;volatile
  2366  000FEA                     
  2367                           ;rtc.c: 135:    ((((*(volatile __near unsigned char*)0xF82)) &= ~(1<<3)));
  2368  000FEA  9682               	bcf	130,3,c	;volatile
  2369  000FEC                     
  2370                           ;rtc.c: 136:    ((((*(volatile __near unsigned char*)0xF82)) &= ~(1<<4)));
  2371  000FEC  9882               	bcf	130,4,c	;volatile
  2372  000FEE                     
  2373                           ;rtc.c: 137:    ((((*(volatile __near unsigned char*)0xF94)) &= ~(1<<4)));
  2374  000FEE  9894               	bcf	148,4,c	;volatile
  2375  000FF0                     
  2376                           ;rtc.c: 138:    return dados;
  2377  000FF0  5003               	movf	ht1380read@dados^0,w,c
  2378  000FF2  0012               	return		;funcret
  2379  000FF4                     __end_of_ht1380read:
  2380                           	opt callstack 0
  2381                           
  2382 ;; *************** function _writeByte *****************
  2383 ;; Defined at:
  2384 ;;		line 63 in file "rtc.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;  dados           1    wreg     unsigned char 
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;  dados           1    0[COMRAM] unsigned char 
  2389 ;;  i               1    1[COMRAM] unsigned char 
  2390 ;; Return value:  Size  Location     Type
  2391 ;;                  1    wreg      void 
  2392 ;; Registers used:
  2393 ;;		wreg, status,2, status,0
  2394 ;; Tracked objects:
  2395 ;;		On entry : 0/0
  2396 ;;		On exit  : 0/0
  2397 ;;		Unchanged: 0/0
  2398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2399 ;;      Params:         0       0       0       0       0       0       0
  2400 ;;      Locals:         2       0       0       0       0       0       0
  2401 ;;      Temps:          0       0       0       0       0       0       0
  2402 ;;      Totals:         2       0       0       0       0       0       0
  2403 ;;Total ram usage:        2 bytes
  2404 ;; Hardware stack levels used:    1
  2405 ;; This function calls:
  2406 ;;		Nothing
  2407 ;; This function is called by:
  2408 ;;		_ht1380write
  2409 ;;		_ht1380read
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           	psect	text10
  2414  001092                     __ptext10:
  2415                           	opt callstack 0
  2416  001092                     _writeByte:
  2417                           	opt callstack 27
  2418                           
  2419                           ;incstack = 0
  2420                           ;writeByte@dados stored from wreg
  2421  001092  6E01               	movwf	writeByte@dados^0,c
  2422  001094                     
  2423                           ;rtc.c: 64:    unsigned char i;;rtc.c: 65:    for (i = 0; i < 8; i++) {
  2424  001094  0E00               	movlw	0
  2425  001096  6E02               	movwf	writeByte@i^0,c
  2426  001098                     l208:
  2427                           
  2428                           ;rtc.c: 67:        if (dados & 0x01) {
  2429  001098  A001               	btfss	writeByte@dados^0,0,c
  2430  00109A  EF51  F008         	goto	u41
  2431  00109E  EF53  F008         	goto	u40
  2432  0010A2                     u41:
  2433  0010A2  EF56  F008         	goto	l1005
  2434  0010A6                     u40:
  2435  0010A6                     
  2436                           ;rtc.c: 68:            ((((*(volatile __near unsigned char*)0xF82)) |= (1<<4)));
  2437  0010A6  8882               	bsf	130,4,c	;volatile
  2438                           
  2439                           ;rtc.c: 69:        } else {
  2440  0010A8  EF57  F008         	goto	l1007
  2441  0010AC                     l1005:
  2442                           
  2443                           ;rtc.c: 70:            ((((*(volatile __near unsigned char*)0xF82)) &= ~(1<<4)));
  2444  0010AC  9882               	bcf	130,4,c	;volatile
  2445  0010AE                     l1007:
  2446                           
  2447                           ;rtc.c: 73:        dados >>= 1;
  2448  0010AE  90D8               	bcf	status,0,c
  2449  0010B0  3201               	rrcf	writeByte@dados^0,f,c
  2450  0010B2                     
  2451                           ;rtc.c: 75:        ((((*(volatile __near unsigned char*)0xF82)) |= (1<<3)));
  2452  0010B2  8682               	bsf	130,3,c	;volatile
  2453  0010B4                     
  2454                           ;rtc.c: 76:        for(de=0;de<100;de++);
  2455  0010B4  0E00               	movlw	0
  2456  0010B6  6E76               	movwf	_de^0,c
  2457  0010B8                     l1013:
  2458  0010B8  0E63               	movlw	99
  2459  0010BA  6476               	cpfsgt	_de^0,c
  2460  0010BC  EF62  F008         	goto	u51
  2461  0010C0  EF64  F008         	goto	u50
  2462  0010C4                     u51:
  2463  0010C4  EF66  F008         	goto	l1017
  2464  0010C8                     u50:
  2465  0010C8  EF69  F008         	goto	l1021
  2466  0010CC                     l1017:
  2467  0010CC  2A76               	incf	_de^0,f,c
  2468  0010CE  EF5C  F008         	goto	l1013
  2469  0010D2                     l1021:
  2470                           
  2471                           ;rtc.c: 78:        ((((*(volatile __near unsigned char*)0xF82)) &= ~(1<<3)));
  2472  0010D2  9682               	bcf	130,3,c	;volatile
  2473  0010D4                     
  2474                           ;rtc.c: 79:        for(de=0;de<100;de++);
  2475  0010D4  0E00               	movlw	0
  2476  0010D6  6E76               	movwf	_de^0,c
  2477  0010D8                     l1025:
  2478  0010D8  0E63               	movlw	99
  2479  0010DA  6476               	cpfsgt	_de^0,c
  2480  0010DC  EF72  F008         	goto	u61
  2481  0010E0  EF74  F008         	goto	u60
  2482  0010E4                     u61:
  2483  0010E4  EF76  F008         	goto	l1029
  2484  0010E8                     u60:
  2485  0010E8  EF79  F008         	goto	l1033
  2486  0010EC                     l1029:
  2487  0010EC  2A76               	incf	_de^0,f,c
  2488  0010EE  EF6C  F008         	goto	l1025
  2489  0010F2                     l1033:
  2490                           
  2491                           ;rtc.c: 81:    }
  2492  0010F2  2A02               	incf	writeByte@i^0,f,c
  2493  0010F4  0E07               	movlw	7
  2494  0010F6  6402               	cpfsgt	writeByte@i^0,c
  2495  0010F8  EF80  F008         	goto	u71
  2496  0010FC  EF82  F008         	goto	u70
  2497  001100                     u71:
  2498  001100  EF4C  F008         	goto	l208
  2499  001104                     u70:
  2500  001104  0012               	return		;funcret
  2501  001106                     __end_of_writeByte:
  2502                           	opt callstack 0
  2503                           
  2504 ;; *************** function _readByte *****************
  2505 ;; Defined at:
  2506 ;;		line 84 in file "rtc.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;		None
  2509 ;; Auto vars:     Size  Location     Type
  2510 ;;  i               1    1[COMRAM] unsigned char 
  2511 ;;  dados           1    0[COMRAM] unsigned char 
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      unsigned char 
  2514 ;; Registers used:
  2515 ;;		wreg, status,2, status,0
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2521 ;;      Params:         0       0       0       0       0       0       0
  2522 ;;      Locals:         2       0       0       0       0       0       0
  2523 ;;      Temps:          0       0       0       0       0       0       0
  2524 ;;      Totals:         2       0       0       0       0       0       0
  2525 ;;Total ram usage:        2 bytes
  2526 ;; Hardware stack levels used:    1
  2527 ;; This function calls:
  2528 ;;		Nothing
  2529 ;; This function is called by:
  2530 ;;		_ht1380read
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           	psect	text11
  2535  00117A                     __ptext11:
  2536                           	opt callstack 0
  2537  00117A                     _readByte:
  2538                           	opt callstack 27
  2539  00117A                     
  2540                           ;rtc.c: 85:    unsigned char i;;rtc.c: 86:    unsigned char dados;;rtc.c: 87:    dados =
      +                           0;
  2541  00117A  0E00               	movlw	0
  2542  00117C  6E01               	movwf	readByte@dados^0,c
  2543                           
  2544                           ;rtc.c: 88:    for (i = 0; i < 8; i++) {
  2545  00117E  0E00               	movlw	0
  2546  001180  6E02               	movwf	readByte@i^0,c
  2547  001182                     l1043:
  2548                           
  2549                           ;rtc.c: 89:        ((((*(volatile __near unsigned char*)0xF82)) |= (1<<3)));
  2550  001182  8682               	bsf	130,3,c	;volatile
  2551  001184                     
  2552                           ;rtc.c: 90:        for(de=0;de<100;de++);
  2553  001184  0E00               	movlw	0
  2554  001186  6E76               	movwf	_de^0,c
  2555  001188                     l1047:
  2556  001188  0E63               	movlw	99
  2557  00118A  6476               	cpfsgt	_de^0,c
  2558  00118C  EFCA  F008         	goto	u81
  2559  001190  EFCC  F008         	goto	u80
  2560  001194                     u81:
  2561  001194  EFCE  F008         	goto	l1051
  2562  001198                     u80:
  2563  001198  EFD1  F008         	goto	l1055
  2564  00119C                     l1051:
  2565  00119C  2A76               	incf	_de^0,f,c
  2566  00119E  EFC4  F008         	goto	l1047
  2567  0011A2                     l1055:
  2568                           
  2569                           ;rtc.c: 92:        dados >>= 1;
  2570  0011A2  90D8               	bcf	status,0,c
  2571  0011A4  3201               	rrcf	readByte@dados^0,f,c
  2572  0011A6                     
  2573                           ;rtc.c: 94:        if (((((*(volatile __near unsigned char*)0xF82)) & (1<<4)))) {
  2574  0011A6  A882               	btfss	130,4,c	;volatile
  2575  0011A8  EFD8  F008         	goto	u91
  2576  0011AC  EFDA  F008         	goto	u90
  2577  0011B0                     u91:
  2578  0011B0  EFDB  F008         	goto	l223
  2579  0011B4                     u90:
  2580  0011B4                     
  2581                           ;rtc.c: 95:            dados |= 0x80;
  2582  0011B4  8E01               	bsf	readByte@dados^0,7,c
  2583  0011B6                     l223:
  2584                           
  2585                           ;rtc.c: 98:        ((((*(volatile __near unsigned char*)0xF82)) &= ~(1<<3)));
  2586  0011B6  9682               	bcf	130,3,c	;volatile
  2587  0011B8                     
  2588                           ;rtc.c: 99:        for(de=0;de<100;de++);
  2589  0011B8  0E00               	movlw	0
  2590  0011BA  6E76               	movwf	_de^0,c
  2591  0011BC                     l1063:
  2592  0011BC  0E63               	movlw	99
  2593  0011BE  6476               	cpfsgt	_de^0,c
  2594  0011C0  EFE4  F008         	goto	u101
  2595  0011C4  EFE6  F008         	goto	u100
  2596  0011C8                     u101:
  2597  0011C8  EFE8  F008         	goto	l1067
  2598  0011CC                     u100:
  2599  0011CC  EFEB  F008         	goto	l1071
  2600  0011D0                     l1067:
  2601  0011D0  2A76               	incf	_de^0,f,c
  2602  0011D2  EFDE  F008         	goto	l1063
  2603  0011D6                     l1071:
  2604                           
  2605                           ;rtc.c: 100:    }
  2606  0011D6  2A02               	incf	readByte@i^0,f,c
  2607  0011D8  0E07               	movlw	7
  2608  0011DA  6402               	cpfsgt	readByte@i^0,c
  2609  0011DC  EFF2  F008         	goto	u111
  2610  0011E0  EFF4  F008         	goto	u110
  2611  0011E4                     u111:
  2612  0011E4  EFC1  F008         	goto	l1043
  2613  0011E8                     u110:
  2614  0011E8                     
  2615                           ;rtc.c: 101:    return dados;
  2616  0011E8  5001               	movf	readByte@dados^0,w,c
  2617  0011EA  0012               	return		;funcret
  2618  0011EC                     __end_of_readByte:
  2619                           	opt callstack 0
  2620                           
  2621 ;; *************** function _rand *****************
  2622 ;; Defined at:
  2623 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;		None
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;		None
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  2   24[COMRAM] int 
  2630 ;; Registers used:
  2631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2637 ;;      Params:         2       0       0       0       0       0       0
  2638 ;;      Locals:         0       0       0       0       0       0       0
  2639 ;;      Temps:          8       0       0       0       0       0       0
  2640 ;;      Totals:        10       0       0       0       0       0       0
  2641 ;;Total ram usage:       10 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; Hardware stack levels required when called:    1
  2644 ;; This function calls:
  2645 ;;		___omul
  2646 ;; This function is called by:
  2647 ;;		_main
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           	psect	text12
  2652  000D00                     __ptext12:
  2653                           	opt callstack 0
  2654  000D00                     _rand:
  2655                           	opt callstack 29
  2656  000D00  C077  F001         	movff	_seed,___omul@multiplier
  2657  000D04  C078  F002         	movff	_seed+1,___omul@multiplier+1
  2658  000D08  C079  F003         	movff	_seed+2,___omul@multiplier+2
  2659  000D0C  C07A  F004         	movff	_seed+3,___omul@multiplier+3
  2660  000D10  C07B  F005         	movff	_seed+4,___omul@multiplier+4
  2661  000D14  C07C  F006         	movff	_seed+5,___omul@multiplier+5
  2662  000D18  C07D  F007         	movff	_seed+6,___omul@multiplier+6
  2663  000D1C  C07E  F008         	movff	_seed+7,___omul@multiplier+7
  2664  000D20  0E2D               	movlw	45
  2665  000D22  6E09               	movwf	___omul@multiplicand^0,c
  2666  000D24  0E7F               	movlw	127
  2667  000D26  6E0A               	movwf	(___omul@multiplicand+1)^0,c
  2668  000D28  0E95               	movlw	149
  2669  000D2A  6E0B               	movwf	(___omul@multiplicand+2)^0,c
  2670  000D2C  0E4C               	movlw	76
  2671  000D2E  6E0C               	movwf	(___omul@multiplicand+3)^0,c
  2672  000D30  0E2D               	movlw	45
  2673  000D32  6E0D               	movwf	(___omul@multiplicand+4)^0,c
  2674  000D34  0EF4               	movlw	244
  2675  000D36  6E0E               	movwf	(___omul@multiplicand+5)^0,c
  2676  000D38  0E51               	movlw	81
  2677  000D3A  6E0F               	movwf	(___omul@multiplicand+6)^0,c
  2678  000D3C  0E58               	movlw	88
  2679  000D3E  6E10               	movwf	(___omul@multiplicand+7)^0,c
  2680  000D40  ECFA  F007         	call	___omul	;wreg free
  2681  000D44  C001  F01B         	movff	?___omul,??_rand
  2682  000D48  C002  F01C         	movff	?___omul+1,??_rand+1
  2683  000D4C  C003  F01D         	movff	?___omul+2,??_rand+2
  2684  000D50  C004  F01E         	movff	?___omul+3,??_rand+3
  2685  000D54  C005  F01F         	movff	?___omul+4,??_rand+4
  2686  000D58  C006  F020         	movff	?___omul+5,??_rand+5
  2687  000D5C  C007  F021         	movff	?___omul+6,??_rand+6
  2688  000D60  C008  F022         	movff	?___omul+7,??_rand+7
  2689  000D64  0E01               	movlw	1
  2690  000D66  241B               	addwf	??_rand^0,w,c
  2691  000D68  6E77               	movwf	_seed^0,c
  2692  000D6A  0E00               	movlw	0
  2693  000D6C  201C               	addwfc	(??_rand+1)^0,w,c
  2694  000D6E  6E78               	movwf	(_seed+1)^0,c
  2695  000D70  0E00               	movlw	0
  2696  000D72  201D               	addwfc	(??_rand+2)^0,w,c
  2697  000D74  6E79               	movwf	(_seed+2)^0,c
  2698  000D76  0E00               	movlw	0
  2699  000D78  201E               	addwfc	(??_rand+3)^0,w,c
  2700  000D7A  6E7A               	movwf	(_seed+3)^0,c
  2701  000D7C  0E00               	movlw	0
  2702  000D7E  201F               	addwfc	(??_rand+4)^0,w,c
  2703  000D80  6E7B               	movwf	(_seed+4)^0,c
  2704  000D82  0E00               	movlw	0
  2705  000D84  2020               	addwfc	(??_rand+5)^0,w,c
  2706  000D86  6E7C               	movwf	(_seed+5)^0,c
  2707  000D88  0E00               	movlw	0
  2708  000D8A  2021               	addwfc	(??_rand+6)^0,w,c
  2709  000D8C  6E7D               	movwf	(_seed+6)^0,c
  2710  000D8E  0E00               	movlw	0
  2711  000D90  2022               	addwfc	(??_rand+7)^0,w,c
  2712  000D92  6E7E               	movwf	(_seed+7)^0,c
  2713  000D94  C077  F01B         	movff	_seed,??_rand
  2714  000D98  C078  F01C         	movff	_seed+1,??_rand+1
  2715  000D9C  C079  F01D         	movff	_seed+2,??_rand+2
  2716  000DA0  C07A  F01E         	movff	_seed+3,??_rand+3
  2717  000DA4  C07B  F01F         	movff	_seed+4,??_rand+4
  2718  000DA8  C07C  F020         	movff	_seed+5,??_rand+5
  2719  000DAC  C07D  F021         	movff	_seed+6,??_rand+6
  2720  000DB0  C07E  F022         	movff	_seed+7,??_rand+7
  2721  000DB4  0E32               	movlw	50
  2722  000DB6  EFE6  F006         	goto	u1060
  2723  000DBA                     u1065:
  2724  000DBA  90D8               	bcf	status,0,c
  2725  000DBC  3222               	rrcf	(??_rand+7)^0,f,c
  2726  000DBE  3221               	rrcf	(??_rand+6)^0,f,c
  2727  000DC0  3220               	rrcf	(??_rand+5)^0,f,c
  2728  000DC2  321F               	rrcf	(??_rand+4)^0,f,c
  2729  000DC4  321E               	rrcf	(??_rand+3)^0,f,c
  2730  000DC6  321D               	rrcf	(??_rand+2)^0,f,c
  2731  000DC8  321C               	rrcf	(??_rand+1)^0,f,c
  2732  000DCA  321B               	rrcf	??_rand^0,f,c
  2733  000DCC                     u1060:
  2734  000DCC  2EE8               	decfsz	wreg,f,c
  2735  000DCE  EFDD  F006         	goto	u1065
  2736  000DD2  C01B  F019         	movff	??_rand,?_rand
  2737  000DD6  C01D  F01A         	movff	??_rand+2,?_rand+1
  2738  000DDA  0012               	return		;funcret
  2739  000DDC                     __end_of_rand:
  2740                           	opt callstack 0
  2741                           
  2742 ;; *************** function ___omul *****************
  2743 ;; Defined at:
  2744 ;;		line 91 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul64.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;  multiplier      8    0[COMRAM] unsigned long long 
  2747 ;;  multiplicand    8    8[COMRAM] unsigned long long 
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;  product         8   16[COMRAM] unsigned long long 
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  8    0[COMRAM] unsigned long long 
  2752 ;; Registers used:
  2753 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2759 ;;      Params:        16       0       0       0       0       0       0
  2760 ;;      Locals:         8       0       0       0       0       0       0
  2761 ;;      Temps:          0       0       0       0       0       0       0
  2762 ;;      Totals:        24       0       0       0       0       0       0
  2763 ;;Total ram usage:       24 bytes
  2764 ;; Hardware stack levels used:    1
  2765 ;; This function calls:
  2766 ;;		Nothing
  2767 ;; This function is called by:
  2768 ;;		_rand
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           	psect	text13
  2773  000FF4                     __ptext13:
  2774                           	opt callstack 0
  2775  000FF4                     ___omul:
  2776                           	opt callstack 29
  2777  000FF4  EE20  F011         	lfsr	2,___omul@product
  2778  000FF8  0E07               	movlw	7
  2779  000FFA                     u921:
  2780  000FFA  6ADE               	clrf	postinc2,c
  2781  000FFC  06E8               	decf	wreg,f,c
  2782  000FFE  E2FD               	bc	u921
  2783  001000                     l1873:
  2784  001000  A001               	btfss	___omul@multiplier^0,0,c
  2785  001002  EF05  F008         	goto	u931
  2786  001006  EF07  F008         	goto	u930
  2787  00100A                     u931:
  2788  00100A  EF17  F008         	goto	l1877
  2789  00100E                     u930:
  2790  00100E  5009               	movf	___omul@multiplicand^0,w,c
  2791  001010  2611               	addwf	___omul@product^0,f,c
  2792  001012  500A               	movf	(___omul@multiplicand+1)^0,w,c
  2793  001014  2212               	addwfc	(___omul@product+1)^0,f,c
  2794  001016  500B               	movf	(___omul@multiplicand+2)^0,w,c
  2795  001018  2213               	addwfc	(___omul@product+2)^0,f,c
  2796  00101A  500C               	movf	(___omul@multiplicand+3)^0,w,c
  2797  00101C  2214               	addwfc	(___omul@product+3)^0,f,c
  2798  00101E  500D               	movf	(___omul@multiplicand+4)^0,w,c
  2799  001020  2215               	addwfc	(___omul@product+4)^0,f,c
  2800  001022  500E               	movf	(___omul@multiplicand+5)^0,w,c
  2801  001024  2216               	addwfc	(___omul@product+5)^0,f,c
  2802  001026  500F               	movf	(___omul@multiplicand+6)^0,w,c
  2803  001028  2217               	addwfc	(___omul@product+6)^0,f,c
  2804  00102A  5010               	movf	(___omul@multiplicand+7)^0,w,c
  2805  00102C  2218               	addwfc	(___omul@product+7)^0,f,c
  2806  00102E                     l1877:
  2807  00102E  90D8               	bcf	status,0,c
  2808  001030  3609               	rlcf	___omul@multiplicand^0,f,c
  2809  001032  360A               	rlcf	(___omul@multiplicand+1)^0,f,c
  2810  001034  360B               	rlcf	(___omul@multiplicand+2)^0,f,c
  2811  001036  360C               	rlcf	(___omul@multiplicand+3)^0,f,c
  2812  001038  360D               	rlcf	(___omul@multiplicand+4)^0,f,c
  2813  00103A  360E               	rlcf	(___omul@multiplicand+5)^0,f,c
  2814  00103C  360F               	rlcf	(___omul@multiplicand+6)^0,f,c
  2815  00103E  3610               	rlcf	(___omul@multiplicand+7)^0,f,c
  2816  001040  90D8               	bcf	status,0,c
  2817  001042  3208               	rrcf	(___omul@multiplier+7)^0,f,c
  2818  001044  3207               	rrcf	(___omul@multiplier+6)^0,f,c
  2819  001046  3206               	rrcf	(___omul@multiplier+5)^0,f,c
  2820  001048  3205               	rrcf	(___omul@multiplier+4)^0,f,c
  2821  00104A  3204               	rrcf	(___omul@multiplier+3)^0,f,c
  2822  00104C  3203               	rrcf	(___omul@multiplier+2)^0,f,c
  2823  00104E  3202               	rrcf	(___omul@multiplier+1)^0,f,c
  2824  001050  3201               	rrcf	___omul@multiplier^0,f,c
  2825  001052  5001               	movf	___omul@multiplier^0,w,c
  2826  001054  1002               	iorwf	(___omul@multiplier+1)^0,w,c
  2827  001056  1003               	iorwf	(___omul@multiplier+2)^0,w,c
  2828  001058  1004               	iorwf	(___omul@multiplier+3)^0,w,c
  2829  00105A  1005               	iorwf	(___omul@multiplier+4)^0,w,c
  2830  00105C  1006               	iorwf	(___omul@multiplier+5)^0,w,c
  2831  00105E  1007               	iorwf	(___omul@multiplier+6)^0,w,c
  2832  001060  1008               	iorwf	(___omul@multiplier+7)^0,w,c
  2833  001062  A4D8               	btfss	status,2,c
  2834  001064  EF36  F008         	goto	u941
  2835  001068  EF38  F008         	goto	u940
  2836  00106C                     u941:
  2837  00106C  EF00  F008         	goto	l1873
  2838  001070                     u940:
  2839  001070  C011  F001         	movff	___omul@product,?___omul
  2840  001074  C012  F002         	movff	___omul@product+1,?___omul+1
  2841  001078  C013  F003         	movff	___omul@product+2,?___omul+2
  2842  00107C  C014  F004         	movff	___omul@product+3,?___omul+3
  2843  001080  C015  F005         	movff	___omul@product+4,?___omul+4
  2844  001084  C016  F006         	movff	___omul@product+5,?___omul+5
  2845  001088  C017  F007         	movff	___omul@product+6,?___omul+6
  2846  00108C  C018  F008         	movff	___omul@product+7,?___omul+7
  2847  001090  0012               	return		;funcret
  2848  001092                     __end_of___omul:
  2849                           	opt callstack 0
  2850                           
  2851 ;; *************** function _mostraPontuacao *****************
  2852 ;; Defined at:
  2853 ;;		line 58 in file "main.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;		None
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;  i               2    6[COMRAM] int 
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      void 
  2860 ;; Registers used:
  2861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2867 ;;      Params:         0       0       0       0       0       0       0
  2868 ;;      Locals:         2       0       0       0       0       0       0
  2869 ;;      Temps:          0       0       0       0       0       0       0
  2870 ;;      Totals:         2       0       0       0       0       0       0
  2871 ;;Total ram usage:        2 bytes
  2872 ;; Hardware stack levels used:    1
  2873 ;; Hardware stack levels required when called:    1
  2874 ;; This function calls:
  2875 ;;		_atraso_ms
  2876 ;;		_configuraLed
  2877 ;;		_desligarLedVet
  2878 ;;		_ligarLedVet
  2879 ;; This function is called by:
  2880 ;;		_main
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text14
  2885  001314                     __ptext14:
  2886                           	opt callstack 0
  2887  001314                     _mostraPontuacao:
  2888                           	opt callstack 29
  2889  001314                     
  2890                           ;main.c: 59:   configuraLed();
  2891  001314  ECF0  F00A         	call	_configuraLed	;wreg free
  2892  001318                     
  2893                           ;main.c: 60:   for(int i = 0; i < 5; i++){
  2894  001318  0E00               	movlw	0
  2895  00131A  6E08               	movwf	(mostraPontuacao@i+1)^0,c
  2896  00131C  0E00               	movlw	0
  2897  00131E  6E07               	movwf	mostraPontuacao@i^0,c
  2898  001320                     l1979:
  2899                           
  2900                           ;main.c: 61:     desligarLedVet(255);
  2901  001320  0EFF               	movlw	255
  2902  001322  ECE7  F00A         	call	_desligarLedVet
  2903                           
  2904                           ;main.c: 62:     atraso_ms(1000);
  2905  001326  0E03               	movlw	3
  2906  001328  6E02               	movwf	(atraso_ms@t+1)^0,c
  2907  00132A  0EE8               	movlw	232
  2908  00132C  6E01               	movwf	atraso_ms@t^0,c
  2909  00132E  ECF6  F008         	call	_atraso_ms	;wreg free
  2910  001332                     
  2911                           ;main.c: 63:     ligarLedVet(pontuacaoLed[pontuacao]);
  2912  001332  0E54               	movlw	low _pontuacaoLed
  2913  001334  2474               	addwf	_pontuacao^0,w,c
  2914  001336  6ED9               	movwf	fsr2l,c
  2915  001338  0E00               	movlw	high _pontuacaoLed
  2916  00133A  2075               	addwfc	(_pontuacao+1)^0,w,c
  2917  00133C  6EDA               	movwf	fsr2h,c
  2918  00133E  50DF               	movf	indf2,w,c
  2919  001340  ECEC  F00A         	call	_ligarLedVet
  2920  001344                     
  2921                           ;main.c: 64:     atraso_ms(1000);
  2922  001344  0E03               	movlw	3
  2923  001346  6E02               	movwf	(atraso_ms@t+1)^0,c
  2924  001348  0EE8               	movlw	232
  2925  00134A  6E01               	movwf	atraso_ms@t^0,c
  2926  00134C  ECF6  F008         	call	_atraso_ms	;wreg free
  2927  001350                     
  2928                           ;main.c: 65:   }
  2929  001350  4A07               	infsnz	mostraPontuacao@i^0,f,c
  2930  001352  2A08               	incf	(mostraPontuacao@i+1)^0,f,c
  2931  001354  BE08               	btfsc	(mostraPontuacao@i+1)^0,7,c
  2932  001356  EFB6  F009         	goto	u1051
  2933  00135A  5008               	movf	(mostraPontuacao@i+1)^0,w,c
  2934  00135C  E109               	bnz	u1050
  2935  00135E  0E05               	movlw	5
  2936  001360  5C07               	subwf	mostraPontuacao@i^0,w,c
  2937  001362  A0D8               	btfss	status,0,c
  2938  001364  EFB6  F009         	goto	u1051
  2939  001368  EFB8  F009         	goto	u1050
  2940  00136C                     u1051:
  2941  00136C  EF90  F009         	goto	l1979
  2942  001370                     u1050:
  2943  001370  0012               	return		;funcret
  2944  001372                     __end_of_mostraPontuacao:
  2945                           	opt callstack 0
  2946                           
  2947 ;; *************** function _ligarLedVet *****************
  2948 ;; Defined at:
  2949 ;;		line 14 in file "led.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;  num             1    wreg     unsigned char 
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;  num             1    0[COMRAM] unsigned char 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      void 
  2956 ;; Registers used:
  2957 ;;		wreg
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2963 ;;      Params:         0       0       0       0       0       0       0
  2964 ;;      Locals:         1       0       0       0       0       0       0
  2965 ;;      Temps:          0       0       0       0       0       0       0
  2966 ;;      Totals:         1       0       0       0       0       0       0
  2967 ;;Total ram usage:        1 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; This function calls:
  2970 ;;		Nothing
  2971 ;; This function is called by:
  2972 ;;		_mostraPontuacao
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           
  2976                           	psect	text15
  2977  0015D8                     __ptext15:
  2978                           	opt callstack 0
  2979  0015D8                     _ligarLedVet:
  2980                           	opt callstack 29
  2981                           
  2982                           ;incstack = 0
  2983                           ;ligarLedVet@num stored from wreg
  2984  0015D8  6E01               	movwf	ligarLedVet@num^0,c
  2985  0015DA                     
  2986                           ;led.c: 15:     (*(volatile __near unsigned char*)0xF83) = num;
  2987  0015DA  C001  FF83         	movff	ligarLedVet@num,3971	;volatile
  2988  0015DE  0012               	return		;funcret
  2989  0015E0                     __end_of_ligarLedVet:
  2990                           	opt callstack 0
  2991                           
  2992 ;; *************** function _desligarLedVet *****************
  2993 ;; Defined at:
  2994 ;;		line 22 in file "led.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;  num             1    wreg     unsigned char 
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;  num             1    0[COMRAM] unsigned char 
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  1    wreg      void 
  3001 ;; Registers used:
  3002 ;;		wreg, status,2, status,0
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3008 ;;      Params:         0       0       0       0       0       0       0
  3009 ;;      Locals:         1       0       0       0       0       0       0
  3010 ;;      Temps:          0       0       0       0       0       0       0
  3011 ;;      Totals:         1       0       0       0       0       0       0
  3012 ;;Total ram usage:        1 bytes
  3013 ;; Hardware stack levels used:    1
  3014 ;; This function calls:
  3015 ;;		Nothing
  3016 ;; This function is called by:
  3017 ;;		_mostraPontuacao
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021                           	psect	text16
  3022  0015CE                     __ptext16:
  3023                           	opt callstack 0
  3024  0015CE                     _desligarLedVet:
  3025                           	opt callstack 29
  3026                           
  3027                           ;incstack = 0
  3028                           ;desligarLedVet@num stored from wreg
  3029  0015CE  6E01               	movwf	desligarLedVet@num^0,c
  3030  0015D0                     
  3031                           ;led.c: 23:     (*(volatile __near unsigned char*)0xF83) = ~num;
  3032  0015D0  5001               	movf	desligarLedVet@num^0,w,c
  3033  0015D2  0AFF               	xorlw	255
  3034  0015D4  6E83               	movwf	131,c	;volatile
  3035  0015D6  0012               	return		;funcret
  3036  0015D8                     __end_of_desligarLedVet:
  3037                           	opt callstack 0
  3038                           
  3039 ;; *************** function _configuraLed *****************
  3040 ;; Defined at:
  3041 ;;		line 9 in file "led.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;		None
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;		None
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  1    wreg      void 
  3048 ;; Registers used:
  3049 ;;		wreg, status,2
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3055 ;;      Params:         0       0       0       0       0       0       0
  3056 ;;      Locals:         0       0       0       0       0       0       0
  3057 ;;      Temps:          0       0       0       0       0       0       0
  3058 ;;      Totals:         0       0       0       0       0       0       0
  3059 ;;Total ram usage:        0 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		_mostraPontuacao
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           	psect	text17
  3069  0015E0                     __ptext17:
  3070                           	opt callstack 0
  3071  0015E0                     _configuraLed:
  3072                           	opt callstack 29
  3073  0015E0                     
  3074                           ;led.c: 10:     (*(volatile __near unsigned char*)0xF95) = 0x00;
  3075  0015E0  0E00               	movlw	0
  3076  0015E2  6E95               	movwf	149,c	;volatile
  3077  0015E4                     
  3078                           ;led.c: 11:     (*(volatile __near unsigned char*)0xF83) = 0xFF;
  3079  0015E4  6883               	setf	131,c	;volatile
  3080  0015E6  0012               	return		;funcret
  3081  0015E8                     __end_of_configuraLed:
  3082                           	opt callstack 0
  3083                           
  3084 ;; *************** function _loading *****************
  3085 ;; Defined at:
  3086 ;;		line 23 in file "main.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;		None
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;  i               2   12[COMRAM] int 
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  1    wreg      void 
  3093 ;; Registers used:
  3094 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3100 ;;      Params:         0       0       0       0       0       0       0
  3101 ;;      Locals:         2       0       0       0       0       0       0
  3102 ;;      Temps:          0       0       0       0       0       0       0
  3103 ;;      Totals:         2       0       0       0       0       0       0
  3104 ;;Total ram usage:        2 bytes
  3105 ;; Hardware stack levels used:    1
  3106 ;; Hardware stack levels required when called:    3
  3107 ;; This function calls:
  3108 ;;		_atraso_ms
  3109 ;;		_lcd_cmd
  3110 ;;		_lcd_dat
  3111 ;;		_lcd_str
  3112 ;; This function is called by:
  3113 ;;		_main
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text18
  3118  0012B4                     __ptext18:
  3119                           	opt callstack 0
  3120  0012B4                     _loading:
  3121                           	opt callstack 27
  3122  0012B4                     
  3123                           ;main.c: 24:     lcd_cmd(0x01);
  3124  0012B4  0E01               	movlw	1
  3125  0012B6  EC89  F00A         	call	_lcd_cmd
  3126                           
  3127                           ;main.c: 25:     lcd_cmd(0x80);
  3128  0012BA  0E80               	movlw	128
  3129  0012BC  EC89  F00A         	call	_lcd_cmd
  3130  0012C0                     
  3131                           ;main.c: 26:     lcd_str("   CARREGANDO ");
  3132  0012C0  0E23               	movlw	low STR_1
  3133  0012C2  6E08               	movwf	lcd_str@str^0,c
  3134  0012C4  0E06               	movlw	high STR_1
  3135  0012C6  6E09               	movwf	(lcd_str@str+1)^0,c
  3136  0012C8  EC14  F00A         	call	_lcd_str	;wreg free
  3137  0012CC                     
  3138                           ;main.c: 27:     lcd_cmd(0xC0);
  3139  0012CC  0EC0               	movlw	192
  3140  0012CE  EC89  F00A         	call	_lcd_cmd
  3141  0012D2                     l1925:
  3142                           
  3143                           ;main.c: 28:     for(int i; i < 16; i++){
  3144  0012D2  BE0E               	btfsc	(loading@i+1)^0,7,c
  3145  0012D4  EF75  F009         	goto	u1011
  3146  0012D8  500E               	movf	(loading@i+1)^0,w,c
  3147  0012DA  E109               	bnz	u1010
  3148  0012DC  0E10               	movlw	16
  3149  0012DE  5C0D               	subwf	loading@i^0,w,c
  3150  0012E0  A0D8               	btfss	status,0,c
  3151  0012E2  EF75  F009         	goto	u1011
  3152  0012E6  EF77  F009         	goto	u1010
  3153  0012EA                     u1011:
  3154  0012EA  EF79  F009         	goto	l1929
  3155  0012EE                     u1010:
  3156  0012EE  EF86  F009         	goto	l1935
  3157  0012F2                     l1929:
  3158                           
  3159                           ;main.c: 29:         lcd_dat(255);
  3160  0012F2  0EFF               	movlw	255
  3161  0012F4  EC74  F00A         	call	_lcd_dat
  3162                           
  3163                           ;main.c: 30:         atraso_ms(500);
  3164  0012F8  0E01               	movlw	1
  3165  0012FA  6E02               	movwf	(atraso_ms@t+1)^0,c
  3166  0012FC  0EF4               	movlw	244
  3167  0012FE  6E01               	movwf	atraso_ms@t^0,c
  3168  001300  ECF6  F008         	call	_atraso_ms	;wreg free
  3169  001304                     
  3170                           ;main.c: 31:     }
  3171  001304  4A0D               	infsnz	loading@i^0,f,c
  3172  001306  2A0E               	incf	(loading@i+1)^0,f,c
  3173  001308  EF69  F009         	goto	l1925
  3174  00130C                     l1935:
  3175                           
  3176                           ;main.c: 32:     lcd_cmd(0x01);
  3177  00130C  0E01               	movlw	1
  3178  00130E  EC89  F00A         	call	_lcd_cmd
  3179  001312  0012               	return		;funcret
  3180  001314                     __end_of_loading:
  3181                           	opt callstack 0
  3182                           
  3183 ;; *************** function _lcd_str *****************
  3184 ;; Defined at:
  3185 ;;		line 48 in file "lcd.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;  str             2    7[COMRAM] PTR const unsigned char 
  3188 ;;		 -> STR_14(14), STR_13(13), STR_12(14), STR_11(15), 
  3189 ;;		 -> STR_10(14), STR_9(15), STR_8(2), STR_7(8), 
  3190 ;;		 -> STR_6(10), STR_5(2), STR_4(14), STR_3(14), 
  3191 ;;		 -> STR_2(15), STR_1(15), 
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;  i               1   11[COMRAM] unsigned char 
  3194 ;; Return value:  Size  Location     Type
  3195 ;;                  1    wreg      void 
  3196 ;; Registers used:
  3197 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3198 ;; Tracked objects:
  3199 ;;		On entry : 0/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3203 ;;      Params:         2       0       0       0       0       0       0
  3204 ;;      Locals:         1       0       0       0       0       0       0
  3205 ;;      Temps:          2       0       0       0       0       0       0
  3206 ;;      Totals:         5       0       0       0       0       0       0
  3207 ;;Total ram usage:        5 bytes
  3208 ;; Hardware stack levels used:    1
  3209 ;; Hardware stack levels required when called:    2
  3210 ;; This function calls:
  3211 ;;		_lcd_dat
  3212 ;; This function is called by:
  3213 ;;		_loading
  3214 ;;		_main
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           	psect	text19
  3219  001428                     __ptext19:
  3220                           	opt callstack 0
  3221  001428                     _lcd_str:
  3222                           	opt callstack 27
  3223  001428                     
  3224                           ;lcd.c: 49:     unsigned char i = 0;
  3225  001428  0E00               	movlw	0
  3226  00142A  6E0C               	movwf	lcd_str@i^0,c
  3227                           
  3228                           ;lcd.c: 51:     while (str[i] != 0) {
  3229  00142C  EF27  F00A         	goto	l1867
  3230  001430                     l1863:
  3231                           
  3232                           ;lcd.c: 52:         lcd_dat(str[i]);
  3233  001430  500C               	movf	lcd_str@i^0,w,c
  3234  001432  2408               	addwf	lcd_str@str^0,w,c
  3235  001434  6E0A               	movwf	??_lcd_str^0,c
  3236  001436  0E00               	movlw	0
  3237  001438  2009               	addwfc	(lcd_str@str+1)^0,w,c
  3238  00143A  6E0B               	movwf	(??_lcd_str+1)^0,c
  3239  00143C  C00A  FFF6         	movff	??_lcd_str,tblptrl
  3240  001440  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
  3241  001444                     	if	0	;tblptru may be non-zero
  3242  001444                     	endif
  3243  001444                     	if	0	;tblptru may be non-zero
  3244  001444                     	endif
  3245  001444  0008               	tblrd		*
  3246  001446  50F5               	movf	tablat,w,c
  3247  001448  EC74  F00A         	call	_lcd_dat
  3248  00144C                     
  3249                           ;lcd.c: 53:         i++;
  3250  00144C  2A0C               	incf	lcd_str@i^0,f,c
  3251  00144E                     l1867:
  3252                           
  3253                           ;lcd.c: 51:     while (str[i] != 0) {
  3254  00144E  500C               	movf	lcd_str@i^0,w,c
  3255  001450  2408               	addwf	lcd_str@str^0,w,c
  3256  001452  6E0A               	movwf	??_lcd_str^0,c
  3257  001454  0E00               	movlw	0
  3258  001456  2009               	addwfc	(lcd_str@str+1)^0,w,c
  3259  001458  6E0B               	movwf	(??_lcd_str+1)^0,c
  3260  00145A  C00A  FFF6         	movff	??_lcd_str,tblptrl
  3261  00145E  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
  3262  001462                     	if	0	;tblptru may be non-zero
  3263  001462                     	endif
  3264  001462                     	if	0	;tblptru may be non-zero
  3265  001462                     	endif
  3266  001462  0008               	tblrd		*
  3267  001464  50F5               	movf	tablat,w,c
  3268  001466  0900               	iorlw	0
  3269  001468  A4D8               	btfss	status,2,c
  3270  00146A  EF39  F00A         	goto	u911
  3271  00146E  EF3B  F00A         	goto	u910
  3272  001472                     u911:
  3273  001472  EF18  F00A         	goto	l1863
  3274  001476                     u910:
  3275  001476  0012               	return		;funcret
  3276  001478                     __end_of_lcd_str:
  3277                           	opt callstack 0
  3278                           
  3279 ;; *************** function _lcd_dat *****************
  3280 ;; Defined at:
  3281 ;;		line 19 in file "lcd.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;  val             1    wreg     unsigned char 
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;  val             1    6[COMRAM] unsigned char 
  3286 ;; Return value:  Size  Location     Type
  3287 ;;                  1    wreg      void 
  3288 ;; Registers used:
  3289 ;;		wreg, status,2, status,0, cstack
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3295 ;;      Params:         0       0       0       0       0       0       0
  3296 ;;      Locals:         1       0       0       0       0       0       0
  3297 ;;      Temps:          0       0       0       0       0       0       0
  3298 ;;      Totals:         1       0       0       0       0       0       0
  3299 ;;Total ram usage:        1 bytes
  3300 ;; Hardware stack levels used:    1
  3301 ;; Hardware stack levels required when called:    1
  3302 ;; This function calls:
  3303 ;;		_atraso_ms
  3304 ;;		_lcd_wr
  3305 ;; This function is called by:
  3306 ;;		_loading
  3307 ;;		_main
  3308 ;;		_lcd_str
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           	psect	text20
  3313  0014E8                     __ptext20:
  3314                           	opt callstack 0
  3315  0014E8                     _lcd_dat:
  3316                           	opt callstack 27
  3317                           
  3318                           ;incstack = 0
  3319                           ;lcd_dat@val stored from wreg
  3320  0014E8  6E07               	movwf	lcd_dat@val^0,c
  3321  0014EA                     
  3322                           ;lcd.c: 20:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  3323  0014EA  8284               	bsf	132,1,c	;volatile
  3324  0014EC                     
  3325                           ;lcd.c: 21:     lcd_wr(val);
  3326  0014EC  5007               	movf	lcd_dat@val^0,w,c
  3327  0014EE  ECF4  F00A         	call	_lcd_wr
  3328  0014F2                     
  3329                           ;lcd.c: 22:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<2));
  3330  0014F2  8484               	bsf	132,2,c	;volatile
  3331  0014F4                     
  3332                           ;lcd.c: 23:     atraso_ms(3);
  3333  0014F4  0E00               	movlw	0
  3334  0014F6  6E02               	movwf	(atraso_ms@t+1)^0,c
  3335  0014F8  0E03               	movlw	3
  3336  0014FA  6E01               	movwf	atraso_ms@t^0,c
  3337  0014FC  ECF6  F008         	call	_atraso_ms	;wreg free
  3338  001500                     
  3339                           ;lcd.c: 24:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  3340  001500  9284               	bcf	132,1,c	;volatile
  3341  001502                     
  3342                           ;lcd.c: 25:     atraso_ms(3);
  3343  001502  0E00               	movlw	0
  3344  001504  6E02               	movwf	(atraso_ms@t+1)^0,c
  3345  001506  0E03               	movlw	3
  3346  001508  6E01               	movwf	atraso_ms@t^0,c
  3347  00150A  ECF6  F008         	call	_atraso_ms	;wreg free
  3348  00150E                     
  3349                           ;lcd.c: 26:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  3350  00150E  8284               	bsf	132,1,c	;volatile
  3351  001510  0012               	return		;funcret
  3352  001512                     __end_of_lcd_dat:
  3353                           	opt callstack 0
  3354                           
  3355 ;; *************** function _lcd_init *****************
  3356 ;; Defined at:
  3357 ;;		line 29 in file "lcd.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;		None
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;		None
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  1    wreg      void 
  3364 ;; Registers used:
  3365 ;;		wreg, status,2, status,0, cstack
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3371 ;;      Params:         0       0       0       0       0       0       0
  3372 ;;      Locals:         0       0       0       0       0       0       0
  3373 ;;      Temps:          0       0       0       0       0       0       0
  3374 ;;      Totals:         0       0       0       0       0       0       0
  3375 ;;Total ram usage:        0 bytes
  3376 ;; Hardware stack levels used:    1
  3377 ;; Hardware stack levels required when called:    2
  3378 ;; This function calls:
  3379 ;;		_atraso_ms
  3380 ;;		_lcd_cmd
  3381 ;; This function is called by:
  3382 ;;		_main
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           	psect	text21
  3387  001372                     __ptext21:
  3388                           	opt callstack 0
  3389  001372                     _lcd_init:
  3390                           	opt callstack 28
  3391  001372                     
  3392                           ;lcd.c: 30:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  3393  001372  9284               	bcf	132,1,c	;volatile
  3394                           
  3395                           ;lcd.c: 31:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
  3396  001374  9484               	bcf	132,2,c	;volatile
  3397  001376                     
  3398                           ;lcd.c: 32:     atraso_ms(20);
  3399  001376  0E00               	movlw	0
  3400  001378  6E02               	movwf	(atraso_ms@t+1)^0,c
  3401  00137A  0E14               	movlw	20
  3402  00137C  6E01               	movwf	atraso_ms@t^0,c
  3403  00137E  ECF6  F008         	call	_atraso_ms	;wreg free
  3404  001382                     
  3405                           ;lcd.c: 33:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  3406  001382  8284               	bsf	132,1,c	;volatile
  3407                           
  3408                           ;lcd.c: 35:     lcd_cmd(0x38);
  3409  001384  0E38               	movlw	56
  3410  001386  EC89  F00A         	call	_lcd_cmd
  3411                           
  3412                           ;lcd.c: 36:     atraso_ms(5);
  3413  00138A  0E00               	movlw	0
  3414  00138C  6E02               	movwf	(atraso_ms@t+1)^0,c
  3415  00138E  0E05               	movlw	5
  3416  001390  6E01               	movwf	atraso_ms@t^0,c
  3417  001392  ECF6  F008         	call	_atraso_ms	;wreg free
  3418                           
  3419                           ;lcd.c: 37:     lcd_cmd(0x38);
  3420  001396  0E38               	movlw	56
  3421  001398  EC89  F00A         	call	_lcd_cmd
  3422                           
  3423                           ;lcd.c: 38:     atraso_ms(1);
  3424  00139C  0E00               	movlw	0
  3425  00139E  6E02               	movwf	(atraso_ms@t+1)^0,c
  3426  0013A0  0E01               	movlw	1
  3427  0013A2  6E01               	movwf	atraso_ms@t^0,c
  3428  0013A4  ECF6  F008         	call	_atraso_ms	;wreg free
  3429                           
  3430                           ;lcd.c: 39:     lcd_cmd(0x38);
  3431  0013A8  0E38               	movlw	56
  3432  0013AA  EC89  F00A         	call	_lcd_cmd
  3433                           
  3434                           ;lcd.c: 40:     lcd_cmd(0x08);
  3435  0013AE  0E08               	movlw	8
  3436  0013B0  EC89  F00A         	call	_lcd_cmd
  3437                           
  3438                           ;lcd.c: 41:     lcd_cmd(0x0F);
  3439  0013B4  0E0F               	movlw	15
  3440  0013B6  EC89  F00A         	call	_lcd_cmd
  3441                           
  3442                           ;lcd.c: 42:     lcd_cmd(0x01);
  3443  0013BA  0E01               	movlw	1
  3444  0013BC  EC89  F00A         	call	_lcd_cmd
  3445                           
  3446                           ;lcd.c: 43:     lcd_cmd(0x38);
  3447  0013C0  0E38               	movlw	56
  3448  0013C2  EC89  F00A         	call	_lcd_cmd
  3449                           
  3450                           ;lcd.c: 44:     lcd_cmd(0x80);
  3451  0013C6  0E80               	movlw	128
  3452  0013C8  EC89  F00A         	call	_lcd_cmd
  3453  0013CC  0012               	return		;funcret
  3454  0013CE                     __end_of_lcd_init:
  3455                           	opt callstack 0
  3456                           
  3457 ;; *************** function _lcd_cmd *****************
  3458 ;; Defined at:
  3459 ;;		line 9 in file "lcd.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;  val             1    wreg     unsigned char 
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;  val             1    6[COMRAM] unsigned char 
  3464 ;; Return value:  Size  Location     Type
  3465 ;;                  1    wreg      void 
  3466 ;; Registers used:
  3467 ;;		wreg, status,2, status,0, cstack
  3468 ;; Tracked objects:
  3469 ;;		On entry : 0/0
  3470 ;;		On exit  : 0/0
  3471 ;;		Unchanged: 0/0
  3472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3473 ;;      Params:         0       0       0       0       0       0       0
  3474 ;;      Locals:         1       0       0       0       0       0       0
  3475 ;;      Temps:          0       0       0       0       0       0       0
  3476 ;;      Totals:         1       0       0       0       0       0       0
  3477 ;;Total ram usage:        1 bytes
  3478 ;; Hardware stack levels used:    1
  3479 ;; Hardware stack levels required when called:    1
  3480 ;; This function calls:
  3481 ;;		_atraso_ms
  3482 ;;		_lcd_wr
  3483 ;; This function is called by:
  3484 ;;		_loading
  3485 ;;		_main
  3486 ;;		_lcd_init
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text22
  3491  001512                     __ptext22:
  3492                           	opt callstack 0
  3493  001512                     _lcd_cmd:
  3494                           	opt callstack 28
  3495                           
  3496                           ;incstack = 0
  3497                           ;lcd_cmd@val stored from wreg
  3498  001512  6E07               	movwf	lcd_cmd@val^0,c
  3499  001514                     
  3500                           ;lcd.c: 10:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  3501  001514  8284               	bsf	132,1,c	;volatile
  3502  001516                     
  3503                           ;lcd.c: 11:     lcd_wr(val);
  3504  001516  5007               	movf	lcd_cmd@val^0,w,c
  3505  001518  ECF4  F00A         	call	_lcd_wr
  3506  00151C                     
  3507                           ;lcd.c: 12:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
  3508  00151C  9484               	bcf	132,2,c	;volatile
  3509  00151E                     
  3510                           ;lcd.c: 13:     atraso_ms(3);
  3511  00151E  0E00               	movlw	0
  3512  001520  6E02               	movwf	(atraso_ms@t+1)^0,c
  3513  001522  0E03               	movlw	3
  3514  001524  6E01               	movwf	atraso_ms@t^0,c
  3515  001526  ECF6  F008         	call	_atraso_ms	;wreg free
  3516  00152A                     
  3517                           ;lcd.c: 14:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  3518  00152A  9284               	bcf	132,1,c	;volatile
  3519  00152C                     
  3520                           ;lcd.c: 15:     atraso_ms(3);
  3521  00152C  0E00               	movlw	0
  3522  00152E  6E02               	movwf	(atraso_ms@t+1)^0,c
  3523  001530  0E03               	movlw	3
  3524  001532  6E01               	movwf	atraso_ms@t^0,c
  3525  001534  ECF6  F008         	call	_atraso_ms	;wreg free
  3526  001538                     
  3527                           ;lcd.c: 16:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  3528  001538  8284               	bsf	132,1,c	;volatile
  3529  00153A  0012               	return		;funcret
  3530  00153C                     __end_of_lcd_cmd:
  3531                           	opt callstack 0
  3532                           
  3533 ;; *************** function _lcd_wr *****************
  3534 ;; Defined at:
  3535 ;;		line 5 in file "lcd.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;  val             1    wreg     unsigned char 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;  val             1    0[COMRAM] unsigned char 
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  1    wreg      void 
  3542 ;; Registers used:
  3543 ;;		wreg
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3549 ;;      Params:         0       0       0       0       0       0       0
  3550 ;;      Locals:         1       0       0       0       0       0       0
  3551 ;;      Temps:          0       0       0       0       0       0       0
  3552 ;;      Totals:         1       0       0       0       0       0       0
  3553 ;;Total ram usage:        1 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; This function calls:
  3556 ;;		Nothing
  3557 ;; This function is called by:
  3558 ;;		_lcd_cmd
  3559 ;;		_lcd_dat
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563                           	psect	text23
  3564  0015E8                     __ptext23:
  3565                           	opt callstack 0
  3566  0015E8                     _lcd_wr:
  3567                           	opt callstack 27
  3568                           
  3569                           ;incstack = 0
  3570                           ;lcd_wr@val stored from wreg
  3571  0015E8  6E01               	movwf	lcd_wr@val^0,c
  3572  0015EA                     
  3573                           ;lcd.c: 6:     (*(volatile __near unsigned char*)0xF83) = val;
  3574  0015EA  C001  FF83         	movff	lcd_wr@val,3971	;volatile
  3575  0015EE  0012               	return		;funcret
  3576  0015F0                     __end_of_lcd_wr:
  3577                           	opt callstack 0
  3578                           
  3579 ;; *************** function _atraso_ms *****************
  3580 ;; Defined at:
  3581 ;;		line 3 in file "delay.c"
  3582 ;; Parameters:    Size  Location     Type
  3583 ;;  t               2    0[COMRAM] int 
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;  i               2    2[COMRAM] volatile unsigned int 
  3586 ;;  k               1    5[COMRAM] volatile unsigned char 
  3587 ;;  j               1    4[COMRAM] volatile unsigned char 
  3588 ;; Return value:  Size  Location     Type
  3589 ;;                  1    wreg      void 
  3590 ;; Registers used:
  3591 ;;		wreg, status,2, status,0
  3592 ;; Tracked objects:
  3593 ;;		On entry : 0/0
  3594 ;;		On exit  : 0/0
  3595 ;;		Unchanged: 0/0
  3596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3597 ;;      Params:         2       0       0       0       0       0       0
  3598 ;;      Locals:         4       0       0       0       0       0       0
  3599 ;;      Temps:          0       0       0       0       0       0       0
  3600 ;;      Totals:         6       0       0       0       0       0       0
  3601 ;;Total ram usage:        6 bytes
  3602 ;; Hardware stack levels used:    1
  3603 ;; This function calls:
  3604 ;;		Nothing
  3605 ;; This function is called by:
  3606 ;;		_loading
  3607 ;;		_mostraPontuacao
  3608 ;;		_main
  3609 ;;		_lcd_cmd
  3610 ;;		_lcd_dat
  3611 ;;		_lcd_init
  3612 ;;		_tc_tecla
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615                           
  3616                           	psect	text24
  3617  0011EC                     __ptext24:
  3618                           	opt callstack 0
  3619  0011EC                     _atraso_ms:
  3620                           	opt callstack 29
  3621  0011EC                     
  3622                           ;delay.c: 4:     volatile unsigned char j, k;;delay.c: 5:     volatile unsigned int i;;d
      +                          elay.c: 7:     for (i = 0; i < (t); i++) {
  3623  0011EC  0E00               	movlw	0
  3624  0011EE  6E04               	movwf	(atraso_ms@i+1)^0,c	;volatile
  3625  0011F0  0E00               	movlw	0
  3626  0011F2  6E03               	movwf	atraso_ms@i^0,c	;volatile
  3627  0011F4  EF1C  F009         	goto	l1735
  3628  0011F8                     l1713:
  3629                           
  3630                           ;delay.c: 8:         for (j = 0; j < 41; j++) {
  3631  0011F8  0E00               	movlw	0
  3632  0011FA  6E05               	movwf	atraso_ms@j^0,c	;volatile
  3633  0011FC                     l1715:
  3634  0011FC  0E28               	movlw	40
  3635  0011FE  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
  3636  001200  EF04  F009         	goto	u761
  3637  001204  EF06  F009         	goto	u760
  3638  001208                     u761:
  3639  001208  EF08  F009         	goto	l1719
  3640  00120C                     u760:
  3641  00120C  EF1A  F009         	goto	l1733
  3642  001210                     l1719:
  3643                           
  3644                           ;delay.c: 9:             for (k = 0; k < 3; k++);
  3645  001210  0E00               	movlw	0
  3646  001212  6E06               	movwf	atraso_ms@k^0,c	;volatile
  3647  001214                     l1721:
  3648  001214  0E02               	movlw	2
  3649  001216  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
  3650  001218  EF10  F009         	goto	u771
  3651  00121C  EF12  F009         	goto	u770
  3652  001220                     u771:
  3653  001220  EF14  F009         	goto	l1725
  3654  001224                     u770:
  3655  001224  EF17  F009         	goto	l1729
  3656  001228                     l1725:
  3657  001228  2A06               	incf	atraso_ms@k^0,f,c	;volatile
  3658  00122A  EF0A  F009         	goto	l1721
  3659  00122E                     l1729:
  3660                           
  3661                           ;delay.c: 10:         }
  3662  00122E  2A05               	incf	atraso_ms@j^0,f,c	;volatile
  3663  001230  EFFE  F008         	goto	l1715
  3664  001234                     l1733:
  3665                           
  3666                           ;delay.c: 11:     }
  3667  001234  4A03               	infsnz	atraso_ms@i^0,f,c	;volatile
  3668  001236  2A04               	incf	(atraso_ms@i+1)^0,f,c	;volatile
  3669  001238                     l1735:
  3670  001238  5001               	movf	atraso_ms@t^0,w,c
  3671  00123A  5C03               	subwf	atraso_ms@i^0,w,c	;volatile
  3672  00123C  5002               	movf	(atraso_ms@t+1)^0,w,c
  3673  00123E  5804               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
  3674  001240  A0D8               	btfss	status,0,c
  3675  001242  EF25  F009         	goto	u781
  3676  001246  EF27  F009         	goto	u780
  3677  00124A                     u781:
  3678  00124A  EFFC  F008         	goto	l1713
  3679  00124E                     u780:
  3680  00124E  0012               	return		;funcret
  3681  001250                     __end_of_atraso_ms:
  3682                           	opt callstack 0
  3683                           
  3684 ;; *************** function _conta *****************
  3685 ;; Defined at:
  3686 ;;		line 35 in file "main.c"
  3687 ;; Parameters:    Size  Location     Type
  3688 ;;		None
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;		None
  3691 ;; Return value:  Size  Location     Type
  3692 ;;                  1    wreg      void 
  3693 ;; Registers used:
  3694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3700 ;;      Params:         0       0       0       0       0       0       0
  3701 ;;      Locals:         0       0       0       0       0       0       0
  3702 ;;      Temps:          0       0       0       0       0       0       0
  3703 ;;      Totals:         0       0       0       0       0       0       0
  3704 ;;Total ram usage:        0 bytes
  3705 ;; Hardware stack levels used:    1
  3706 ;; Hardware stack levels required when called:    1
  3707 ;; This function calls:
  3708 ;;		___lwdiv
  3709 ;;		___lwmod
  3710 ;; This function is called by:
  3711 ;;		_main
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715                           	psect	text25
  3716  000C06                     __ptext25:
  3717                           	opt callstack 0
  3718  000C06                     _conta:
  3719                           	opt callstack 29
  3720  000C06                     
  3721                           ;main.c: 36:     while(contD > 0){
  3722  000C06  EF74  F006         	goto	l1967
  3723  000C0A                     l1939:
  3724                           
  3725                           ;main.c: 38:     (*(volatile __near unsigned char*)0xF92) = 0x00;
  3726  000C0A  0E00               	movlw	0
  3727  000C0C  6E92               	movwf	146,c	;volatile
  3728                           
  3729                           ;main.c: 39:     (*(volatile __near unsigned char*)0xF95) = 0x00;
  3730  000C0E  0E00               	movlw	0
  3731  000C10  6E95               	movwf	149,c	;volatile
  3732  000C12                     
  3733                           ;main.c: 41:     (*(volatile __near unsigned char*)0xF83) = valores7seg[(contD/10)%10];
  3734  000C12  0E00               	movlw	0
  3735  000C14  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3736  000C16  0E0A               	movlw	10
  3737  000C18  6E03               	movwf	___lwdiv@divisor^0,c
  3738  000C1A  C060  F001         	movff	_contD,___lwdiv@dividend
  3739  000C1E  C061  F002         	movff	_contD+1,___lwdiv@dividend+1
  3740  000C22  EC83  F008         	call	___lwdiv	;wreg free
  3741  000C26  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  3742  000C2A  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  3743  000C2E  0E00               	movlw	0
  3744  000C30  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  3745  000C32  0E0A               	movlw	10
  3746  000C34  6E0A               	movwf	___lwmod@divisor^0,c
  3747  000C36  EC28  F009         	call	___lwmod	;wreg free
  3748  000C3A  90D8               	bcf	status,0,c
  3749  000C3C  3608               	rlcf	?___lwmod^0,f,c
  3750  000C3E  3609               	rlcf	(?___lwmod+1)^0,f,c
  3751  000C40  0E80               	movlw	low _valores7seg
  3752  000C42  2408               	addwf	?___lwmod^0,w,c
  3753  000C44  6ED9               	movwf	fsr2l,c
  3754  000C46  0E00               	movlw	high _valores7seg
  3755  000C48  2009               	addwfc	(?___lwmod+1)^0,w,c
  3756  000C4A  6EDA               	movwf	fsr2h,c
  3757  000C4C  50DF               	movf	indf2,w,c
  3758  000C4E  6E83               	movwf	131,c	;volatile
  3759  000C50                     
  3760                           ;main.c: 42:     (((*(volatile __near unsigned char*)0xF80)) |= (1<<5));
  3761  000C50  8A80               	bsf	128,5,c	;volatile
  3762  000C52                     
  3763                           ;main.c: 43:     (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<4));
  3764  000C52  9880               	bcf	128,4,c	;volatile
  3765  000C54                     
  3766                           ;main.c: 44:     for(k = 0; k<delay; k++);
  3767  000C54  0E00               	movlw	0
  3768  000C56  6E71               	movwf	(_k+1)^0,c
  3769  000C58  0E00               	movlw	0
  3770  000C5A  6E70               	movwf	_k^0,c
  3771  000C5C  EF32  F006         	goto	l1951
  3772  000C60                     l1949:
  3773  000C60  4A70               	infsnz	_k^0,f,c
  3774  000C62  2A71               	incf	(_k+1)^0,f,c
  3775  000C64                     l1951:
  3776  000C64  0E88               	movlw	136
  3777  000C66  5C70               	subwf	_k^0,w,c
  3778  000C68  0E13               	movlw	19
  3779  000C6A  5871               	subwfb	(_k+1)^0,w,c
  3780  000C6C  A0D8               	btfss	status,0,c
  3781  000C6E  EF3B  F006         	goto	u1021
  3782  000C72  EF3D  F006         	goto	u1020
  3783  000C76                     u1021:
  3784  000C76  EF30  F006         	goto	l1949
  3785  000C7A                     u1020:
  3786  000C7A                     
  3787                           ;main.c: 46:     (*(volatile __near unsigned char*)0xF83) = valores7seg[(contD/100)%10];
  3788  000C7A  0E00               	movlw	0
  3789  000C7C  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3790  000C7E  0E64               	movlw	100
  3791  000C80  6E03               	movwf	___lwdiv@divisor^0,c
  3792  000C82  C060  F001         	movff	_contD,___lwdiv@dividend
  3793  000C86  C061  F002         	movff	_contD+1,___lwdiv@dividend+1
  3794  000C8A  EC83  F008         	call	___lwdiv	;wreg free
  3795  000C8E  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  3796  000C92  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  3797  000C96  0E00               	movlw	0
  3798  000C98  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  3799  000C9A  0E0A               	movlw	10
  3800  000C9C  6E0A               	movwf	___lwmod@divisor^0,c
  3801  000C9E  EC28  F009         	call	___lwmod	;wreg free
  3802  000CA2  90D8               	bcf	status,0,c
  3803  000CA4  3608               	rlcf	?___lwmod^0,f,c
  3804  000CA6  3609               	rlcf	(?___lwmod+1)^0,f,c
  3805  000CA8  0E80               	movlw	low _valores7seg
  3806  000CAA  2408               	addwf	?___lwmod^0,w,c
  3807  000CAC  6ED9               	movwf	fsr2l,c
  3808  000CAE  0E00               	movlw	high _valores7seg
  3809  000CB0  2009               	addwfc	(?___lwmod+1)^0,w,c
  3810  000CB2  6EDA               	movwf	fsr2h,c
  3811  000CB4  50DF               	movf	indf2,w,c
  3812  000CB6  6E83               	movwf	131,c	;volatile
  3813  000CB8                     
  3814                           ;main.c: 47:     (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  3815  000CB8  9A80               	bcf	128,5,c	;volatile
  3816  000CBA                     
  3817                           ;main.c: 48:     (((*(volatile __near unsigned char*)0xF80)) |= (1<<4));
  3818  000CBA  8880               	bsf	128,4,c	;volatile
  3819  000CBC                     
  3820                           ;main.c: 49:     for(k = 0; k<delay; k++);
  3821  000CBC  0E00               	movlw	0
  3822  000CBE  6E71               	movwf	(_k+1)^0,c
  3823  000CC0  0E00               	movlw	0
  3824  000CC2  6E70               	movwf	_k^0,c
  3825  000CC4  EF66  F006         	goto	l1963
  3826  000CC8                     l1961:
  3827  000CC8  4A70               	infsnz	_k^0,f,c
  3828  000CCA  2A71               	incf	(_k+1)^0,f,c
  3829  000CCC                     l1963:
  3830  000CCC  0E88               	movlw	136
  3831  000CCE  5C70               	subwf	_k^0,w,c
  3832  000CD0  0E13               	movlw	19
  3833  000CD2  5871               	subwfb	(_k+1)^0,w,c
  3834  000CD4  A0D8               	btfss	status,0,c
  3835  000CD6  EF6F  F006         	goto	u1031
  3836  000CDA  EF71  F006         	goto	u1030
  3837  000CDE                     u1031:
  3838  000CDE  EF64  F006         	goto	l1961
  3839  000CE2                     u1030:
  3840  000CE2                     
  3841                           ;main.c: 51:     contD--;
  3842  000CE2  0660               	decf	_contD^0,f,c
  3843  000CE4  A0D8               	btfss	status,0,c
  3844  000CE6  0661               	decf	(_contD+1)^0,f,c
  3845  000CE8                     l1967:
  3846                           
  3847                           ;main.c: 36:     while(contD > 0){
  3848  000CE8  5060               	movf	_contD^0,w,c
  3849  000CEA  1061               	iorwf	(_contD+1)^0,w,c
  3850  000CEC  A4D8               	btfss	status,2,c
  3851  000CEE  EF7B  F006         	goto	u1041
  3852  000CF2  EF7D  F006         	goto	u1040
  3853  000CF6                     u1041:
  3854  000CF6  EF05  F006         	goto	l1939
  3855  000CFA                     u1040:
  3856  000CFA                     
  3857                           ;main.c: 54:     (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  3858  000CFA  9A80               	bcf	128,5,c	;volatile
  3859                           
  3860                           ;main.c: 55:     (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<4));
  3861  000CFC  9880               	bcf	128,4,c	;volatile
  3862  000CFE  0012               	return		;funcret
  3863  000D00                     __end_of_conta:
  3864                           	opt callstack 0
  3865                           
  3866 ;; *************** function ___lwmod *****************
  3867 ;; Defined at:
  3868 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwmod.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  dividend        2    7[COMRAM] unsigned int 
  3871 ;;  divisor         2    9[COMRAM] unsigned int 
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;  counter         1   11[COMRAM] unsigned char 
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  2    7[COMRAM] unsigned int 
  3876 ;; Registers used:
  3877 ;;		wreg, status,2, status,0
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3883 ;;      Params:         4       0       0       0       0       0       0
  3884 ;;      Locals:         1       0       0       0       0       0       0
  3885 ;;      Temps:          0       0       0       0       0       0       0
  3886 ;;      Totals:         5       0       0       0       0       0       0
  3887 ;;Total ram usage:        5 bytes
  3888 ;; Hardware stack levels used:    1
  3889 ;; This function calls:
  3890 ;;		Nothing
  3891 ;; This function is called by:
  3892 ;;		_conta
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           	psect	text26
  3897  001250                     __ptext26:
  3898                           	opt callstack 0
  3899  001250                     ___lwmod:
  3900                           	opt callstack 29
  3901  001250  500A               	movf	___lwmod@divisor^0,w,c
  3902  001252  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  3903  001254  B4D8               	btfsc	status,2,c
  3904  001256  EF2F  F009         	goto	u981
  3905  00125A  EF31  F009         	goto	u980
  3906  00125E                     u981:
  3907  00125E  EF55  F009         	goto	l789
  3908  001262                     u980:
  3909  001262  0E01               	movlw	1
  3910  001264  6E0C               	movwf	___lwmod@counter^0,c
  3911  001266  EF39  F009         	goto	l1909
  3912  00126A                     l1907:
  3913  00126A  90D8               	bcf	status,0,c
  3914  00126C  360A               	rlcf	___lwmod@divisor^0,f,c
  3915  00126E  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  3916  001270  2A0C               	incf	___lwmod@counter^0,f,c
  3917  001272                     l1909:
  3918  001272  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  3919  001274  EF3E  F009         	goto	u991
  3920  001278  EF40  F009         	goto	u990
  3921  00127C                     u991:
  3922  00127C  EF35  F009         	goto	l1907
  3923  001280                     u990:
  3924  001280                     l1911:
  3925  001280  500A               	movf	___lwmod@divisor^0,w,c
  3926  001282  5C08               	subwf	___lwmod@dividend^0,w,c
  3927  001284  500B               	movf	(___lwmod@divisor+1)^0,w,c
  3928  001286  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  3929  001288  A0D8               	btfss	status,0,c
  3930  00128A  EF49  F009         	goto	u1001
  3931  00128E  EF4B  F009         	goto	u1000
  3932  001292                     u1001:
  3933  001292  EF4F  F009         	goto	l1915
  3934  001296                     u1000:
  3935  001296  500A               	movf	___lwmod@divisor^0,w,c
  3936  001298  5E08               	subwf	___lwmod@dividend^0,f,c
  3937  00129A  500B               	movf	(___lwmod@divisor+1)^0,w,c
  3938  00129C  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  3939  00129E                     l1915:
  3940  00129E  90D8               	bcf	status,0,c
  3941  0012A0  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  3942  0012A2  320A               	rrcf	___lwmod@divisor^0,f,c
  3943  0012A4  2E0C               	decfsz	___lwmod@counter^0,f,c
  3944  0012A6  EF40  F009         	goto	l1911
  3945  0012AA                     l789:
  3946  0012AA  C008  F008         	movff	___lwmod@dividend,?___lwmod
  3947  0012AE  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  3948  0012B2  0012               	return		;funcret
  3949  0012B4                     __end_of___lwmod:
  3950                           	opt callstack 0
  3951                           
  3952 ;; *************** function ___lwdiv *****************
  3953 ;; Defined at:
  3954 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;  dividend        2    0[COMRAM] unsigned int 
  3957 ;;  divisor         2    2[COMRAM] unsigned int 
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;  quotient        2    4[COMRAM] unsigned int 
  3960 ;;  counter         1    6[COMRAM] unsigned char 
  3961 ;; Return value:  Size  Location     Type
  3962 ;;                  2    0[COMRAM] unsigned int 
  3963 ;; Registers used:
  3964 ;;		wreg, status,2, status,0
  3965 ;; Tracked objects:
  3966 ;;		On entry : 0/0
  3967 ;;		On exit  : 0/0
  3968 ;;		Unchanged: 0/0
  3969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3970 ;;      Params:         4       0       0       0       0       0       0
  3971 ;;      Locals:         3       0       0       0       0       0       0
  3972 ;;      Temps:          0       0       0       0       0       0       0
  3973 ;;      Totals:         7       0       0       0       0       0       0
  3974 ;;Total ram usage:        7 bytes
  3975 ;; Hardware stack levels used:    1
  3976 ;; This function calls:
  3977 ;;		Nothing
  3978 ;; This function is called by:
  3979 ;;		_conta
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           	psect	text27
  3984  001106                     __ptext27:
  3985                           	opt callstack 0
  3986  001106                     ___lwdiv:
  3987                           	opt callstack 29
  3988  001106  0E00               	movlw	0
  3989  001108  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  3990  00110A  0E00               	movlw	0
  3991  00110C  6E05               	movwf	___lwdiv@quotient^0,c
  3992  00110E  5003               	movf	___lwdiv@divisor^0,w,c
  3993  001110  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3994  001112  B4D8               	btfsc	status,2,c
  3995  001114  EF8E  F008         	goto	u951
  3996  001118  EF90  F008         	goto	u950
  3997  00111C                     u951:
  3998  00111C  EFB8  F008         	goto	l779
  3999  001120                     u950:
  4000  001120  0E01               	movlw	1
  4001  001122  6E07               	movwf	___lwdiv@counter^0,c
  4002  001124  EF98  F008         	goto	l1889
  4003  001128                     l1887:
  4004  001128  90D8               	bcf	status,0,c
  4005  00112A  3603               	rlcf	___lwdiv@divisor^0,f,c
  4006  00112C  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4007  00112E  2A07               	incf	___lwdiv@counter^0,f,c
  4008  001130                     l1889:
  4009  001130  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  4010  001132  EF9D  F008         	goto	u961
  4011  001136  EF9F  F008         	goto	u960
  4012  00113A                     u961:
  4013  00113A  EF94  F008         	goto	l1887
  4014  00113E                     u960:
  4015  00113E                     l1891:
  4016  00113E  90D8               	bcf	status,0,c
  4017  001140  3605               	rlcf	___lwdiv@quotient^0,f,c
  4018  001142  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4019  001144  5003               	movf	___lwdiv@divisor^0,w,c
  4020  001146  5C01               	subwf	___lwdiv@dividend^0,w,c
  4021  001148  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4022  00114A  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4023  00114C  A0D8               	btfss	status,0,c
  4024  00114E  EFAB  F008         	goto	u971
  4025  001152  EFAD  F008         	goto	u970
  4026  001156                     u971:
  4027  001156  EFB2  F008         	goto	l1899
  4028  00115A                     u970:
  4029  00115A  5003               	movf	___lwdiv@divisor^0,w,c
  4030  00115C  5E01               	subwf	___lwdiv@dividend^0,f,c
  4031  00115E  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4032  001160  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4033  001162  8005               	bsf	___lwdiv@quotient^0,0,c
  4034  001164                     l1899:
  4035  001164  90D8               	bcf	status,0,c
  4036  001166  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4037  001168  3203               	rrcf	___lwdiv@divisor^0,f,c
  4038  00116A  2E07               	decfsz	___lwdiv@counter^0,f,c
  4039  00116C  EF9F  F008         	goto	l1891
  4040  001170                     l779:
  4041  001170  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  4042  001174  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4043  001178  0012               	return		;funcret
  4044  00117A                     __end_of___lwdiv:
  4045                           	opt callstack 0
  4046                           
  4047                           	psect	rparam
  4048  0000                     tosu	equ	0xFFF
  4049                           tosh	equ	0xFFE
  4050                           tosl	equ	0xFFD
  4051                           stkptr	equ	0xFFC
  4052                           pclatu	equ	0xFFB
  4053                           pclath	equ	0xFFA
  4054                           pcl	equ	0xFF9
  4055                           tblptru	equ	0xFF8
  4056                           tblptrh	equ	0xFF7
  4057                           tblptrl	equ	0xFF6
  4058                           tablat	equ	0xFF5
  4059                           prodh	equ	0xFF4
  4060                           prodl	equ	0xFF3
  4061                           indf0	equ	0xFEF
  4062                           postinc0	equ	0xFEE
  4063                           postdec0	equ	0xFED
  4064                           preinc0	equ	0xFEC
  4065                           plusw0	equ	0xFEB
  4066                           fsr0h	equ	0xFEA
  4067                           fsr0l	equ	0xFE9
  4068                           wreg	equ	0xFE8
  4069                           indf1	equ	0xFE7
  4070                           postinc1	equ	0xFE6
  4071                           postdec1	equ	0xFE5
  4072                           preinc1	equ	0xFE4
  4073                           plusw1	equ	0xFE3
  4074                           fsr1h	equ	0xFE2
  4075                           fsr1l	equ	0xFE1
  4076                           bsr	equ	0xFE0
  4077                           indf2	equ	0xFDF
  4078                           postinc2	equ	0xFDE
  4079                           postdec2	equ	0xFDD
  4080                           preinc2	equ	0xFDC
  4081                           plusw2	equ	0xFDB
  4082                           fsr2h	equ	0xFDA
  4083                           fsr2l	equ	0xFD9
  4084                           status	equ	0xFD8


Data Sizes:
    Strings     133
    Constant    4
    Data        54
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     63     126
    BANK0           128      0      20
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_14(CODE[14]), STR_13(CODE[13]), STR_12(CODE[14]), STR_11(CODE[15]), 
		 -> STR_10(CODE[14]), STR_9(CODE[15]), STR_8(CODE[2]), STR_7(CODE[8]), 
		 -> STR_6(CODE[10]), STR_5(CODE[2]), STR_4(CODE[14]), STR_3(CODE[14]), 
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _tc_tecla->_atraso_ms
    _srand->_rtcGetSeconds
    _rtcInit->_rtcPutSeconds
    _rtcPutSeconds->_ht1380write
    _ht1380write->___awmod
    ___awmod->_rand
    _rtcGetSeconds->_ht1380read
    _ht1380read->_readByte
    _ht1380read->_writeByte
    _rand->___omul
    _mostraPontuacao->_atraso_ms
    _loading->_lcd_str
    _lcd_str->_lcd_dat
    _lcd_dat->_atraso_ms
    _lcd_init->_lcd_cmd
    _lcd_cmd->_atraso_ms
    _conta->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0   28164
                                             45 COMRAM    18    18      0
                            ___awmod
                          _atraso_ms
                              _conta
                            _lcd_cmd
                            _lcd_dat
                           _lcd_init
                            _lcd_str
                            _loading
                    _mostraPontuacao
                               _rand
                      _rtcGetSeconds
                            _rtcInit
                              _srand
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (1) _tc_tecla                                             7     5      2    1794
                                              6 COMRAM     7     5      2
                          _atraso_ms
 ---------------------------------------------------------------------------------
 (1) _srand                                                6     4      2      98
                                              6 COMRAM     6     4      2
                      _rtcGetSeconds (ARG)
 ---------------------------------------------------------------------------------
 (1) _rtcInit                                              0     0      0    5380
                        _ht1380write
                      _rtcGetSeconds
                      _rtcPutSeconds
 ---------------------------------------------------------------------------------
 (2) _rtcPutSeconds                                        3     3      0    3923
                                             42 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
                        _ht1380write
 ---------------------------------------------------------------------------------
 (3) _ht1380write                                          2     1      1    1307
                                             40 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                          _writeByte
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1360
                                             34 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1212
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _rtcGetSeconds                                        2     2      0     150
                                              4 COMRAM     2     2      0
                         _ht1380read
 ---------------------------------------------------------------------------------
 (3) _ht1380read                                           2     2      0     120
                                              2 COMRAM     2     2      0
                           _readByte
                          _writeByte
 ---------------------------------------------------------------------------------
 (4) _writeByte                                            2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _readByte                                             2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _rand                                                10     8      2     370
                                             24 COMRAM    10     8      2
                             ___omul
 ---------------------------------------------------------------------------------
 (2) ___omul                                              24     8     16     370
                                              0 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (1) _mostraPontuacao                                      2     2      0    1430
                                              6 COMRAM     2     2      0
                          _atraso_ms
                       _configuraLed
                     _desligarLedVet
                        _ligarLedVet
 ---------------------------------------------------------------------------------
 (2) _ligarLedVet                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _desligarLedVet                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _configuraLed                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loading                                              2     2      0    6726
                                             12 COMRAM     2     2      0
                          _atraso_ms
                            _lcd_cmd
                            _lcd_dat
                            _lcd_str
 ---------------------------------------------------------------------------------
 (2) _lcd_str                                              5     3      2    2545
                                              7 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (3) _lcd_dat                                              1     1      0    1391
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    2745
                          _atraso_ms
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0    1391
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (4) _lcd_wr                                               1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _atraso_ms                                            6     4      2    1354
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _conta                                                0     0      0     929
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     463
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
     _rand (ARG)
       ___omul
   _atraso_ms
   _conta
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _lcd_cmd
     _atraso_ms
     _lcd_wr
   _lcd_dat
     _atraso_ms
     _lcd_wr
   _lcd_init
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
   _lcd_str
     _lcd_dat
       _atraso_ms
       _lcd_wr
   _loading
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_dat
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
   _mostraPontuacao
     _atraso_ms
     _configuraLed
     _desligarLedVet
     _ligarLedVet
   _rand
     ___omul
   _rtcGetSeconds
     _ht1380read
       _readByte
       _writeByte
   _rtcInit
     _ht1380write
       ___awdiv (ARG)
       ___awmod (ARG)
         _rand (ARG)
           ___omul
       _writeByte (ARG)
     _rtcGetSeconds
       _ht1380read
         _readByte
         _writeByte
     _rtcPutSeconds
       ___awdiv
       ___awmod
         _rand (ARG)
           ___omul
       _ht1380write
         ___awdiv (ARG)
         ___awmod (ARG)
           _rand (ARG)
             ___omul
         _writeByte (ARG)
   _srand
     _rtcGetSeconds (ARG)
       _ht1380read
         _readByte
         _writeByte
   _tc_tecla
     _atraso_ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      14       5       15.6%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3F      7E       1       99.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      92      15        0.0%
DATA                 0      0      92       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Jul 06 19:56:09 2020

           ?_configuraLed 0001                         _i 0072                         _k 0070  
                      l53 1312                        l70 1370                        l65 0CFE  
                      l92 0902                        l76 0700                        l96 094E  
                      l89 0894                        u40 10A6                        u41 10A2  
                      u50 10C8                        u51 10C4                        u60 10E8  
                      u61 10E4                        u70 1104                        u71 1100  
                      u80 1198                        u81 1194                        u90 11B4  
                      u91 11B0              ___awdiv@sign 0006                        _de 0076  
             __CFG_OSC$HS 000000                       l103 0A26                       l122 15EE  
                     l202 15B8                       l131 13CC                       l140 15E6  
                     l117 124E                       l125 153A                       l143 15DE  
                     l223 11B6                       l128 1510                       l216 1104  
                     l208 1098                       l240 0FF2                       l137 1476  
                     l305 1070                       l306 1090                       l226 11EA  
                     l171 0ACE                       l164 0AA6                       l149 15D6  
                     l229 155E                       l181 0B4E                       l246 159E  
                     l174 0B26                       l166 0A90                       l191 0C04  
                     l176 0B0E                       l169 0AE6                       l267 14B8  
                     l532 0F4E                       l519 0E9E                       l786 1178  
                     l779 1170                       l796 12B2                       l964 14E6  
                     l789 12AA                       l967 0DDA                       l995 15EA  
                     l997 1094                       u100 11CC                       u101 11C8  
                     u110 11E8                       u111 11E4                       u120 0F7E  
                     u121 0F7A                       u130 0F9C                       u131 0F98  
                     u140 0FBA                       u141 0FB6                       u150 0FD8  
                     u151 0FD4                       u800 0E08                       u801 0E04  
                     u810 0E2E                       u811 0E2A                       u820 0E4C  
                     u900 0F3E                       u821 0E48                       u901 0F3A  
                     u910 1476                       u830 0E68                       u911 1472  
                     u831 0E64                       u760 120C                       u840 0E8E  
                     u761 1208                       u921 0FFA                       u841 0E8A  
                     u770 1224                       u930 100E                       u850 0EB2  
                     u771 1220                       u931 100A                       u851 0EAE  
                     u780 124E                       u940 1070                       u860 0ECC  
                     u781 124A                       u941 106C                       u861 0EC8  
                     u950 1120                       u790 0DEE                       u870 0EE6  
                     u951 111C                       u791 0DEA                       u871 0EE2  
                     u960 113E                       u880 0F04                       u961 113A  
                     u881 0F00                       u970 115A                       u890 0F1A  
                     u971 1156                       u891 0F16                       u980 1262  
                     u981 125E                       u990 1280                       u991 127C  
            ___awmod@sign 0028                       wreg 000FE8              __CFG_LVP$OFF 000000  
       ??_mostraPontuacao 0007              __CFG_WDT$OFF 000000                      l1011 10B4  
                    l1003 10A6                      l1021 10D2                      l1013 10B8  
                    l1005 10AC                      l1023 10D4                      l1007 10AE  
                    l1111 0F5A                      l1033 10F2                      l1025 10D8  
                    l1017 10CC                      l1009 10B2                      l1121 0F6E  
                    l1113 0F5E                      l2001 14BA                      l2003 0D00  
                    l1051 119C                      l1043 1182                      l1035 10F4  
                    l1131 0F8C                      l1115 0F62                      l2011 0A48  
                    l2005 0D94                      l1061 11B8                      l1045 1184  
                    l1037 117A                      l1029 10EC                      l1141 0FAA  
                    l1125 0F82                      l1117 0F68                      l1109 0F52  
                    l2021 0A68                      l2013 0A50                      l2101 06BC  
                    l1071 11D6                      l1063 11BC                      l1055 11A2  
                    l1047 1188                      l1151 0FC8                      l1135 0FA0  
                    l1119 0F6A                      l2031 0AB4                      l2023 0A76  
                    l2111 06E8                      l2103 06CC                      l1073 11D8  
                    l1057 11A6                      l1161 0FE8                      l1145 0FBE  
                    l1129 0F88                      l2041 0B00                      l2033 0AC0  
                    l2025 0A82                      l2009 0A3C                      l2201 08F2  
                    l2113 06EE                      l2105 06D0                      l1075 11E8  
                    l1067 11D0                      l1059 11B4                      l1163 0FEA  
                    l1155 0FDC                      l1139 0FA6                      l2019 0A54  
                    l2211 0936                      l2203 08FE                      l2131 073A  
                    l2115 06F4                      l2107 06D6                      l1165 0FEC  
                    l1149 0FC4                      l2053 0B5C                      l2045 0B1C  
                    l2037 0ADC                      l2061 0B8A                      l2029 0A9E  
                    l2221 097C                      l2213 093C                      l2205 0910  
                    l2133 0742                      l2141 079E                      l2125 071C  
                    l2117 070E                      l2109 06E2                      l1167 0FEE  
                    l1159 0FE2                      l2071 0BD6                      l2063 0B96  
                    l2047 0B34                      l2055 0B66                      l2039 0AF4  
                    l2231 09B4                      l2223 0984                      l2215 0942  
                    l2207 091A                      l2151 07D6                      l2143 07BA  
                    l2135 0774                      l2127 0728                      l2119 0714  
                    l1281 15DA                      l1169 0FF0                      l2073 0BE6  
                    l2057 0B78                      l2049 0B40                      l2065 0B9E  
                    l2241 09F6                      l2233 09C8                      l2225 0988  
                    l2217 095C                      l2209 092A                      l2161 0806  
                    l2153 07DC                      l2145 07BE                      l2137 0790  
                    l2129 0734                      l1275 15E0                      l1283 1582  
                    l2075 0BE8                      l2067 0BB4                      l2059 0B7A  
                    l2243 0A12                      l2235 09D4                      l2227 099C  
                    l2219 0962                      l2171 0834                      l2163 080A  
                    l2155 07E8                      l2147 07C4                      l2139 079C  
                    l2091 06A8                      l2083 068C                      l1277 15E4  
                    l1285 158A                      l2077 0BFA                      l2069 0BC6  
                    l2245 0A16                      l2237 09E0                      l2229 09B0  
                    l2181 0890                      l2165 081A                      l2173 0838  
                    l2157 07EE                      l2149 07CA                      l2093 06AC  
                    l2085 0690                      l1711 11EC                      l1279 15D0  
                    l2079 0BFE                      l2247 0A1E                      l2239 09F2  
                    l2191 08CE                      l2183 0898                      l2175 084E  
                    l2167 081E                      l2159 07FA                      l2095 06B0  
                    l2087 0698                      l1721 1214                      l1713 11F8  
                    l1801 0E78                      l2193 08D4                      l2185 08AE  
                    l2177 085A                      l2169 0824                      l2097 06B4  
                    l2089 06A0                      l1715 11FC                      l1803 0E7E  
                    l1811 0EA0                      l2195 08DA                      l2187 08C6  
                    l2179 0866                      l2099 06B8                      l1901 116A  
                    l1725 1228                      l1733 1234                      l1741 14F2  
                    l1805 0E8E                      l1821 0ECC                      l1813 0EA4  
                    l2197 08E6                      l2189 08CA                      l1911 1280  
                    l1903 1250                      l1719 1210                      l1735 1238  
                    l1743 14F4                      l1807 0E96                      l1831 0F04  
                    l1823 0ED4                      l1815 0EB2                      l1751 153E  
                    l2199 08EC                      l1913 1296                      l1905 1262  
                    l1729 122E                      l1745 1500                      l1737 14EA  
                    l1921 12C0                      l1841 0F3E                      l1833 0F1A  
                    l1825 0EE6                      l1817 0EBA                      l1761 1558  
                    l1753 1546                      l1915 129E                      l1907 126A  
                    l1851 151C                      l1747 1502                      l1739 14EC  
                    l1931 1304                      l1923 12CC                      l1771 0DEE  
                    l1843 0F46                      l1835 0F22                      l1827 0EEE  
                    l1819 0EBE                      l1763 155A                      l1755 154A  
                    l1917 12A4                      l1909 1272                      l1941 0C12  
                    l1853 151E                      l1749 150E                      l1861 1428  
                    l1925 12D2                      l1781 0E14                      l1773 0DF6  
                    l1837 0F28                      l1829 0EF6                      l1765 155C  
                    l1757 154C                      l1951 0C64                      l1943 0C50  
                    l1855 152A                      l1847 1514                      l1863 1430  
                    l1935 130C                      l1919 12B4                      l1871 0FF4  
                    l1791 0E4C                      l1783 0E1C                      l1775 0DFA  
                    l1767 0DDC                      l1839 0F2E                      l1759 1552  
                    l1881 1106                      l1961 0CC8                      l1953 0C7A  
                    l1945 0C52                      l1937 0C06                      l1857 152C  
                    l1849 1516                      l1865 144C                      l1929 12F2  
                    l1873 1000                      l1793 0E52                      l1785 0E2E  
                    l1777 0E08                      l1769 0DE0                      l1891 113E  
                    l1883 110E                      l1963 0CCC                      l1955 0CB8  
                    l1947 0C54                      l1939 0C0A                      l1859 1538  
                    l1867 144E                      l1971 1314                      l1875 100E  
                    l1795 0E68                      l1787 0E36                      l1779 0E10  
                    l1893 1144                      l1885 1120                      l1965 0CE2  
                    l1957 0CBA                      l1949 0C60                      l1981 1332  
                    l1973 1318                      l1877 102E                      l1797 0E70  
                    l1789 0E3E                      l1869 147A                      l1895 115A  
                    l1887 1128                      l1959 0CBC                      l1967 0CE8  
                    l1983 1344                      l1879 1040                      l1799 0E72  
                    l1991 15A6                      l1897 1162                      l1889 1130  
                    l1969 0CFA                      l1985 1350                      l1993 15B0  
                    l1899 1164                      l1995 1372                      l1987 1354  
                    l1979 1320                      l1997 1376                      l1989 15A0  
                    l1999 1382                      STR_1 0623                      STR_2 0605  
                    STR_3 065D                      STR_4 0641                      STR_5 064D  
                    STR_6 0678                      STR_7 0682                      STR_8 064D  
                    STR_9 0614                      u1000 1296                      u1001 1292  
                    u1010 12EE                      u1011 12EA                      u1020 0C7A  
                    u1100 0AB4                      u1021 0C76                      u1101 0AB0  
                    u1030 0CE2                      u1110 0ACE                      u1031 0CDE  
                    u1111 0ACA                      u1040 0CFA                      u1200 0BB4  
                    u1120 0ADC                      u1041 0CF6                      u1201 0BB0  
                    u1121 0AD8                      u1050 1370                      u1210 0BC6  
                    u1130 0AF4                      u1051 136C                      u1211 0BC2  
                    u1131 0AF0                      u1060 0DCC                      u1220 0BD6  
                    u1140 0B0E                      u1300 08C6                      u1221 0BD2  
                    u1141 0B0A                      u1301 08C2                      u1230 0BE6  
                    u1150 0B1C                      u1070 0A76                      u1310 0910  
                    u1231 0BE2                      u1151 0B18                      u1071 0A72  
                    u1311 090C                      u1240 0BFA                      u1160 0B34  
                    u1080 0A90                      u1320 095C                      u1065 0DBA  
                    u1241 0BF6                      u1161 0B30                      u1081 0A8C  
                    u1321 0958                      u1170 0B4E                      u1090 0A9E  
                    u1330 099C                      u1250 070E                      u1171 0B4A  
                    u1091 0A9A                      u1331 0998                      u1251 070A  
                    u1180 0B5C                      u1340 09B0                      u1260 07BA  
                    u1181 0B58                      u1341 09AC                      u1261 07B6  
                    u1190 0B8A                      u1350 09C8                      u1270 084E  
                    u1191 0B86                      u1351 09C4                      u1271 084A  
                    u1360 0A12                      u1280 0890                      u1361 0A0E  
                    u1281 088C                      u1370 0A34                      u1290 08AE  
                    u1371 0A30                      u1291 08AA              __CFG_WDTPS$1 000000  
                    _cont 0040                      _main 068C              ?_ligarLedVet 0001  
                    _rand 0D00                      _seed 0077                      fsr2h 000FDA  
                    indf1 000FE7                      indf2 000FDF                      fsr1l 000FE1  
                    fsr2l 000FD9                      prodl 000FF3                      start 0000  
          ??_configuraLed 0001              ___param_bank 000000                     ?_main 0001  
                   ?_rand 0019           __end_of___awdiv 0EA0                     STR_10 065D  
                   STR_11 0632                     STR_12 065D                     STR_13 066B  
                   STR_14 064F           __end_of___awmod 0F50           ___awdiv@divisor 0003  
          __CFG_DEBUG$OFF 000000           __end_of___lwdiv 117A           __end_of___lwmod 12B4  
         ___awdiv@counter 0005           __end_of_lcd_dat 1512           __end_of_lcd_cmd 153C  
         __end_of_lcd_str 1478                     _delay 005E                     _contD 0060  
                   _conta 0C06                     _linha 0601              main@numNivel 003E  
         __end_of_loading 1314                     _srand 14BA                     main@j 003C  
                   main@k 003A           __end_of_rtcInit 15BA                     tablat 000FF5  
                   status 000FD8           __initialization 13CE              __end_of_main 0A3C  
          ligarLedVet@num 0001              __end_of_rand 0DDC                    ??_main 002E  
                  ??_rand 001B             __activetblptr 000001           tc_tecla@timeout 0007  
          ht1380read@addr 0004                    ?_conta 0001          ___awdiv@dividend 0001  
                  ?_srand 0007     __end_of_rtcGetSeconds 15A0          __end_of_lcd_init 13CE  
                  ___omul 0FF4                 ??___awdiv 0005                 ??___awmod 0027  
              _ht1380read 0F50                 ??___lwdiv 0005                 ??___lwmod 000C  
                  _lcd_wr 15E8                    _atraso 005A          __end_of_readByte 11EC  
                  clear_0 1414          ___awdiv@quotient 0007           ___awmod@divisor 0025  
           ??_ht1380write 002A           ___awmod@counter 0027                 ??_lcd_dat 0007  
               ??_lcd_cmd 0007          __end_of_tc_tecla 0C06                 ??_lcd_str 000A  
            __pdataCOMRAM 0040                 ??_loading 000D              __mediumconst 0000  
                  tblptrh 000FF7                    tblptrl 000FF6                 ??_rtcInit 002E  
                  tblptru 000FF8                    srand@s 0007      __end_of_configuraLed 15E8  
              __accesstop 0080   __end_of__initialization 141A             ___rparam_used 000001  
    __size_of_ligarLedVet 0008            __pcstackCOMRAM 0001              __pidataBANK0 15BA  
           __end_of_conta 0D00             __end_of_linha 0605             __end_of_srand 14E8  
         _mostraPontuacao 1314       __end_of_ht1380write 1560          mostraPontuacao@i 0007  
                 ??_conta 000D                   ??_srand 0009        __size_of_atraso_ms 0064  
             tc_tecla@ret 000C               tc_tecla@tmp 000B     __end_of_rtcPutSeconds 14BA  
          main@contaCerto 0030                   ?___omul 0001           ht1380read@dados 0003  
             ?_ht1380read 0001                   ?_lcd_wr 0001       ___omul@multiplicand 0009  
               ?_lcd_init 0001   __size_of_desligarLedVet 000A                _atraso_min 005C  
               ?_readByte 0001        __size_of_writeByte 0074                 ?_tc_tecla 0007  
                 __Hparam 0000                   __Lparam 0000   __end_of_mostraPontuacao 1372  
                 ___awdiv 0DDC                   ___awmod 0EA0           __size_of___omul 009E  
                 ___lwdiv 1106                   ___lwmod 1250         __end_of_atraso_ms 1250  
            __psmallconst 0600           __size_of_lcd_wr 0008                   __pcinit 13CE  
                 __ramtop 0600                   __ptext0 068C                   __ptext1 0A3C  
                 __ptext2 14BA                   __ptext3 15A0               _ht1380write 153C  
                 __ptext4 1478                   __ptext5 153C                   __ptext6 0EA0  
                 __ptext7 0DDC                   __ptext8 1582                   __ptext9 0F50  
                 _lcd_dat 14E8                   _lcd_cmd 1512                   _lcd_str 1428  
   __size_of_configuraLed 0008                   _loading 12B4          ___awmod@dividend 0023  
                 _rtcInit 15A0                   _numeros 004A                _seqCorreta 0069  
                 main@aux 0032                   main@tmp 0036                ??_lcd_init 0008  
    end_of_initialization 141A                _seqTeclada 0062       __size_of_ht1380read 00A4  
          ___omul@product 0011                ??_readByte 0001                ??_tc_tecla 0009  
                 postdec1 000FE5                   postdec2 000FDD                   postinc0 000FEE  
                 postinc1 000FE6                   postinc2 000FDE              _configuraLed 15E0  
         ht1380write@addr 002A         __end_of_writeByte 1106                lcd_dat@val 0007  
              lcd_cmd@val 0007         desligarLedVet@num 0001                lcd_str@str 0008  
        ?_mostraPontuacao 0001      rtcPutSeconds@seconds 002D                atraso_ms@i 0003  
              atraso_ms@j 0005                atraso_ms@k 0006                atraso_ms@t 0001  
          __end_of___omul 1092             __pidataCOMRAM 1560            __end_of_lcd_wr 15F0  
  __size_of_rtcGetSeconds 001E       start_initialization 13CE            _desligarLedVet 15CE  
           ??_ligarLedVet 0001         ___omul@multiplier 0001                  ??___omul 0011  
            ??_ht1380read 0003                  ??_lcd_wr 0001               __pdataBANK0 0080  
             __pbssCOMRAM 0062    __end_of_desligarLedVet 15D8        __end_of_ht1380read 0FF4  
       __size_of_lcd_init 005C             _rtcGetSeconds 1582         __size_of_readByte 0072  
              tc_tecla@to 0009          ___lwdiv@dividend 0001         __size_of_tc_tecla 01CA  
     __end_of_ligarLedVet 15E0                  ?___awdiv 0001                  ?___awmod 0023  
                ?___lwdiv 0001                  ?___lwmod 0008        rtcGetSeconds@value 0006  
            ?_ht1380write 0029                  ?_lcd_dat 0001                  ?_lcd_cmd 0001  
                ?_lcd_str 0008                 _atraso_ms 11EC               __smallconst 0600  
                ?_loading 0001                  ?_rtcInit 0001           ?_desligarLedVet 0001  
  __size_of_rtcPutSeconds 0042          ___lwdiv@quotient 0005            __size_of_conta 00FA  
          __size_of_srand 002E            ?_rtcGetSeconds 0001                 _pontuacao 0074  
               main@i_124 0034                 main@i_117 0037                ?_atraso_ms 0001  
               lcd_wr@val 0001                 main@nivel 0038             readByte@dados 0001  
               _writeByte 1092                 copy_data0 13E2                 copy_data1 1402  
             _ligarLedVet 15D8                  __Hrparam 0000                 readByte@i 0002  
                __Lrparam 0000             _rtcPutSeconds 1478              __Lsmallconst 0600  
        __size_of___awdiv 00C4          __size_of___awmod 00B0          __size_of___lwdiv 0074  
        __size_of___lwmod 0064          __size_of_lcd_dat 002A          __size_of_lcd_cmd 002A  
        __size_of_lcd_str 0050                 tc_tecla@i 000D          __size_of_loading 0060  
         ___lwdiv@divisor 0003           ___lwdiv@counter 0007                  __ptext10 1092  
                __ptext11 117A                  __ptext20 14E8                  __ptext12 0D00  
                __ptext21 1372                  __ptext13 0FF4                  __ptext22 1512  
                __ptext14 1314                  __ptext23 15E8                  __ptext15 15D8  
                __ptext24 11EC                  __ptext16 15CE                  __ptext25 0C06  
                __ptext17 15E0                  __ptext26 1250                  __ptext18 12B4  
                __ptext27 1106                  __ptext19 1428          __size_of_rtcInit 001A  
              ?_writeByte 0001                  _lcd_init 1372           ??_rtcGetSeconds 0005  
                _readByte 117A             __size_of_main 03B0             __size_of_rand 00DC  
                _tc_tecla 0A3C            ?_rtcPutSeconds 0001                writeByte@i 0002  
                lcd_str@i 000C               ??_atraso_ms 0003  __size_of_mostraPontuacao 005E  
    __size_of_ht1380write 0024                  loading@i 000D          ___lwmod@dividend 0008  
          writeByte@dados 0001               _valores7seg 0080          ??_desligarLedVet 0001  
         ___lwmod@divisor 000A          ht1380write@dados 0029           ___lwmod@counter 000C  
             ??_writeByte 0001              _pontuacaoLed 0054           ??_rtcPutSeconds 002B  
